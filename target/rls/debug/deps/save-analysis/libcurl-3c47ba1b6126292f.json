{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34","program":"/home/flux/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","curl","/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"openssl-probe\"","--cfg","feature=\"openssl-sys\"","--cfg","feature=\"ssl\"","-C","metadata=3c47ba1b6126292f","-C","extra-filename=-3c47ba1b6126292f","--out-dir","/home/flux/.git/blackhosts_branch/master/target/rls/debug/deps","-L","dependency=/home/flux/.git/blackhosts_branch/master/target/rls/debug/deps","--extern","curl_sys=/home/flux/.git/blackhosts_branch/master/target/rls/debug/deps/libcurl_sys-1ff86a345ae526fe.rmeta","--extern","libc=/home/flux/.git/blackhosts_branch/master/target/rls/debug/deps/liblibc-e5c16a92aec8b20b.rmeta","--extern","openssl_probe=/home/flux/.git/blackhosts_branch/master/target/rls/debug/deps/libopenssl_probe-42554d192812dec9.rmeta","--extern","openssl_sys=/home/flux/.git/blackhosts_branch/master/target/rls/debug/deps/libopenssl_sys-d3316625b80c6889.rmeta","--extern","socket2=/home/flux/.git/blackhosts_branch/master/target/rls/debug/deps/libsocket2-b588e5aea3161a4e.rmeta","--cap-lints","allow","--cfg","need_openssl_probe","-L","native=/home/flux/.git/blackhosts_branch/master/target/rls/debug/build/curl-sys-cc1859a8a353bcbe/out/build","--error-format=json","--sysroot","/home/flux/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/flux/.git/blackhosts_branch/master/target/rls/debug/deps/libcurl-3c47ba1b6126292f.rmeta"},"prelude":{"crate_id":{"name":"curl","disambiguator":[5688797870318813670,13479787780790742935]},"crate_root":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src","external_crates":[{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[10344648486569477446,2454248652556920925]}},{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14168888756904427512,16776303916459465465]}},{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17407741297230913278,16283799328799007365]}},{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4492142733197306814,14151866605630611617]}},{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9785299734546160784,636286335322626912]}},{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[5680562745065174860,9217186745851755644]}},{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[1647702202987759035,15124534591008137148]}},{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[16711431240759211485,3970175217288203291]}},{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[125532023394459561,9172165323910118991]}},{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[17639569287364244572,9623243733363078576]}},{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[10466182059741283835,56412014413285874]}},{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[6793855748667116046,87956666511033926]}},{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15647227138251999113,1639002543540862534]}},{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[10550792004909319356,1806099500584167781]}},{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","num":15,"id":{"name":"curl_sys","disambiguator":[2710113582762257325,14940703956090381880]}},{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","num":16,"id":{"name":"libc","disambiguator":[17745677286460134610,7127220457130547334]}},{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","num":17,"id":{"name":"libz_sys","disambiguator":[17698272767133405235,15519431919540166273]}},{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","num":18,"id":{"name":"openssl_sys","disambiguator":[9271013976427960516,16621767339289186882]}},{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","num":19,"id":{"name":"socket2","disambiguator":[6211865413535184457,4779073657091754487]}},{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","num":20,"id":{"name":"cfg_if","disambiguator":[1891710302102085934,8077733943645503960]}},{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","num":21,"id":{"name":"openssl_probe","disambiguator":[15726624682172128879,13409506936949241349]}}],"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":0,"byte_end":5539,"line_start":1,"line_end":160,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1095},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":2573,"byte_end":2578,"line_start":75,"line_end":75,"column_start":17,"column_end":22},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1120},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":2580,"byte_end":2589,"line_start":75,"line_end":75,"column_start":24,"column_end":33},"alias_span":null,"name":"FormError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1112},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":2591,"byte_end":2601,"line_start":75,"line_end":75,"column_start":35,"column_end":45},"alias_span":null,"name":"MultiError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1104},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":2603,"byte_end":2613,"line_start":75,"line_end":75,"column_start":47,"column_end":57},"alias_span":null,"name":"ShareError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1128},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":2646,"byte_end":2655,"line_start":78,"line_end":78,"column_start":19,"column_end":28},"alias_span":null,"name":"Protocols","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":152},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":2657,"byte_end":2664,"line_start":78,"line_end":78,"column_start":30,"column_end":37},"alias_span":null,"name":"Version","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":218},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/mod.rs","byte_start":39464,"byte_end":39468,"line_start":16,"line_end":16,"column_start":22,"column_end":26},"alias_span":null,"name":"Form","value":"","parent":{"krate":0,"index":207}},{"kind":"Use","ref_id":{"krate":0,"index":224},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/mod.rs","byte_start":39470,"byte_end":39474,"line_start":16,"line_end":16,"column_start":28,"column_end":32},"alias_span":null,"name":"Part","value":"","parent":{"krate":0,"index":207}},{"kind":"Use","ref_id":{"krate":0,"index":1135},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/mod.rs","byte_start":39500,"byte_end":39504,"line_start":17,"line_end":17,"column_start":24,"column_end":28},"alias_span":null,"name":"Easy","value":"","parent":{"krate":0,"index":207}},{"kind":"Use","ref_id":{"krate":0,"index":300},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/mod.rs","byte_start":39506,"byte_end":39514,"line_start":17,"line_end":17,"column_start":30,"column_end":38},"alias_span":null,"name":"Transfer","value":"","parent":{"krate":0,"index":207}},{"kind":"Use","ref_id":{"krate":0,"index":1327},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/mod.rs","byte_start":39541,"byte_end":39545,"line_start":18,"line_end":18,"column_start":25,"column_end":29},"alias_span":null,"name":"Auth","value":"","parent":{"krate":0,"index":207}},{"kind":"Use","ref_id":{"krate":0,"index":1312},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/mod.rs","byte_start":39547,"byte_end":39552,"line_start":18,"line_end":18,"column_start":31,"column_end":36},"alias_span":null,"name":"NetRc","value":"","parent":{"krate":0,"index":207}},{"kind":"Use","ref_id":{"krate":0,"index":1151},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/mod.rs","byte_start":39554,"byte_end":39563,"line_start":18,"line_end":18,"column_start":38,"column_end":47},"alias_span":null,"name":"ProxyType","value":"","parent":{"krate":0,"index":207}},{"kind":"Use","ref_id":{"krate":0,"index":1331},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/mod.rs","byte_start":39565,"byte_end":39571,"line_start":18,"line_end":18,"column_start":49,"column_end":55},"alias_span":null,"name":"SslOpt","value":"","parent":{"krate":0,"index":207}},{"kind":"Use","ref_id":{"krate":0,"index":599},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/mod.rs","byte_start":39598,"byte_end":39603,"line_start":19,"line_end":19,"column_start":25,"column_end":30},"alias_span":null,"name":"Easy2","value":"","parent":{"krate":0,"index":207}},{"kind":"Use","ref_id":{"krate":0,"index":586},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/mod.rs","byte_start":39605,"byte_end":39612,"line_start":19,"line_end":19,"column_start":32,"column_end":39},"alias_span":null,"name":"Handler","value":"","parent":{"krate":0,"index":207}},{"kind":"Use","ref_id":{"krate":0,"index":1208},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/mod.rs","byte_start":39639,"byte_end":39650,"line_start":20,"line_end":20,"column_start":25,"column_end":36},"alias_span":null,"name":"HttpVersion","value":"","parent":{"krate":0,"index":207}},{"kind":"Use","ref_id":{"krate":0,"index":1193},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/mod.rs","byte_start":39652,"byte_end":39661,"line_start":20,"line_end":20,"column_start":38,"column_end":47},"alias_span":null,"name":"IpResolve","value":"","parent":{"krate":0,"index":207}},{"kind":"Use","ref_id":{"krate":0,"index":1235},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/mod.rs","byte_start":39663,"byte_end":39673,"line_start":20,"line_end":20,"column_start":49,"column_end":59},"alias_span":null,"name":"SslVersion","value":"","parent":{"krate":0,"index":207}},{"kind":"Use","ref_id":{"krate":0,"index":1175},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/mod.rs","byte_start":39675,"byte_end":39688,"line_start":20,"line_end":20,"column_start":61,"column_end":74},"alias_span":null,"name":"TimeCondition","value":"","parent":{"krate":0,"index":207}},{"kind":"Use","ref_id":{"krate":0,"index":1280},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/mod.rs","byte_start":39715,"byte_end":39723,"line_start":21,"line_end":21,"column_start":25,"column_end":33},"alias_span":null,"name":"InfoType","value":"","parent":{"krate":0,"index":207}},{"kind":"Use","ref_id":{"krate":0,"index":1300},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/mod.rs","byte_start":39725,"byte_end":39734,"line_start":21,"line_end":21,"column_start":35,"column_end":44},"alias_span":null,"name":"ReadError","value":"","parent":{"krate":0,"index":207}},{"kind":"Use","ref_id":{"krate":0,"index":1265},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/mod.rs","byte_start":39736,"byte_end":39746,"line_start":21,"line_end":21,"column_start":46,"column_end":56},"alias_span":null,"name":"SeekResult","value":"","parent":{"krate":0,"index":207}},{"kind":"Use","ref_id":{"krate":0,"index":1307},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/mod.rs","byte_start":39748,"byte_end":39758,"line_start":21,"line_end":21,"column_start":58,"column_end":68},"alias_span":null,"name":"WriteError","value":"","parent":{"krate":0,"index":207}},{"kind":"Use","ref_id":{"krate":0,"index":1335},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/mod.rs","byte_start":39782,"byte_end":39786,"line_start":22,"line_end":22,"column_start":22,"column_end":26},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":207}},{"kind":"Use","ref_id":{"krate":0,"index":861},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/mod.rs","byte_start":39788,"byte_end":39792,"line_start":22,"line_end":22,"column_start":28,"column_end":32},"alias_span":null,"name":"List","value":"","parent":{"krate":0,"index":207}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":0,"byte_end":5539,"line_start":1,"line_end":160,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":15},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":207},{"krate":0,"index":916},{"krate":0,"index":1074},{"krate":0,"index":1087},{"krate":0,"index":1092},{"krate":0,"index":1094}],"decl_id":null,"docs":" Rust bindings to the libcurl C library","sig":null,"attributes":[{"value":"! Rust bindings to the libcurl C library","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":0,"byte_end":42,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":43,"byte_end":46,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This crate contains bindings for an HTTP/HTTPS client which is powered by","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":47,"byte_end":124,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"! [libcurl], the same library behind the `curl` command line tool. The API","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":125,"byte_end":201,"line_start":4,"line_end":4,"column_start":1,"column_end":77}},{"value":"! currently closely matches that of libcurl itself, except that a Rustic layer","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":202,"byte_end":282,"line_start":5,"line_end":5,"column_start":1,"column_end":81}},{"value":"! of safety is applied on top.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":283,"byte_end":315,"line_start":6,"line_end":6,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":316,"byte_end":319,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! [libcurl]: https://curl.haxx.se/libcurl/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":320,"byte_end":364,"line_start":8,"line_end":8,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":365,"byte_end":368,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! # The \"Easy\" API","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":369,"byte_end":389,"line_start":10,"line_end":10,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":390,"byte_end":393,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! The easiest way to send a request is to use the `Easy` api which corresponds","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":394,"byte_end":474,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"! to `CURL` in libcurl. This handle supports a wide variety of options and can","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":475,"byte_end":555,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"! be used to make a single blocking request in a thread. Callbacks can be","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":556,"byte_end":631,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"! specified to deal with data as it arrives and a handle can be reused to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":632,"byte_end":707,"line_start":15,"line_end":15,"column_start":1,"column_end":76}},{"value":"! cache connections and such.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":708,"byte_end":739,"line_start":16,"line_end":16,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":740,"byte_end":743,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! ```rust,no_run","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":744,"byte_end":762,"line_start":18,"line_end":18,"column_start":1,"column_end":19}},{"value":"! use std::io::{stdout, Write};","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":763,"byte_end":796,"line_start":19,"line_end":19,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":797,"byte_end":800,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! use curl::easy::Easy;","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":801,"byte_end":826,"line_start":21,"line_end":21,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":827,"byte_end":830,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! // Write the contents of rust-lang.org to stdout","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":831,"byte_end":883,"line_start":23,"line_end":23,"column_start":1,"column_end":53}},{"value":"! let mut easy = Easy::new();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":884,"byte_end":915,"line_start":24,"line_end":24,"column_start":1,"column_end":32}},{"value":"! easy.url(\"https://www.rust-lang.org/\").unwrap();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":916,"byte_end":968,"line_start":25,"line_end":25,"column_start":1,"column_end":53}},{"value":"! easy.write_function(|data| {","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":969,"byte_end":1001,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"!     stdout().write_all(data).unwrap();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":1002,"byte_end":1044,"line_start":27,"line_end":27,"column_start":1,"column_end":43}},{"value":"!     Ok(data.len())","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":1045,"byte_end":1067,"line_start":28,"line_end":28,"column_start":1,"column_end":23}},{"value":"! }).unwrap();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":1068,"byte_end":1084,"line_start":29,"line_end":29,"column_start":1,"column_end":17}},{"value":"! easy.perform().unwrap();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":1085,"byte_end":1113,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"! ```","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":1114,"byte_end":1121,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":1122,"byte_end":1125,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! # What about multiple concurrent HTTP requests?","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":1126,"byte_end":1177,"line_start":33,"line_end":33,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":1178,"byte_end":1181,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"! One option you have currently is to send multiple requests in multiple","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":1182,"byte_end":1256,"line_start":35,"line_end":35,"column_start":1,"column_end":75}},{"value":"! threads, but otherwise libcurl has a \"multi\" interface for doing this","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":1257,"byte_end":1330,"line_start":36,"line_end":36,"column_start":1,"column_end":74}},{"value":"! operation. Initial bindings of this interface can be found in the `multi`","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":1331,"byte_end":1408,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"! module, but feedback is welcome!","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":1409,"byte_end":1445,"line_start":38,"line_end":38,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":1446,"byte_end":1449,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"! # Where does libcurl come from?","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":1450,"byte_end":1485,"line_start":40,"line_end":40,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":1486,"byte_end":1489,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! This crate links to the `curl-sys` crate which is in turn responsible for","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":1490,"byte_end":1567,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"! acquiring and linking to the libcurl library. Currently this crate will","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":1568,"byte_end":1643,"line_start":43,"line_end":43,"column_start":1,"column_end":76}},{"value":"! build libcurl from source if one is not already detected on the system.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":1644,"byte_end":1719,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":1720,"byte_end":1723,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"! There is a large number of releases for libcurl, all with different sets of","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":1724,"byte_end":1803,"line_start":46,"line_end":46,"column_start":1,"column_end":80}},{"value":"! capabilities. Robust programs may wish to inspect `Version::get()` to test","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":1804,"byte_end":1882,"line_start":47,"line_end":47,"column_start":1,"column_end":79}},{"value":"! what features are implemented in the linked build of libcurl at runtime.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":1883,"byte_end":1959,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":1960,"byte_end":1963,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"! # Initialization","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":1964,"byte_end":1984,"line_start":50,"line_end":50,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":1985,"byte_end":1988,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"! The underlying libcurl library must be initialized before use and has","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":1989,"byte_end":2062,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"! certain requirements on how this is done. Check the documentation for","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":2063,"byte_end":2136,"line_start":53,"line_end":53,"column_start":1,"column_end":74}},{"value":"! [`init`] for more details.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":2137,"byte_end":2167,"line_start":54,"line_end":54,"column_start":1,"column_end":31}},{"value":"deny(missing_docs, missing_debug_implementations)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":2169,"byte_end":2222,"line_start":56,"line_end":56,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":1095},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":5778,"byte_end":5783,"line_start":13,"line_end":13,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":1096},{"krate":0,"index":1097}],"decl_id":null,"docs":" An error returned from various \"easy\" operations.","sig":null,"attributes":[{"value":"/ An error returned from various \"easy\" operations.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":5642,"byte_end":5695,"line_start":9,"line_end":9,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":5696,"byte_end":5699,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This structure wraps a `CURLcode`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":5700,"byte_end":5738,"line_start":11,"line_end":11,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":5946,"byte_end":5949,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<Error>::new","value":"fn (code: curl_sys::CURLcode) -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates a new error from the underlying code returned by libcurl.\n","sig":null,"attributes":[{"value":"/ Creates a new error from the underlying code returned by libcurl.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":5865,"byte_end":5934,"line_start":19,"line_end":19,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":6298,"byte_end":6307,"line_start":29,"line_end":29,"column_start":12,"column_end":21},"name":"set_extra","qualname":"<Error>::set_extra","value":"fn (&mut self, extra: String) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Stores some extra information about this error inside this error.","sig":null,"attributes":[{"value":"/ Stores some extra information about this error inside this error.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":6034,"byte_end":6103,"line_start":24,"line_end":24,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":6108,"byte_end":6111,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ This is typically used with `take_error_buf` on the easy handles to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":6116,"byte_end":6187,"line_start":26,"line_end":26,"column_start":5,"column_end":76}},{"value":"/ couple the extra `CURLOPT_ERRORBUFFER` information with an `Error` being","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":6192,"byte_end":6268,"line_start":27,"line_end":27,"column_start":5,"column_end":81}},{"value":"/ returned.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":6273,"byte_end":6286,"line_start":28,"line_end":28,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":6473,"byte_end":6496,"line_start":34,"line_end":34,"column_start":12,"column_end":35},"name":"is_unsupported_protocol","qualname":"<Error>::is_unsupported_protocol","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLE_UNSUPPORTED_PROTOCOL.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLE_UNSUPPORTED_PROTOCOL.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":6388,"byte_end":6461,"line_start":33,"line_end":33,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":6659,"byte_end":6673,"line_start":39,"line_end":39,"column_start":12,"column_end":26},"name":"is_failed_init","qualname":"<Error>::is_failed_init","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLE_FAILED_INIT.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLE_FAILED_INIT.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":6583,"byte_end":6647,"line_start":38,"line_end":38,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":6829,"byte_end":6845,"line_start":44,"line_end":44,"column_start":12,"column_end":28},"name":"is_url_malformed","qualname":"<Error>::is_url_malformed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLE_URL_MALFORMAT.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLE_URL_MALFORMAT.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":6751,"byte_end":6817,"line_start":43,"line_end":43,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":7194,"byte_end":7218,"line_start":54,"line_end":54,"column_start":12,"column_end":36},"name":"is_couldnt_resolve_proxy","qualname":"<Error>::is_couldnt_resolve_proxy","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLE_COULDNT_RESOLVE_PROXY.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLE_COULDNT_RESOLVE_PROXY.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":7108,"byte_end":7182,"line_start":53,"line_end":53,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":7391,"byte_end":7414,"line_start":59,"line_end":59,"column_start":12,"column_end":35},"name":"is_couldnt_resolve_host","qualname":"<Error>::is_couldnt_resolve_host","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLE_COULDNT_RESOLVE_HOST.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLE_COULDNT_RESOLVE_HOST.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":7306,"byte_end":7379,"line_start":58,"line_end":58,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":7581,"byte_end":7599,"line_start":64,"line_end":64,"column_start":12,"column_end":30},"name":"is_couldnt_connect","qualname":"<Error>::is_couldnt_connect","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLE_COULDNT_CONNECT.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLE_COULDNT_CONNECT.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":7501,"byte_end":7569,"line_start":63,"line_end":63,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":7766,"byte_end":7789,"line_start":69,"line_end":69,"column_start":12,"column_end":35},"name":"is_remote_access_denied","qualname":"<Error>::is_remote_access_denied","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLE_REMOTE_ACCESS_DENIED.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLE_REMOTE_ACCESS_DENIED.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":7681,"byte_end":7754,"line_start":68,"line_end":68,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":7953,"byte_end":7968,"line_start":74,"line_end":74,"column_start":12,"column_end":27},"name":"is_partial_file","qualname":"<Error>::is_partial_file","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLE_PARTIAL_FILE.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLE_PARTIAL_FILE.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":7876,"byte_end":7941,"line_start":73,"line_end":73,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":8123,"byte_end":8137,"line_start":79,"line_end":79,"column_start":12,"column_end":26},"name":"is_quote_error","qualname":"<Error>::is_quote_error","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLE_QUOTE_ERROR.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLE_QUOTE_ERROR.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":8047,"byte_end":8111,"line_start":78,"line_end":78,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":8299,"byte_end":8321,"line_start":84,"line_end":84,"column_start":12,"column_end":34},"name":"is_http_returned_error","qualname":"<Error>::is_http_returned_error","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLE_HTTP_RETURNED_ERROR.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLE_HTTP_RETURNED_ERROR.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":8215,"byte_end":8287,"line_start":83,"line_end":83,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":8482,"byte_end":8495,"line_start":89,"line_end":89,"column_start":12,"column_end":25},"name":"is_read_error","qualname":"<Error>::is_read_error","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLE_READ_ERROR.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLE_READ_ERROR.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":8407,"byte_end":8470,"line_start":88,"line_end":88,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":8648,"byte_end":8662,"line_start":94,"line_end":94,"column_start":12,"column_end":26},"name":"is_write_error","qualname":"<Error>::is_write_error","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLE_WRITE_ERROR.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLE_WRITE_ERROR.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":8572,"byte_end":8636,"line_start":93,"line_end":93,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":8818,"byte_end":8834,"line_start":99,"line_end":99,"column_start":12,"column_end":28},"name":"is_upload_failed","qualname":"<Error>::is_upload_failed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLE_UPLOAD_FAILED.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLE_UPLOAD_FAILED.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":8740,"byte_end":8806,"line_start":98,"line_end":98,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":8992,"byte_end":9008,"line_start":104,"line_end":104,"column_start":12,"column_end":28},"name":"is_out_of_memory","qualname":"<Error>::is_out_of_memory","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLE_OUT_OF_MEMORY.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLE_OUT_OF_MEMORY.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":8914,"byte_end":8980,"line_start":103,"line_end":103,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":9171,"byte_end":9192,"line_start":109,"line_end":109,"column_start":12,"column_end":33},"name":"is_operation_timedout","qualname":"<Error>::is_operation_timedout","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLE_OPERATION_TIMEDOUT.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLE_OPERATION_TIMEDOUT.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":9088,"byte_end":9159,"line_start":108,"line_end":108,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":9353,"byte_end":9367,"line_start":114,"line_end":114,"column_start":12,"column_end":26},"name":"is_range_error","qualname":"<Error>::is_range_error","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLE_RANGE_ERROR.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLE_RANGE_ERROR.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":9277,"byte_end":9341,"line_start":113,"line_end":113,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":9525,"byte_end":9543,"line_start":119,"line_end":119,"column_start":12,"column_end":30},"name":"is_http_post_error","qualname":"<Error>::is_http_post_error","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLE_HTTP_POST_ERROR.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLE_HTTP_POST_ERROR.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":9445,"byte_end":9513,"line_start":118,"line_end":118,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":9707,"byte_end":9727,"line_start":124,"line_end":124,"column_start":12,"column_end":32},"name":"is_ssl_connect_error","qualname":"<Error>::is_ssl_connect_error","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLE_SSL_CONNECT_ERROR.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLE_SSL_CONNECT_ERROR.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":9625,"byte_end":9695,"line_start":123,"line_end":123,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":9895,"byte_end":9917,"line_start":129,"line_end":129,"column_start":12,"column_end":34},"name":"is_bad_download_resume","qualname":"<Error>::is_bad_download_resume","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLE_BAD_DOWNLOAD_RESUME.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLE_BAD_DOWNLOAD_RESUME.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":9811,"byte_end":9883,"line_start":128,"line_end":128,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":10090,"byte_end":10115,"line_start":134,"line_end":134,"column_start":12,"column_end":37},"name":"is_file_couldnt_read_file","qualname":"<Error>::is_file_couldnt_read_file","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLE_FILE_COULDNT_READ_FILE.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLE_FILE_COULDNT_READ_FILE.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":10003,"byte_end":10078,"line_start":133,"line_end":133,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":10287,"byte_end":10308,"line_start":139,"line_end":139,"column_start":12,"column_end":33},"name":"is_function_not_found","qualname":"<Error>::is_function_not_found","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLE_FUNCTION_NOT_FOUND.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLE_FUNCTION_NOT_FOUND.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":10204,"byte_end":10275,"line_start":138,"line_end":138,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":10477,"byte_end":10499,"line_start":144,"line_end":144,"column_start":12,"column_end":34},"name":"is_aborted_by_callback","qualname":"<Error>::is_aborted_by_callback","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLE_ABORTED_BY_CALLBACK.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLE_ABORTED_BY_CALLBACK.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":10393,"byte_end":10465,"line_start":143,"line_end":143,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":10671,"byte_end":10695,"line_start":149,"line_end":149,"column_start":12,"column_end":36},"name":"is_bad_function_argument","qualname":"<Error>::is_bad_function_argument","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLE_BAD_FUNCTION_ARGUMENT.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLE_BAD_FUNCTION_ARGUMENT.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":10585,"byte_end":10659,"line_start":148,"line_end":148,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":10864,"byte_end":10883,"line_start":154,"line_end":154,"column_start":12,"column_end":31},"name":"is_interface_failed","qualname":"<Error>::is_interface_failed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLE_INTERFACE_FAILED.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLE_INTERFACE_FAILED.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":10783,"byte_end":10852,"line_start":153,"line_end":153,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":11049,"byte_end":11070,"line_start":159,"line_end":159,"column_start":12,"column_end":33},"name":"is_too_many_redirects","qualname":"<Error>::is_too_many_redirects","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLE_TOO_MANY_REDIRECTS.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLE_TOO_MANY_REDIRECTS.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":10966,"byte_end":11037,"line_start":158,"line_end":158,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":11234,"byte_end":11251,"line_start":164,"line_end":164,"column_start":12,"column_end":29},"name":"is_unknown_option","qualname":"<Error>::is_unknown_option","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLE_UNKNOWN_OPTION.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLE_UNKNOWN_OPTION.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":11155,"byte_end":11222,"line_start":163,"line_end":163,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":11421,"byte_end":11448,"line_start":169,"line_end":169,"column_start":12,"column_end":39},"name":"is_peer_failed_verification","qualname":"<Error>::is_peer_failed_verification","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLE_PEER_FAILED_VERIFICATION.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLE_PEER_FAILED_VERIFICATION.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":11332,"byte_end":11409,"line_start":168,"line_end":168,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":11615,"byte_end":11629,"line_start":174,"line_end":174,"column_start":12,"column_end":26},"name":"is_got_nothing","qualname":"<Error>::is_got_nothing","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLE_GOT_NOTHING.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLE_GOT_NOTHING.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":11539,"byte_end":11603,"line_start":173,"line_end":173,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":11791,"byte_end":11813,"line_start":179,"line_end":179,"column_start":12,"column_end":34},"name":"is_ssl_engine_notfound","qualname":"<Error>::is_ssl_engine_notfound","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLE_SSL_ENGINE_NOTFOUND.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLE_SSL_ENGINE_NOTFOUND.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":11707,"byte_end":11779,"line_start":178,"line_end":178,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":11984,"byte_end":12007,"line_start":184,"line_end":184,"column_start":12,"column_end":35},"name":"is_ssl_engine_setfailed","qualname":"<Error>::is_ssl_engine_setfailed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLE_SSL_ENGINE_SETFAILED.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLE_SSL_ENGINE_SETFAILED.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":11899,"byte_end":11972,"line_start":183,"line_end":183,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":12169,"byte_end":12182,"line_start":189,"line_end":189,"column_start":12,"column_end":25},"name":"is_send_error","qualname":"<Error>::is_send_error","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLE_SEND_ERROR.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLE_SEND_ERROR.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":12094,"byte_end":12157,"line_start":188,"line_end":188,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":12334,"byte_end":12347,"line_start":194,"line_end":194,"column_start":12,"column_end":25},"name":"is_recv_error","qualname":"<Error>::is_recv_error","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLE_RECV_ERROR.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLE_RECV_ERROR.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":12259,"byte_end":12322,"line_start":193,"line_end":193,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":12504,"byte_end":12522,"line_start":199,"line_end":199,"column_start":12,"column_end":30},"name":"is_ssl_certproblem","qualname":"<Error>::is_ssl_certproblem","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLE_SSL_CERTPROBLEM.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLE_SSL_CERTPROBLEM.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":12424,"byte_end":12492,"line_start":198,"line_end":198,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":12679,"byte_end":12692,"line_start":204,"line_end":204,"column_start":12,"column_end":25},"name":"is_ssl_cipher","qualname":"<Error>::is_ssl_cipher","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLE_SSL_CIPHER.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLE_SSL_CIPHER.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":12604,"byte_end":12667,"line_start":203,"line_end":203,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":12844,"byte_end":12857,"line_start":209,"line_end":209,"column_start":12,"column_end":25},"name":"is_ssl_cacert","qualname":"<Error>::is_ssl_cacert","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLE_SSL_CACERT.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLE_SSL_CACERT.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":12769,"byte_end":12832,"line_start":208,"line_end":208,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":13019,"byte_end":13042,"line_start":214,"line_end":214,"column_start":12,"column_end":35},"name":"is_bad_content_encoding","qualname":"<Error>::is_bad_content_encoding","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLE_BAD_CONTENT_ENCODING.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLE_BAD_CONTENT_ENCODING.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":12934,"byte_end":13007,"line_start":213,"line_end":213,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":13211,"byte_end":13231,"line_start":219,"line_end":219,"column_start":12,"column_end":32},"name":"is_filesize_exceeded","qualname":"<Error>::is_filesize_exceeded","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLE_FILESIZE_EXCEEDED.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLE_FILESIZE_EXCEEDED.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":13129,"byte_end":13199,"line_start":218,"line_end":218,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":13394,"byte_end":13411,"line_start":224,"line_end":224,"column_start":12,"column_end":29},"name":"is_use_ssl_failed","qualname":"<Error>::is_use_ssl_failed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLE_USE_SSL_FAILED.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLE_USE_SSL_FAILED.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":13315,"byte_end":13382,"line_start":223,"line_end":223,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":13573,"byte_end":13592,"line_start":229,"line_end":229,"column_start":12,"column_end":31},"name":"is_send_fail_rewind","qualname":"<Error>::is_send_fail_rewind","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLE_SEND_FAIL_REWIND.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLE_SEND_FAIL_REWIND.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":13492,"byte_end":13561,"line_start":228,"line_end":228,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":13761,"byte_end":13785,"line_start":234,"line_end":234,"column_start":12,"column_end":36},"name":"is_ssl_engine_initfailed","qualname":"<Error>::is_ssl_engine_initfailed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLE_SSL_ENGINE_INITFAILED.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLE_SSL_ENGINE_INITFAILED.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":13675,"byte_end":13749,"line_start":233,"line_end":233,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":13950,"byte_end":13965,"line_start":239,"line_end":239,"column_start":12,"column_end":27},"name":"is_login_denied","qualname":"<Error>::is_login_denied","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLE_LOGIN_DENIED.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLE_LOGIN_DENIED.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":13873,"byte_end":13938,"line_start":238,"line_end":238,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":14120,"byte_end":14134,"line_start":244,"line_end":244,"column_start":12,"column_end":26},"name":"is_conv_failed","qualname":"<Error>::is_conv_failed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLE_CONV_FAILED.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLE_CONV_FAILED.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":14044,"byte_end":14108,"line_start":243,"line_end":243,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":14286,"byte_end":14302,"line_start":249,"line_end":249,"column_start":12,"column_end":28},"name":"is_conv_required","qualname":"<Error>::is_conv_required","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLE_CONV_REQD.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLE_CONV_REQD.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":14212,"byte_end":14274,"line_start":248,"line_end":248,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":14461,"byte_end":14482,"line_start":254,"line_end":254,"column_start":12,"column_end":33},"name":"is_ssl_cacert_badfile","qualname":"<Error>::is_ssl_cacert_badfile","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLE_SSL_CACERT_BADFILE.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLE_SSL_CACERT_BADFILE.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":14378,"byte_end":14449,"line_start":253,"line_end":253,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":14647,"byte_end":14665,"line_start":259,"line_end":259,"column_start":12,"column_end":30},"name":"is_ssl_crl_badfile","qualname":"<Error>::is_ssl_crl_badfile","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLE_SSL_CRL_BADFILE.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLE_SSL_CRL_BADFILE.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":14567,"byte_end":14635,"line_start":258,"line_end":258,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":14831,"byte_end":14853,"line_start":264,"line_end":264,"column_start":12,"column_end":34},"name":"is_ssl_shutdown_failed","qualname":"<Error>::is_ssl_shutdown_failed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLE_SSL_SHUTDOWN_FAILED.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLE_SSL_SHUTDOWN_FAILED.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":14747,"byte_end":14819,"line_start":263,"line_end":263,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":15009,"byte_end":15017,"line_start":269,"line_end":269,"column_start":12,"column_end":20},"name":"is_again","qualname":"<Error>::is_again","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLE_AGAIN.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLE_AGAIN.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":14939,"byte_end":14997,"line_start":268,"line_end":268,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":15170,"byte_end":15189,"line_start":274,"line_end":274,"column_start":12,"column_end":31},"name":"is_ssl_issuer_error","qualname":"<Error>::is_ssl_issuer_error","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLE_SSL_ISSUER_ERROR.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLE_SSL_ISSUER_ERROR.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":15089,"byte_end":15158,"line_start":273,"line_end":273,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":15349,"byte_end":15364,"line_start":279,"line_end":279,"column_start":12,"column_end":27},"name":"is_chunk_failed","qualname":"<Error>::is_chunk_failed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLE_CHUNK_FAILED.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLE_CHUNK_FAILED.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":15272,"byte_end":15337,"line_start":278,"line_end":278,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":15513,"byte_end":15527,"line_start":284,"line_end":284,"column_start":12,"column_end":26},"name":"is_http2_error","qualname":"<Error>::is_http2_error","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLE_HTTP2.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLE_HTTP2.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":15443,"byte_end":15501,"line_start":283,"line_end":283,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":15676,"byte_end":15697,"line_start":289,"line_end":289,"column_start":12,"column_end":33},"name":"is_http2_stream_error","qualname":"<Error>::is_http2_stream_error","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLE_HTTP2_STREAM.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLE_HTTP2_STREAM.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":15599,"byte_end":15664,"line_start":288,"line_end":288,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":16075,"byte_end":16079,"line_start":299,"line_end":299,"column_start":12,"column_end":16},"name":"code","qualname":"<Error>::code","value":"fn (&self) -> curl_sys::CURLcode","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the underlying error corresponding to libcurl.\n","sig":null,"attributes":[{"value":"/ Returns the value of the underlying error corresponding to libcurl.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":15992,"byte_end":16063,"line_start":298,"line_end":298,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":16267,"byte_end":16278,"line_start":305,"line_end":305,"column_start":12,"column_end":23},"name":"description","qualname":"<Error>::description","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the general description of this error code, using curl's\n builtin `strerror`-like functionality.\n","sig":null,"attributes":[{"value":"/ Returns the general description of this error code, using curl's","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":16140,"byte_end":16208,"line_start":303,"line_end":303,"column_start":5,"column_end":73}},{"value":"/ builtin `strerror`-like functionality.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":16213,"byte_end":16255,"line_start":304,"line_end":304,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":16577,"byte_end":16594,"line_start":314,"line_end":314,"column_start":12,"column_end":29},"name":"extra_description","qualname":"<Error>::extra_description","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the extra description of this error, if any is available.\n","sig":null,"attributes":[{"value":"/ Returns the extra description of this error, if any is available.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":16496,"byte_end":16565,"line_start":313,"line_end":313,"column_start":5,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1104},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":17418,"byte_end":17428,"line_start":345,"line_end":345,"column_start":12,"column_end":22},"name":"ShareError","qualname":"::error::ShareError","value":"ShareError {  }","parent":null,"children":[{"krate":0,"index":1105}],"decl_id":null,"docs":" An error returned from \"share\" operations.","sig":null,"attributes":[{"value":"/ An error returned from \"share\" operations.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":17287,"byte_end":17333,"line_start":341,"line_end":341,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":17334,"byte_end":17337,"line_start":342,"line_end":342,"column_start":1,"column_end":4}},{"value":"/ This structure wraps a `CURLSHcode`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":17338,"byte_end":17378,"line_start":343,"line_end":343,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":17569,"byte_end":17572,"line_start":351,"line_end":351,"column_start":12,"column_end":15},"name":"new","qualname":"<ShareError>::new","value":"fn (code: curl_sys::CURLSHcode) -> ShareError","parent":null,"children":[],"decl_id":null,"docs":" Creates a new error from the underlying code returned by libcurl.\n","sig":null,"attributes":[{"value":"/ Creates a new error from the underlying code returned by libcurl.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":17488,"byte_end":17557,"line_start":350,"line_end":350,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":17733,"byte_end":17746,"line_start":356,"line_end":356,"column_start":12,"column_end":25},"name":"is_bad_option","qualname":"<ShareError>::is_bad_option","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLSHE_BAD_OPTION.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLSHE_BAD_OPTION.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":17656,"byte_end":17721,"line_start":355,"line_end":355,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":17898,"byte_end":17907,"line_start":361,"line_end":361,"column_start":12,"column_end":21},"name":"is_in_use","qualname":"<ShareError>::is_in_use","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLSHE_IN_USE.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLSHE_IN_USE.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":17825,"byte_end":17886,"line_start":360,"line_end":360,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":18056,"byte_end":18066,"line_start":366,"line_end":366,"column_start":12,"column_end":22},"name":"is_invalid","qualname":"<ShareError>::is_invalid","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLSHE_INVALID.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLSHE_INVALID.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":17982,"byte_end":18044,"line_start":365,"line_end":365,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":18214,"byte_end":18222,"line_start":371,"line_end":371,"column_start":12,"column_end":20},"name":"is_nomem","qualname":"<ShareError>::is_nomem","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLSHE_NOMEM.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLSHE_NOMEM.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":18142,"byte_end":18202,"line_start":370,"line_end":370,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":18566,"byte_end":18570,"line_start":381,"line_end":381,"column_start":12,"column_end":16},"name":"code","qualname":"<ShareError>::code","value":"fn (&self) -> curl_sys::CURLSHcode","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the underlying error corresponding to libcurl.\n","sig":null,"attributes":[{"value":"/ Returns the value of the underlying error corresponding to libcurl.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":18483,"byte_end":18554,"line_start":380,"line_end":380,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":18701,"byte_end":18712,"line_start":386,"line_end":386,"column_start":12,"column_end":23},"name":"description","qualname":"<ShareError>::description","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns curl's human-readable version of this error.\n","sig":null,"attributes":[{"value":"/ Returns curl's human-readable version of this error.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":18633,"byte_end":18689,"line_start":385,"line_end":385,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":1112},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":19480,"byte_end":19490,"line_start":418,"line_end":418,"column_start":12,"column_end":22},"name":"MultiError","qualname":"::error::MultiError","value":"MultiError {  }","parent":null,"children":[{"krate":0,"index":1113}],"decl_id":null,"docs":" An error from \"multi\" operations.","sig":null,"attributes":[{"value":"/ An error from \"multi\" operations.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":19359,"byte_end":19396,"line_start":414,"line_end":414,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":19397,"byte_end":19400,"line_start":415,"line_end":415,"column_start":1,"column_end":4}},{"value":"/ THis structure wraps a `CURLMcode`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":19401,"byte_end":19440,"line_start":416,"line_end":416,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":19630,"byte_end":19633,"line_start":424,"line_end":424,"column_start":12,"column_end":15},"name":"new","qualname":"<MultiError>::new","value":"fn (code: curl_sys::CURLMcode) -> MultiError","parent":null,"children":[],"decl_id":null,"docs":" Creates a new error from the underlying code returned by libcurl.\n","sig":null,"attributes":[{"value":"/ Creates a new error from the underlying code returned by libcurl.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":19549,"byte_end":19618,"line_start":423,"line_end":423,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":19791,"byte_end":19804,"line_start":429,"line_end":429,"column_start":12,"column_end":25},"name":"is_bad_handle","qualname":"<MultiError>::is_bad_handle","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLM_BAD_HANDLE.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLM_BAD_HANDLE.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":19716,"byte_end":19779,"line_start":428,"line_end":428,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":19961,"byte_end":19979,"line_start":434,"line_end":434,"column_start":12,"column_end":30},"name":"is_bad_easy_handle","qualname":"<MultiError>::is_bad_easy_handle","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLM_BAD_EASY_HANDLE.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLM_BAD_EASY_HANDLE.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":19881,"byte_end":19949,"line_start":433,"line_end":433,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":20139,"byte_end":20155,"line_start":439,"line_end":439,"column_start":12,"column_end":28},"name":"is_out_of_memory","qualname":"<MultiError>::is_out_of_memory","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLM_OUT_OF_MEMORY.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLM_OUT_OF_MEMORY.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":20061,"byte_end":20127,"line_start":438,"line_end":438,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":20314,"byte_end":20331,"line_start":444,"line_end":444,"column_start":12,"column_end":29},"name":"is_internal_error","qualname":"<MultiError>::is_internal_error","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLM_INTERNAL_ERROR.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLM_INTERNAL_ERROR.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":20235,"byte_end":20302,"line_start":443,"line_end":443,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":20487,"byte_end":20500,"line_start":449,"line_end":449,"column_start":12,"column_end":25},"name":"is_bad_socket","qualname":"<MultiError>::is_bad_socket","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLM_BAD_SOCKET.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLM_BAD_SOCKET.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":20412,"byte_end":20475,"line_start":448,"line_end":448,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":20656,"byte_end":20673,"line_start":454,"line_end":454,"column_start":12,"column_end":29},"name":"is_unknown_option","qualname":"<MultiError>::is_unknown_option","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLM_UNKNOWN_OPTION.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLM_UNKNOWN_OPTION.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":20577,"byte_end":20644,"line_start":453,"line_end":453,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":20837,"byte_end":20852,"line_start":459,"line_end":459,"column_start":12,"column_end":27},"name":"is_call_perform","qualname":"<MultiError>::is_call_perform","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURLM_CALL_MULTI_PERFORM.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURLM_CALL_MULTI_PERFORM.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":20754,"byte_end":20825,"line_start":458,"line_end":458,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":21206,"byte_end":21210,"line_start":469,"line_end":469,"column_start":12,"column_end":16},"name":"code","qualname":"<MultiError>::code","value":"fn (&self) -> curl_sys::CURLMcode","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the underlying error corresponding to libcurl.\n","sig":null,"attributes":[{"value":"/ Returns the value of the underlying error corresponding to libcurl.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":21123,"byte_end":21194,"line_start":468,"line_end":468,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":21344,"byte_end":21355,"line_start":474,"line_end":474,"column_start":12,"column_end":23},"name":"description","qualname":"<MultiError>::description","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns curl's human-readable description of this error.\n","sig":null,"attributes":[{"value":"/ Returns curl's human-readable description of this error.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":21272,"byte_end":21332,"line_start":473,"line_end":473,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":1120},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":22127,"byte_end":22136,"line_start":504,"line_end":504,"column_start":12,"column_end":21},"name":"FormError","qualname":"::error::FormError","value":"FormError {  }","parent":null,"children":[{"krate":0,"index":1121}],"decl_id":null,"docs":" An error from \"form add\" operations.","sig":null,"attributes":[{"value":"/ An error from \"form add\" operations.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":22000,"byte_end":22040,"line_start":500,"line_end":500,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":22041,"byte_end":22044,"line_start":501,"line_end":501,"column_start":1,"column_end":4}},{"value":"/ THis structure wraps a `CURLFORMcode`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":22045,"byte_end":22087,"line_start":502,"line_end":502,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":22278,"byte_end":22281,"line_start":510,"line_end":510,"column_start":12,"column_end":15},"name":"new","qualname":"<FormError>::new","value":"fn (code: curl_sys::CURLFORMcode) -> FormError","parent":null,"children":[],"decl_id":null,"docs":" Creates a new error from the underlying code returned by libcurl.\n","sig":null,"attributes":[{"value":"/ Creates a new error from the underlying code returned by libcurl.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":22197,"byte_end":22266,"line_start":509,"line_end":509,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":22443,"byte_end":22452,"line_start":515,"line_end":515,"column_start":12,"column_end":21},"name":"is_memory","qualname":"<FormError>::is_memory","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURL_FORMADD_MEMORY.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURL_FORMADD_MEMORY.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":22365,"byte_end":22431,"line_start":514,"line_end":514,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":22616,"byte_end":22631,"line_start":520,"line_end":520,"column_start":12,"column_end":27},"name":"is_option_twice","qualname":"<FormError>::is_option_twice","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURL_FORMADD_OPTION_TWICE.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURL_FORMADD_OPTION_TWICE.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":22532,"byte_end":22604,"line_start":519,"line_end":519,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":22793,"byte_end":22800,"line_start":525,"line_end":525,"column_start":12,"column_end":19},"name":"is_null","qualname":"<FormError>::is_null","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURL_FORMADD_NULL.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURL_FORMADD_NULL.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":22717,"byte_end":22781,"line_start":524,"line_end":524,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":22964,"byte_end":22981,"line_start":530,"line_end":530,"column_start":12,"column_end":29},"name":"is_unknown_option","qualname":"<FormError>::is_unknown_option","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURL_FORMADD_UNKNOWN_OPTION.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURL_FORMADD_UNKNOWN_OPTION.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":22878,"byte_end":22952,"line_start":529,"line_end":529,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":23151,"byte_end":23164,"line_start":535,"line_end":535,"column_start":12,"column_end":25},"name":"is_incomplete","qualname":"<FormError>::is_incomplete","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURL_FORMADD_INCOMPLETE.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURL_FORMADD_INCOMPLETE.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":23069,"byte_end":23139,"line_start":534,"line_end":534,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":23333,"byte_end":23349,"line_start":540,"line_end":540,"column_start":12,"column_end":28},"name":"is_illegal_array","qualname":"<FormError>::is_illegal_array","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURL_FORMADD_ILLEGAL_ARRAY.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURL_FORMADD_ILLEGAL_ARRAY.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":23248,"byte_end":23321,"line_start":539,"line_end":539,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":23516,"byte_end":23527,"line_start":545,"line_end":545,"column_start":12,"column_end":23},"name":"is_disabled","qualname":"<FormError>::is_disabled","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this error corresponds to CURL_FORMADD_DISABLED.\n","sig":null,"attributes":[{"value":"/ Returns whether this error corresponds to CURL_FORMADD_DISABLED.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":23436,"byte_end":23504,"line_start":544,"line_end":544,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":23692,"byte_end":23696,"line_start":550,"line_end":550,"column_start":12,"column_end":16},"name":"code","qualname":"<FormError>::code","value":"fn (&self) -> curl_sys::CURLFORMcode","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the underlying error corresponding to libcurl.\n","sig":null,"attributes":[{"value":"/ Returns the value of the underlying error corresponding to libcurl.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":23609,"byte_end":23680,"line_start":549,"line_end":549,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":23833,"byte_end":23844,"line_start":555,"line_end":555,"column_start":12,"column_end":23},"name":"description","qualname":"<FormError>::description","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns a human-readable description of this error code.\n","sig":null,"attributes":[{"value":"/ Returns a human-readable description of this error code.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":23761,"byte_end":23821,"line_start":554,"line_end":554,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":152},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":25862,"byte_end":25869,"line_start":9,"line_end":9,"column_start":12,"column_end":19},"name":"Version","qualname":"::version::Version","value":"Version {  }","parent":null,"children":[{"krate":0,"index":153}],"decl_id":null,"docs":" Version information about libcurl and the capabilities that it supports.\n","sig":null,"attributes":[{"value":"/ Version information about libcurl and the capabilities that it supports.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":25774,"byte_end":25850,"line_start":8,"line_end":8,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":1128},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":26081,"byte_end":26090,"line_start":18,"line_end":18,"column_start":12,"column_end":21},"name":"Protocols","qualname":"::version::Protocols","value":"Protocols {  }","parent":null,"children":[{"krate":0,"index":1130},{"krate":0,"index":1131}],"decl_id":null,"docs":" An iterator over the list of protocols a version supports.\n","sig":null,"attributes":[{"value":"/ An iterator over the list of protocols a version supports.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":25990,"byte_end":26052,"line_start":16,"line_end":16,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":26265,"byte_end":26268,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"name":"num","qualname":"<Version>::num","value":"fn () -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Returns the libcurl version that this library is currently linked against.\n","sig":null,"attributes":[{"value":"/ Returns the libcurl version that this library is currently linked against.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":26175,"byte_end":26253,"line_start":24,"line_end":24,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":26541,"byte_end":26544,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"get","qualname":"<Version>::get","value":"fn () -> Version","parent":null,"children":[],"decl_id":null,"docs":" Returns the libcurl version that this library is currently linked against.\n","sig":null,"attributes":[{"value":"/ Returns the libcurl version that this library is currently linked against.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":26451,"byte_end":26529,"line_start":32,"line_end":32,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":26806,"byte_end":26813,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"version","qualname":"<Version>::version","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the human readable version string,\n","sig":null,"attributes":[{"value":"/ Returns the human readable version string,","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":26748,"byte_end":26794,"line_start":41,"line_end":41,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":27120,"byte_end":27131,"line_start":50,"line_end":50,"column_start":12,"column_end":23},"name":"version_num","qualname":"<Version>::version_num","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns a numeric representation of the version number","sig":null,"attributes":[{"value":"/ Returns a numeric representation of the version number","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":26903,"byte_end":26961,"line_start":46,"line_end":46,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":26966,"byte_end":26969,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ This is a 24 bit number made up of the major number, minor, and then","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":26974,"byte_end":27046,"line_start":48,"line_end":48,"column_start":5,"column_end":77}},{"value":"/ patch number. For example 7.9.8 will return 0x070908.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":27051,"byte_end":27108,"line_start":49,"line_end":49,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":27361,"byte_end":27365,"line_start":57,"line_end":57,"column_start":12,"column_end":16},"name":"host","qualname":"<Version>::host","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns a human readable string of the host libcurl is built for.","sig":null,"attributes":[{"value":"/ Returns a human readable string of the host libcurl is built for.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":27211,"byte_end":27280,"line_start":54,"line_end":54,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":27285,"byte_end":27288,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This is discovered as part of the build environment.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":27293,"byte_end":27349,"line_start":56,"line_end":56,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":27505,"byte_end":27517,"line_start":62,"line_end":62,"column_start":12,"column_end":24},"name":"feature_ipv6","qualname":"<Version>::feature_ipv6","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether libcurl supports IPv6\n","sig":null,"attributes":[{"value":"/ Returns whether libcurl supports IPv6","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":27452,"byte_end":27493,"line_start":61,"line_end":61,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":27645,"byte_end":27656,"line_start":67,"line_end":67,"column_start":12,"column_end":23},"name":"feature_ssl","qualname":"<Version>::feature_ssl","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether libcurl supports SSL\n","sig":null,"attributes":[{"value":"/ Returns whether libcurl supports SSL","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":27593,"byte_end":27633,"line_start":66,"line_end":66,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":27801,"byte_end":27813,"line_start":72,"line_end":72,"column_start":12,"column_end":24},"name":"feature_libz","qualname":"<Version>::feature_libz","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether libcurl supports HTTP deflate via libz\n","sig":null,"attributes":[{"value":"/ Returns whether libcurl supports HTTP deflate via libz","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":27731,"byte_end":27789,"line_start":71,"line_end":71,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":27947,"byte_end":27959,"line_start":77,"line_end":77,"column_start":12,"column_end":24},"name":"feature_ntlm","qualname":"<Version>::feature_ntlm","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether libcurl supports HTTP NTLM\n","sig":null,"attributes":[{"value":"/ Returns whether libcurl supports HTTP NTLM","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":27889,"byte_end":27935,"line_start":76,"line_end":76,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":28101,"byte_end":28122,"line_start":82,"line_end":82,"column_start":12,"column_end":33},"name":"feature_gss_negotiate","qualname":"<Version>::feature_gss_negotiate","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether libcurl supports HTTP GSSNEGOTIATE\n","sig":null,"attributes":[{"value":"/ Returns whether libcurl supports HTTP GSSNEGOTIATE","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":28035,"byte_end":28089,"line_start":81,"line_end":81,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":28279,"byte_end":28292,"line_start":87,"line_end":87,"column_start":12,"column_end":25},"name":"feature_debug","qualname":"<Version>::feature_debug","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether libcurl was built with debug capabilities\n","sig":null,"attributes":[{"value":"/ Returns whether libcurl was built with debug capabilities","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":28206,"byte_end":28267,"line_start":86,"line_end":86,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":28445,"byte_end":28459,"line_start":92,"line_end":92,"column_start":12,"column_end":26},"name":"feature_spnego","qualname":"<Version>::feature_spnego","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether libcurl was built with SPNEGO authentication\n","sig":null,"attributes":[{"value":"/ Returns whether libcurl was built with SPNEGO authentication","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":28369,"byte_end":28433,"line_start":91,"line_end":91,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":28610,"byte_end":28627,"line_start":97,"line_end":97,"column_start":12,"column_end":29},"name":"feature_largefile","qualname":"<Version>::feature_largefile","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether libcurl was built with large file support\n","sig":null,"attributes":[{"value":"/ Returns whether libcurl was built with large file support","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":28537,"byte_end":28598,"line_start":96,"line_end":96,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":28829,"byte_end":28840,"line_start":103,"line_end":103,"column_start":12,"column_end":23},"name":"feature_idn","qualname":"<Version>::feature_idn","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether libcurl was built with support for IDNA, domain names\n with international letters.\n","sig":null,"attributes":[{"value":"/ Returns whether libcurl was built with support for IDNA, domain names","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":28708,"byte_end":28781,"line_start":101,"line_end":101,"column_start":5,"column_end":78}},{"value":"/ with international letters.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":28786,"byte_end":28817,"line_start":102,"line_end":102,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":28987,"byte_end":28999,"line_start":108,"line_end":108,"column_start":12,"column_end":24},"name":"feature_sspi","qualname":"<Version>::feature_sspi","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether libcurl was built with support for SSPI.\n","sig":null,"attributes":[{"value":"/ Returns whether libcurl was built with support for SSPI.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":28915,"byte_end":28975,"line_start":107,"line_end":107,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":29156,"byte_end":29173,"line_start":113,"line_end":113,"column_start":12,"column_end":29},"name":"feature_async_dns","qualname":"<Version>::feature_async_dns","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether libcurl was built with asynchronous name lookups.\n","sig":null,"attributes":[{"value":"/ Returns whether libcurl was built with asynchronous name lookups.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":29075,"byte_end":29144,"line_start":112,"line_end":112,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":29351,"byte_end":29363,"line_start":119,"line_end":119,"column_start":12,"column_end":24},"name":"feature_conv","qualname":"<Version>::feature_conv","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether libcurl was built with support for character\n conversions.\n","sig":null,"attributes":[{"value":"/ Returns whether libcurl was built with support for character","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":29254,"byte_end":29318,"line_start":117,"line_end":117,"column_start":5,"column_end":69}},{"value":"/ conversions.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":29323,"byte_end":29339,"line_start":118,"line_end":118,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":29514,"byte_end":29533,"line_start":124,"line_end":124,"column_start":12,"column_end":31},"name":"feature_tlsauth_srp","qualname":"<Version>::feature_tlsauth_srp","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether libcurl was built with support for TLS-SRP.\n","sig":null,"attributes":[{"value":"/ Returns whether libcurl was built with support for TLS-SRP.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":29439,"byte_end":29502,"line_start":123,"line_end":123,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":29725,"byte_end":29740,"line_start":130,"line_end":130,"column_start":12,"column_end":27},"name":"feature_ntlm_wb","qualname":"<Version>::feature_ntlm_wb","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether libcurl was built with support for NTLM delegation to\n winbind helper.\n","sig":null,"attributes":[{"value":"/ Returns whether libcurl was built with support for NTLM delegation to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":29616,"byte_end":29689,"line_start":128,"line_end":128,"column_start":5,"column_end":78}},{"value":"/ winbind helper.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":29694,"byte_end":29713,"line_start":129,"line_end":129,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":29904,"byte_end":29930,"line_start":135,"line_end":135,"column_start":12,"column_end":38},"name":"feature_unix_domain_socket","qualname":"<Version>::feature_unix_domain_socket","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether libcurl was built with support for unix domain socket\n","sig":null,"attributes":[{"value":"/ Returns whether libcurl was built with support for unix domain socket","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":29819,"byte_end":29892,"line_start":134,"line_end":134,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":30087,"byte_end":30100,"line_start":140,"line_end":140,"column_start":12,"column_end":25},"name":"feature_http2","qualname":"<Version>::feature_http2","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether libcurl was built with support for HTTP2.\n","sig":null,"attributes":[{"value":"/ Returns whether libcurl was built with support for HTTP2.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":30014,"byte_end":30075,"line_start":139,"line_end":139,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":30250,"byte_end":30263,"line_start":145,"line_end":145,"column_start":12,"column_end":25},"name":"feature_http3","qualname":"<Version>::feature_http3","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether libcurl was built with support for HTTP3.\n","sig":null,"attributes":[{"value":"/ Returns whether libcurl was built with support for HTTP3.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":30177,"byte_end":30238,"line_start":144,"line_end":144,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":30414,"byte_end":30428,"line_start":150,"line_end":150,"column_start":12,"column_end":26},"name":"feature_brotli","qualname":"<Version>::feature_brotli","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether libcurl was built with support for Brotli.\n","sig":null,"attributes":[{"value":"/ Returns whether libcurl was built with support for Brotli.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":30340,"byte_end":30402,"line_start":149,"line_end":149,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":30713,"byte_end":30724,"line_start":160,"line_end":160,"column_start":12,"column_end":23},"name":"ssl_version","qualname":"<Version>::ssl_version","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the version of OpenSSL that is used, or None if there is no SSL\n support.\n","sig":null,"attributes":[{"value":"/ Returns the version of OpenSSL that is used, or None if there is no SSL","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":30609,"byte_end":30684,"line_start":158,"line_end":158,"column_start":5,"column_end":80}},{"value":"/ support.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":30689,"byte_end":30701,"line_start":159,"line_end":159,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":30919,"byte_end":30931,"line_start":166,"line_end":166,"column_start":12,"column_end":24},"name":"libz_version","qualname":"<Version>::libz_version","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the version of libz that is used, or None if there is no libz\n support.\n","sig":null,"attributes":[{"value":"/ Returns the version of libz that is used, or None if there is no libz","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":30817,"byte_end":30890,"line_start":164,"line_end":164,"column_start":5,"column_end":78}},{"value":"/ support.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":30895,"byte_end":30907,"line_start":165,"line_end":165,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":31132,"byte_end":31141,"line_start":172,"line_end":172,"column_start":12,"column_end":21},"name":"protocols","qualname":"<Version>::protocols","value":"fn (&self) -> Protocols","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the list of protocols that this build of\n libcurl supports.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the list of protocols that this build of","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":31025,"byte_end":31094,"line_start":170,"line_end":170,"column_start":5,"column_end":74}},{"value":"/ libcurl supports.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":31099,"byte_end":31120,"line_start":171,"line_end":171,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":31420,"byte_end":31432,"line_start":183,"line_end":183,"column_start":12,"column_end":24},"name":"ares_version","qualname":"<Version>::ares_version","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" If available, the human readable version of ares that libcurl is linked\n against.\n","sig":null,"attributes":[{"value":"/ If available, the human readable version of ares that libcurl is linked","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":31316,"byte_end":31391,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ against.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":31396,"byte_end":31408,"line_start":182,"line_end":182,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":31746,"byte_end":31762,"line_start":194,"line_end":194,"column_start":12,"column_end":28},"name":"ares_version_num","qualname":"<Version>::ares_version_num","value":"fn (&self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" If available, the version of ares that libcurl is linked against.\n","sig":null,"attributes":[{"value":"/ If available, the version of ares that libcurl is linked against.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":31665,"byte_end":31734,"line_start":193,"line_end":193,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":32083,"byte_end":32097,"line_start":205,"line_end":205,"column_start":12,"column_end":26},"name":"libidn_version","qualname":"<Version>::libidn_version","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" If available, the version of libidn that libcurl is linked against.\n","sig":null,"attributes":[{"value":"/ If available, the version of libidn that libcurl is linked against.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":32000,"byte_end":32071,"line_start":204,"line_end":204,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":32408,"byte_end":32425,"line_start":216,"line_end":216,"column_start":12,"column_end":29},"name":"iconv_version_num","qualname":"<Version>::iconv_version_num","value":"fn (&self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" If available, the version of iconv libcurl is linked against.\n","sig":null,"attributes":[{"value":"/ If available, the version of iconv libcurl is linked against.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":32331,"byte_end":32396,"line_start":215,"line_end":215,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":32751,"byte_end":32765,"line_start":227,"line_end":227,"column_start":12,"column_end":26},"name":"libssh_version","qualname":"<Version>::libssh_version","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" If available, the version of libssh that libcurl is linked against.\n","sig":null,"attributes":[{"value":"/ If available, the version of libssh that libcurl is linked against.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":32668,"byte_end":32739,"line_start":226,"line_end":226,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":33086,"byte_end":33104,"line_start":238,"line_end":238,"column_start":12,"column_end":30},"name":"brotli_version_num","qualname":"<Version>::brotli_version_num","value":"fn (&self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" If available, the version of brotli libcurl is linked against.\n","sig":null,"attributes":[{"value":"/ If available, the version of brotli libcurl is linked against.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":33008,"byte_end":33074,"line_start":237,"line_end":237,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":33418,"byte_end":33432,"line_start":249,"line_end":249,"column_start":12,"column_end":26},"name":"brotli_version","qualname":"<Version>::brotli_version","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" If available, the version of brotli libcurl is linked against.\n","sig":null,"attributes":[{"value":"/ If available, the version of brotli libcurl is linked against.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":33340,"byte_end":33406,"line_start":248,"line_end":248,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":33753,"byte_end":33772,"line_start":260,"line_end":260,"column_start":12,"column_end":31},"name":"nghttp2_version_num","qualname":"<Version>::nghttp2_version_num","value":"fn (&self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" If available, the version of nghttp2 libcurl is linked against.\n","sig":null,"attributes":[{"value":"/ If available, the version of nghttp2 libcurl is linked against.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":33674,"byte_end":33741,"line_start":259,"line_end":259,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":34088,"byte_end":34103,"line_start":271,"line_end":271,"column_start":12,"column_end":27},"name":"nghttp2_version","qualname":"<Version>::nghttp2_version","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" If available, the version of nghttp2 libcurl is linked against.\n","sig":null,"attributes":[{"value":"/ If available, the version of nghttp2 libcurl is linked against.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":34009,"byte_end":34076,"line_start":270,"line_end":270,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":34422,"byte_end":34434,"line_start":282,"line_end":282,"column_start":12,"column_end":24},"name":"quic_version","qualname":"<Version>::quic_version","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" If available, the version of quic libcurl is linked against.\n","sig":null,"attributes":[{"value":"/ If available, the version of quic libcurl is linked against.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":34346,"byte_end":34410,"line_start":281,"line_end":281,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":34743,"byte_end":34749,"line_start":293,"line_end":293,"column_start":12,"column_end":18},"name":"cainfo","qualname":"<Version>::cainfo","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" If available, the built-in default of CURLOPT_CAINFO.\n","sig":null,"attributes":[{"value":"/ If available, the built-in default of CURLOPT_CAINFO.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":34674,"byte_end":34731,"line_start":292,"line_end":292,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":35054,"byte_end":35060,"line_start":304,"line_end":304,"column_start":12,"column_end":18},"name":"capath","qualname":"<Version>::capath","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" If available, the built-in default of CURLOPT_CAPATH.\n","sig":null,"attributes":[{"value":"/ If available, the built-in default of CURLOPT_CAPATH.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":34985,"byte_end":35042,"line_start":303,"line_end":303,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":35420,"byte_end":35432,"line_start":317,"line_end":317,"column_start":12,"column_end":24},"name":"zstd_ver_num","qualname":"<Version>::zstd_ver_num","value":"fn (&self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" If avaiable, the numeric zstd version","sig":null,"attributes":[{"value":"/ If avaiable, the numeric zstd version","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":35296,"byte_end":35337,"line_start":314,"line_end":314,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":35342,"byte_end":35345,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ Represented as `(MAJOR << 24) | (MINOR << 12) | PATCH`","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":35350,"byte_end":35408,"line_start":316,"line_end":316,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":35731,"byte_end":35743,"line_start":328,"line_end":328,"column_start":12,"column_end":24},"name":"zstd_version","qualname":"<Version>::zstd_version","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" If available, the human readable version of zstd\n","sig":null,"attributes":[{"value":"/ If available, the human readable version of zstd","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":35667,"byte_end":35719,"line_start":327,"line_end":327,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":207},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"easy","qualname":"::easy","value":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/mod.rs","parent":null,"children":[{"krate":0,"index":208},{"krate":0,"index":267},{"krate":0,"index":552},{"krate":0,"index":853},{"krate":0,"index":886},{"krate":0,"index":889},{"krate":0,"index":892},{"krate":0,"index":895},{"krate":0,"index":900},{"krate":0,"index":903},{"krate":0,"index":908},{"krate":0,"index":913}],"decl_id":null,"docs":" Bindings to the \"easy\" libcurl API.","sig":null,"attributes":[{"value":"! Bindings to the \"easy\" libcurl API.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/mod.rs","byte_start":38981,"byte_end":39020,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/mod.rs","byte_start":39021,"byte_end":39024,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains some simple types like `Easy` and `List` which are just","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/mod.rs","byte_start":39025,"byte_end":39105,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"! wrappers around the corresponding libcurl types. There's also a few enums","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/mod.rs","byte_start":39106,"byte_end":39183,"line_start":4,"line_end":4,"column_start":1,"column_end":78}},{"value":"! scattered about for various options here and there.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/mod.rs","byte_start":39184,"byte_end":39239,"line_start":5,"line_end":5,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/mod.rs","byte_start":39240,"byte_end":39243,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! Most simple usage of libcurl will likely use the `Easy` structure here, and","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/mod.rs","byte_start":39244,"byte_end":39323,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"! you can find more docs about its usage on that struct.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/mod.rs","byte_start":39324,"byte_end":39382,"line_start":8,"line_end":8,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":218},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":40100,"byte_end":40104,"line_start":14,"line_end":14,"column_start":12,"column_end":16},"name":"Form","qualname":"::easy::form::Form","value":"Form {  }","parent":null,"children":[{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223}],"decl_id":null,"docs":" Multipart/formdata for an HTTP POST request.","sig":null,"attributes":[{"value":"/ Multipart/formdata for an HTTP POST request.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":39923,"byte_end":39971,"line_start":10,"line_end":10,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":39972,"byte_end":39975,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This structure is built up and then passed to the `Easy::httppost` method to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":39976,"byte_end":40056,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ be sent off with a request.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":40057,"byte_end":40088,"line_start":13,"line_end":13,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":224},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":40334,"byte_end":40338,"line_start":23,"line_end":23,"column_start":12,"column_end":16},"name":"Part","qualname":"::easy::form::Part","value":"Part {  }","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230}],"decl_id":null,"docs":" One part in a multipart upload, added to a `Form`.\n","sig":null,"attributes":[{"value":"/ One part in a multipart upload, added to a `Form`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":40268,"byte_end":40322,"line_start":22,"line_end":22,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":40642,"byte_end":40645,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<Form>::new","value":"fn () -> Form","parent":null,"children":[],"decl_id":null,"docs":" Creates a new blank form ready for the addition of new data.\n","sig":null,"attributes":[{"value":"/ Creates a new blank form ready for the addition of new data.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":40566,"byte_end":40630,"line_start":35,"line_end":35,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":41068,"byte_end":41072,"line_start":50,"line_end":50,"column_start":12,"column_end":16},"name":"part","qualname":"<Form>::part","value":"fn <'a, 'data> (&'a mut self, name: &'data str) -> Part<'a, 'data>","parent":null,"children":[],"decl_id":null,"docs":" Prepares adding a new part to this `Form`","sig":null,"attributes":[{"value":"/ Prepares adding a new part to this `Form`","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":40863,"byte_end":40908,"line_start":46,"line_end":46,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":40913,"byte_end":40916,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Note that the part is not actually added to the form until the `add`","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":40921,"byte_end":40993,"line_start":48,"line_end":48,"column_start":5,"column_end":77}},{"value":"/ method is called on `Part`, which may or may not fail.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":40998,"byte_end":41056,"line_start":49,"line_end":49,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":41843,"byte_end":41851,"line_start":80,"line_end":80,"column_start":12,"column_end":20},"name":"contents","qualname":"<Part>::contents","value":"fn (&mut self, contents: &'data [u8]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" A pointer to the contents of this part, the actual data to send away.\n","sig":null,"attributes":[{"value":"/ A pointer to the contents of this part, the actual data to send away.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":41758,"byte_end":41831,"line_start":79,"line_end":79,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":43168,"byte_end":43180,"line_start":120,"line_end":120,"column_start":12,"column_end":24},"name":"file_content","qualname":"<Part>::file_content","value":"fn <P> (&mut self, file: P) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Causes this file to be read and its contents used as data in this part","sig":null,"attributes":[{"value":"/ Causes this file to be read and its contents used as data in this part","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":42740,"byte_end":42814,"line_start":110,"line_end":110,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":42819,"byte_end":42822,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ This part does not automatically become a file upload part simply","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":42827,"byte_end":42896,"line_start":112,"line_end":112,"column_start":5,"column_end":74}},{"value":"/ because its data was read from a file.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":42901,"byte_end":42943,"line_start":113,"line_end":113,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":42948,"byte_end":42951,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":42956,"byte_end":42968,"line_start":115,"line_end":115,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":42973,"byte_end":42976,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ If the filename has any internal nul bytes or if on Windows it does not","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":42981,"byte_end":43056,"line_start":117,"line_end":117,"column_start":5,"column_end":80}},{"value":"/ contain a unicode filename then the `add` function will eventually","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":43061,"byte_end":43131,"line_start":118,"line_end":118,"column_start":5,"column_end":75}},{"value":"/ return an error.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":43136,"byte_end":43156,"line_start":119,"line_end":119,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":44694,"byte_end":44698,"line_start":162,"line_end":162,"column_start":12,"column_end":16},"name":"file","qualname":"<Part>::file","value":"fn <P> (&mut self, file: &'data P) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Makes this part a file upload part of the given file.","sig":null,"attributes":[{"value":"/ Makes this part a file upload part of the given file.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":43777,"byte_end":43834,"line_start":142,"line_end":142,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":43839,"byte_end":43842,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ Sets the filename field to the basename of the provided file name, and","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":43847,"byte_end":43921,"line_start":144,"line_end":144,"column_start":5,"column_end":79}},{"value":"/ it reads the contents of the file and passes them as data and sets the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":43926,"byte_end":44000,"line_start":145,"line_end":145,"column_start":5,"column_end":79}},{"value":"/ content type if the given file matches one of the internally known file","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":44005,"byte_end":44080,"line_start":146,"line_end":146,"column_start":5,"column_end":80}},{"value":"/ extensions.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":44085,"byte_end":44100,"line_start":147,"line_end":147,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":44105,"byte_end":44108,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ The given upload file must exist entirely on the filesystem before the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":44113,"byte_end":44187,"line_start":149,"line_end":149,"column_start":5,"column_end":79}},{"value":"/ upload is started because libcurl needs to read the size of it","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":44192,"byte_end":44258,"line_start":150,"line_end":150,"column_start":5,"column_end":71}},{"value":"/ beforehand.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":44263,"byte_end":44278,"line_start":151,"line_end":151,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":44283,"byte_end":44286,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ Multiple files can be uploaded by calling this method multiple times and","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":44291,"byte_end":44367,"line_start":153,"line_end":153,"column_start":5,"column_end":81}},{"value":"/ content types can also be configured for each file (by calling that","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":44372,"byte_end":44443,"line_start":154,"line_end":154,"column_start":5,"column_end":76}},{"value":"/ next).","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":44448,"byte_end":44458,"line_start":155,"line_end":155,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":44463,"byte_end":44466,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":44471,"byte_end":44483,"line_start":157,"line_end":157,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":44488,"byte_end":44491,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ If the filename has any internal nul bytes or if on Windows it does not","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":44496,"byte_end":44571,"line_start":159,"line_end":159,"column_start":5,"column_end":80}},{"value":"/ contain a unicode filename then this function will cause `add` to return","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":44576,"byte_end":44652,"line_start":160,"line_end":160,"column_start":5,"column_end":81}},{"value":"/ an error when called.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":44657,"byte_end":44682,"line_start":161,"line_end":161,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":45565,"byte_end":45577,"line_start":191,"line_end":191,"column_start":12,"column_end":24},"name":"content_type","qualname":"<Part>::content_type","value":"fn (&mut self, content_type: &'data str) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Used in combination with `Part::file`, provides the content-type for\n this part, possibly instead of choosing an internal one.","sig":null,"attributes":[{"value":"/ Used in combination with `Part::file`, provides the content-type for","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":45293,"byte_end":45365,"line_start":184,"line_end":184,"column_start":5,"column_end":77}},{"value":"/ this part, possibly instead of choosing an internal one.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":45370,"byte_end":45430,"line_start":185,"line_end":185,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":45435,"byte_end":45438,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":45443,"byte_end":45455,"line_start":187,"line_end":187,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":45460,"byte_end":45463,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ This function will panic if `content_type` contains an internal nul","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":45468,"byte_end":45539,"line_start":189,"line_end":189,"column_start":5,"column_end":76}},{"value":"/ byte.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":45544,"byte_end":45553,"line_start":190,"line_end":190,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":46393,"byte_end":46401,"line_start":214,"line_end":214,"column_start":12,"column_end":20},"name":"filename","qualname":"<Part>::filename","value":"fn <P> (&mut self, name: &'data P) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Used in combination with `Part::file`, provides the filename for\n this part instead of the actual one.","sig":null,"attributes":[{"value":"/ Used in combination with `Part::file`, provides the filename for","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":46061,"byte_end":46129,"line_start":206,"line_end":206,"column_start":5,"column_end":73}},{"value":"/ this part instead of the actual one.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":46134,"byte_end":46174,"line_start":207,"line_end":207,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":46179,"byte_end":46182,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":46187,"byte_end":46199,"line_start":209,"line_end":209,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":46204,"byte_end":46207,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ If `name` contains an internal nul byte, or if on Windows the path is","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":46212,"byte_end":46285,"line_start":211,"line_end":211,"column_start":5,"column_end":78}},{"value":"/ not valid unicode then this function will return an error when `add` is","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":46290,"byte_end":46365,"line_start":212,"line_end":212,"column_start":5,"column_end":80}},{"value":"/ called.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":46370,"byte_end":46381,"line_start":213,"line_end":213,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":47439,"byte_end":47445,"line_start":247,"line_end":247,"column_start":12,"column_end":18},"name":"buffer","qualname":"<Part>::buffer","value":"fn <P> (&mut self, name: &'data P, data: Vec<u8>) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" This is used to provide a custom file upload part without using the\n `file` method above.","sig":null,"attributes":[{"value":"/ This is used to provide a custom file upload part without using the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":47008,"byte_end":47079,"line_start":236,"line_end":236,"column_start":5,"column_end":76}},{"value":"/ `file` method above.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":47084,"byte_end":47108,"line_start":237,"line_end":237,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":47113,"byte_end":47116,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ The first parameter is for the filename field and the second is the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":47121,"byte_end":47192,"line_start":239,"line_end":239,"column_start":5,"column_end":76}},{"value":"/ in-memory contents.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":47197,"byte_end":47220,"line_start":240,"line_end":240,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":47225,"byte_end":47228,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":47233,"byte_end":47245,"line_start":242,"line_end":242,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":47250,"byte_end":47253,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ If `name` contains an internal nul byte, or if on Windows the path is","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":47258,"byte_end":47331,"line_start":244,"line_end":244,"column_start":5,"column_end":78}},{"value":"/ not valid unicode then this function will return an error when `add` is","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":47336,"byte_end":47411,"line_start":245,"line_end":245,"column_start":5,"column_end":80}},{"value":"/ called.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":47416,"byte_end":47427,"line_start":246,"line_end":246,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":49090,"byte_end":49104,"line_start":295,"line_end":295,"column_start":12,"column_end":26},"name":"content_header","qualname":"<Part>::content_header","value":"fn (&mut self, headers: List) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies extra headers for the form POST section.","sig":null,"attributes":[{"value":"/ Specifies extra headers for the form POST section.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":48938,"byte_end":48992,"line_start":292,"line_end":292,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":48997,"byte_end":49000,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ Appends the list of headers to those libcurl automatically generates.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":49005,"byte_end":49078,"line_start":294,"line_end":294,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":49664,"byte_end":49667,"line_start":312,"line_end":312,"column_start":12,"column_end":15},"name":"add","qualname":"<Part>::add","value":"fn (&mut self) -> Result<(), FormError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to add this part to the `Form` that it was created from.","sig":null,"attributes":[{"value":"/ Attempts to add this part to the `Form` that it was created from.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":49468,"byte_end":49537,"line_start":308,"line_end":308,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":49542,"byte_end":49545,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ If any error happens while adding, that error is returned, otherwise","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":49550,"byte_end":49622,"line_start":310,"line_end":310,"column_start":5,"column_end":77}},{"value":"/ `Ok(())` is returned.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":49627,"byte_end":49652,"line_start":311,"line_end":311,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":1135},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":53819,"byte_end":53823,"line_start":78,"line_end":78,"column_start":12,"column_end":16},"name":"Easy","qualname":"::easy::handle::Easy","value":"Easy {  }","parent":null,"children":[{"krate":0,"index":1136}],"decl_id":null,"docs":" Raw bindings to a libcurl \"easy session\".","sig":null,"attributes":[{"value":"/ Raw bindings to a libcurl \"easy session\".","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":52069,"byte_end":52114,"line_start":19,"line_end":19,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":52115,"byte_end":52118,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This type is the same as the `Easy2` type in this library except that it","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":52119,"byte_end":52195,"line_start":21,"line_end":21,"column_start":1,"column_end":77}},{"value":"/ does not contain a type parameter. Callbacks from curl are all controlled","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":52196,"byte_end":52273,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/ via closures on this `Easy` type, and this type namely has a `transfer`","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":52274,"byte_end":52349,"line_start":23,"line_end":23,"column_start":1,"column_end":76}},{"value":"/ method as well for ergonomic management of these callbacks.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":52350,"byte_end":52413,"line_start":24,"line_end":24,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":52414,"byte_end":52417,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ There's not necessarily a right answer for which type is correct to use, but","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":52418,"byte_end":52498,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ as a general rule of thumb `Easy` is typically a reasonable choice for","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":52499,"byte_end":52573,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ synchronous I/O and `Easy2` is a good choice for asynchronous I/O.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":52574,"byte_end":52644,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":52645,"byte_end":52648,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":52649,"byte_end":52664,"line_start":30,"line_end":30,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":52665,"byte_end":52668,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Creating a handle which can be used later","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":52669,"byte_end":52714,"line_start":32,"line_end":32,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":52715,"byte_end":52718,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":52719,"byte_end":52726,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ use curl::easy::Easy;","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":52727,"byte_end":52752,"line_start":35,"line_end":35,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":52753,"byte_end":52756,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ let handle = Easy::new();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":52757,"byte_end":52786,"line_start":37,"line_end":37,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":52787,"byte_end":52794,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":52795,"byte_end":52798,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Send an HTTP request, writing the response to stdout.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":52799,"byte_end":52856,"line_start":40,"line_end":40,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":52857,"byte_end":52860,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":52861,"byte_end":52868,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ use std::io::{stdout, Write};","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":52869,"byte_end":52902,"line_start":43,"line_end":43,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":52903,"byte_end":52906,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ use curl::easy::Easy;","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":52907,"byte_end":52932,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":52933,"byte_end":52936,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ let mut handle = Easy::new();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":52937,"byte_end":52970,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/ handle.url(\"https://www.rust-lang.org/\").unwrap();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":52971,"byte_end":53025,"line_start":48,"line_end":48,"column_start":1,"column_end":55}},{"value":"/ handle.write_function(|data| {","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":53026,"byte_end":53060,"line_start":49,"line_end":49,"column_start":1,"column_end":35}},{"value":"/     stdout().write_all(data).unwrap();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":53061,"byte_end":53103,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/     Ok(data.len())","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":53104,"byte_end":53126,"line_start":51,"line_end":51,"column_start":1,"column_end":23}},{"value":"/ }).unwrap();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":53127,"byte_end":53143,"line_start":52,"line_end":52,"column_start":1,"column_end":17}},{"value":"/ handle.perform().unwrap();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":53144,"byte_end":53174,"line_start":53,"line_end":53,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":53175,"byte_end":53182,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":53183,"byte_end":53186,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ Collect all output of an HTTP request to a vector.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":53187,"byte_end":53241,"line_start":56,"line_end":56,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":53242,"byte_end":53245,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":53246,"byte_end":53253,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/ use curl::easy::Easy;","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":53254,"byte_end":53279,"line_start":59,"line_end":59,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":53280,"byte_end":53283,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ let mut data = Vec::new();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":53284,"byte_end":53314,"line_start":61,"line_end":61,"column_start":1,"column_end":31}},{"value":"/ let mut handle = Easy::new();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":53315,"byte_end":53348,"line_start":62,"line_end":62,"column_start":1,"column_end":34}},{"value":"/ handle.url(\"https://www.rust-lang.org/\").unwrap();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":53349,"byte_end":53403,"line_start":63,"line_end":63,"column_start":1,"column_end":55}},{"value":"/ {","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":53404,"byte_end":53409,"line_start":64,"line_end":64,"column_start":1,"column_end":6}},{"value":"/     let mut transfer = handle.transfer();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":53410,"byte_end":53455,"line_start":65,"line_end":65,"column_start":1,"column_end":46}},{"value":"/     transfer.write_function(|new_data| {","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":53456,"byte_end":53500,"line_start":66,"line_end":66,"column_start":1,"column_end":45}},{"value":"/         data.extend_from_slice(new_data);","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":53501,"byte_end":53546,"line_start":67,"line_end":67,"column_start":1,"column_end":46}},{"value":"/         Ok(new_data.len())","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":53547,"byte_end":53577,"line_start":68,"line_end":68,"column_start":1,"column_end":31}},{"value":"/     }).unwrap();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":53578,"byte_end":53598,"line_start":69,"line_end":69,"column_start":1,"column_end":21}},{"value":"/     transfer.perform().unwrap();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":53599,"byte_end":53635,"line_start":70,"line_end":70,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":53636,"byte_end":53641,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/ println!(\"{:?}\", data);","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":53642,"byte_end":53669,"line_start":72,"line_end":72,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":53670,"byte_end":53677,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":53678,"byte_end":53681,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ More examples of various properties of an HTTP request can be found on the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":53682,"byte_end":53760,"line_start":75,"line_end":75,"column_start":1,"column_end":79}},{"value":"/ specific methods as well.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":53761,"byte_end":53790,"line_start":76,"line_end":76,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":300},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":54515,"byte_end":54523,"line_start":93,"line_end":93,"column_start":12,"column_end":20},"name":"Transfer","qualname":"::easy::handle::Transfer","value":"Transfer {  }","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304}],"decl_id":null,"docs":" A scoped transfer of information which borrows an `Easy` and allows\n referencing stack-local data of the lifetime `'data`.","sig":null,"attributes":[{"value":"/ A scoped transfer of information which borrows an `Easy` and allows","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":53857,"byte_end":53928,"line_start":82,"line_end":82,"column_start":1,"column_end":72}},{"value":"/ referencing stack-local data of the lifetime `'data`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":53929,"byte_end":53986,"line_start":83,"line_end":83,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":53987,"byte_end":53990,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ Usage of `Easy` requires the `'static` and `Send` bounds on all callbacks","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":53991,"byte_end":54068,"line_start":85,"line_end":85,"column_start":1,"column_end":78}},{"value":"/ registered, but that's not often wanted if all you need is to collect a","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":54069,"byte_end":54144,"line_start":86,"line_end":86,"column_start":1,"column_end":76}},{"value":"/ bunch of data in memory to a vector, for example. The `Transfer` structure,","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":54145,"byte_end":54224,"line_start":87,"line_end":87,"column_start":1,"column_end":80}},{"value":"/ created by the `Easy::transfer` method, is used for this sort of request.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":54225,"byte_end":54302,"line_start":88,"line_end":88,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":54303,"byte_end":54306,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ The callbacks attached to a `Transfer` are only active for that one transfer","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":54307,"byte_end":54387,"line_start":90,"line_end":90,"column_start":1,"column_end":81}},{"value":"/ object, and they allow to elide both the `Send` and `'static` bounds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":54388,"byte_end":54463,"line_start":91,"line_end":91,"column_start":1,"column_end":76}},{"value":"/ close over stack-local information.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":54464,"byte_end":54503,"line_start":92,"line_end":92,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":55680,"byte_end":55683,"line_start":125,"line_end":125,"column_start":12,"column_end":15},"name":"new","qualname":"<Easy>::new","value":"fn () -> Easy","parent":null,"children":[],"decl_id":null,"docs":" Creates a new \"easy\" handle which is the core of almost all operations\n in libcurl.","sig":null,"attributes":[{"value":"/ Creates a new \"easy\" handle which is the core of almost all operations","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":55301,"byte_end":55375,"line_start":118,"line_end":118,"column_start":5,"column_end":79}},{"value":"/ in libcurl.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":55380,"byte_end":55395,"line_start":119,"line_end":119,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":55400,"byte_end":55403,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ To use a handle, applications typically configure a number of options","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":55408,"byte_end":55481,"line_start":121,"line_end":121,"column_start":5,"column_end":78}},{"value":"/ followed by a call to `perform`. Options are preserved across calls to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":55486,"byte_end":55560,"line_start":122,"line_end":122,"column_start":5,"column_end":79}},{"value":"/ `perform` and need to be reset manually (or via the `reset` method) if","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":55565,"byte_end":55639,"line_start":123,"line_end":123,"column_start":5,"column_end":79}},{"value":"/ this is not desired.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":55644,"byte_end":55668,"line_start":124,"line_end":124,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":56113,"byte_end":56120,"line_start":139,"line_end":139,"column_start":12,"column_end":19},"name":"verbose","qualname":"<Easy>::verbose","value":"fn (&mut self, verbose: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::verbose`](struct.Easy2.html#method.verbose)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::verbose`](struct.Easy2.html#method.verbose)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":56037,"byte_end":56101,"line_start":138,"line_end":138,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":56301,"byte_end":56312,"line_start":144,"line_end":144,"column_start":12,"column_end":23},"name":"show_header","qualname":"<Easy>::show_header","value":"fn (&mut self, show: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::show_header`](struct.Easy2.html#method.show_header)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::show_header`](struct.Easy2.html#method.show_header)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":56217,"byte_end":56289,"line_start":143,"line_end":143,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":56485,"byte_end":56493,"line_start":149,"line_end":149,"column_start":12,"column_end":20},"name":"progress","qualname":"<Easy>::progress","value":"fn (&mut self, progress: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::progress`](struct.Easy2.html#method.progress)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::progress`](struct.Easy2.html#method.progress)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":56407,"byte_end":56473,"line_start":148,"line_end":148,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":56667,"byte_end":56673,"line_start":154,"line_end":154,"column_start":12,"column_end":18},"name":"signal","qualname":"<Easy>::signal","value":"fn (&mut self, signal: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::signal`](struct.Easy2.html#method.signal)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::signal`](struct.Easy2.html#method.signal)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":56593,"byte_end":56655,"line_start":153,"line_end":153,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":56857,"byte_end":56871,"line_start":159,"line_end":159,"column_start":12,"column_end":26},"name":"wildcard_match","qualname":"<Easy>::wildcard_match","value":"fn (&mut self, m: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::wildcard_match`](struct.Easy2.html#method.wildcard_match)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::wildcard_match`](struct.Easy2.html#method.wildcard_match)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":56767,"byte_end":56845,"line_start":158,"line_end":158,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":57047,"byte_end":57058,"line_start":164,"line_end":164,"column_start":12,"column_end":23},"name":"unix_socket","qualname":"<Easy>::unix_socket","value":"fn (&mut self, unix_domain_socket: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::unix_socket`](struct.Easy2.html#method.unix_socket)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::unix_socket`](struct.Easy2.html#method.unix_socket)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":56963,"byte_end":57035,"line_start":163,"line_end":163,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":57275,"byte_end":57291,"line_start":169,"line_end":169,"column_start":12,"column_end":28},"name":"unix_socket_path","qualname":"<Easy>::unix_socket_path","value":"fn <P> (&mut self, path: Option<P>) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::unix_socket_path`](struct.Easy2.html#method.unix_socket_path)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::unix_socket_path`](struct.Easy2.html#method.unix_socket_path)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":57181,"byte_end":57263,"line_start":168,"line_end":168,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":60055,"byte_end":60069,"line_start":239,"line_end":239,"column_start":12,"column_end":26},"name":"write_function","qualname":"<Easy>::write_function","value":"fn <F> (&mut self, f: F) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set callback for writing received data.","sig":null,"attributes":[{"value":"/ Set callback for writing received data.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":57518,"byte_end":57561,"line_start":176,"line_end":176,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":57566,"byte_end":57569,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ This callback function gets called by libcurl as soon as there is data","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":57574,"byte_end":57648,"line_start":178,"line_end":178,"column_start":5,"column_end":79}},{"value":"/ received that needs to be saved.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":57653,"byte_end":57689,"line_start":179,"line_end":179,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":57694,"byte_end":57697,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ The callback function will be passed as much data as possible in all","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":57702,"byte_end":57774,"line_start":181,"line_end":181,"column_start":5,"column_end":77}},{"value":"/ invokes, but you must not make any assumptions. It may be one byte, it","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":57779,"byte_end":57853,"line_start":182,"line_end":182,"column_start":5,"column_end":79}},{"value":"/ may be thousands. If `show_header` is enabled, which makes header data","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":57858,"byte_end":57932,"line_start":183,"line_end":183,"column_start":5,"column_end":79}},{"value":"/ get passed to the write callback, you can get up to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":57937,"byte_end":57992,"line_start":184,"line_end":184,"column_start":5,"column_end":60}},{"value":"/ `CURL_MAX_HTTP_HEADER` bytes of header data passed into it.  This","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":57997,"byte_end":58066,"line_start":185,"line_end":185,"column_start":5,"column_end":74}},{"value":"/ usually means 100K.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":58071,"byte_end":58094,"line_start":186,"line_end":186,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":58099,"byte_end":58102,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ This function may be called with zero bytes data if the transferred file","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":58107,"byte_end":58183,"line_start":188,"line_end":188,"column_start":5,"column_end":81}},{"value":"/ is empty.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":58188,"byte_end":58201,"line_start":189,"line_end":189,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":58206,"byte_end":58209,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ The callback should return the number of bytes actually taken care of.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":58214,"byte_end":58288,"line_start":191,"line_end":191,"column_start":5,"column_end":79}},{"value":"/ If that amount differs from the amount passed to your callback function,","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":58293,"byte_end":58369,"line_start":192,"line_end":192,"column_start":5,"column_end":81}},{"value":"/ it'll signal an error condition to the library. This will cause the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":58374,"byte_end":58445,"line_start":193,"line_end":193,"column_start":5,"column_end":76}},{"value":"/ transfer to get aborted and the libcurl function used will return","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":58450,"byte_end":58519,"line_start":194,"line_end":194,"column_start":5,"column_end":74}},{"value":"/ an error with `is_write_error`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":58524,"byte_end":58559,"line_start":195,"line_end":195,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":58564,"byte_end":58567,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ If your callback function returns `Err(WriteError::Pause)` it will cause","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":58572,"byte_end":58648,"line_start":197,"line_end":197,"column_start":5,"column_end":81}},{"value":"/ this transfer to become paused. See `unpause_write` for further details.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":58653,"byte_end":58729,"line_start":198,"line_end":198,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":58734,"byte_end":58737,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ By default data is sent into the void, and this corresponds to the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":58742,"byte_end":58812,"line_start":200,"line_end":200,"column_start":5,"column_end":75}},{"value":"/ `CURLOPT_WRITEFUNCTION` and `CURLOPT_WRITEDATA` options.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":58817,"byte_end":58877,"line_start":201,"line_end":201,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":58882,"byte_end":58885,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ Note that the lifetime bound on this function is `'static`, but that","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":58890,"byte_end":58962,"line_start":203,"line_end":203,"column_start":5,"column_end":77}},{"value":"/ is often too restrictive. To use stack data consider calling the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":58967,"byte_end":59035,"line_start":204,"line_end":204,"column_start":5,"column_end":73}},{"value":"/ `transfer` method and then using `write_function` to configure a","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":59040,"byte_end":59108,"line_start":205,"line_end":205,"column_start":5,"column_end":73}},{"value":"/ callback that can reference stack-local data.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":59113,"byte_end":59162,"line_start":206,"line_end":206,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":59167,"byte_end":59170,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":59175,"byte_end":59189,"line_start":208,"line_end":208,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":59194,"byte_end":59197,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":59202,"byte_end":59209,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/ use std::io::{stdout, Write};","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":59214,"byte_end":59247,"line_start":211,"line_end":211,"column_start":5,"column_end":38}},{"value":"/ use curl::easy::Easy;","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":59252,"byte_end":59277,"line_start":212,"line_end":212,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":59282,"byte_end":59285,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ let mut handle = Easy::new();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":59290,"byte_end":59323,"line_start":214,"line_end":214,"column_start":5,"column_end":38}},{"value":"/ handle.url(\"https://www.rust-lang.org/\").unwrap();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":59328,"byte_end":59382,"line_start":215,"line_end":215,"column_start":5,"column_end":59}},{"value":"/ handle.write_function(|data| {","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":59387,"byte_end":59421,"line_start":216,"line_end":216,"column_start":5,"column_end":39}},{"value":"/     Ok(stdout().write(data).unwrap())","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":59426,"byte_end":59467,"line_start":217,"line_end":217,"column_start":5,"column_end":46}},{"value":"/ }).unwrap();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":59472,"byte_end":59488,"line_start":218,"line_end":218,"column_start":5,"column_end":21}},{"value":"/ handle.perform().unwrap();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":59493,"byte_end":59523,"line_start":219,"line_end":219,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":59528,"byte_end":59535,"line_start":220,"line_end":220,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":59540,"byte_end":59543,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Writing to a stack-local buffer","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":59548,"byte_end":59583,"line_start":222,"line_end":222,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":59588,"byte_end":59591,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":59596,"byte_end":59603,"line_start":224,"line_end":224,"column_start":5,"column_end":12}},{"value":"/ use std::io::{stdout, Write};","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":59608,"byte_end":59641,"line_start":225,"line_end":225,"column_start":5,"column_end":38}},{"value":"/ use curl::easy::Easy;","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":59646,"byte_end":59671,"line_start":226,"line_end":226,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":59676,"byte_end":59679,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":59684,"byte_end":59713,"line_start":228,"line_end":228,"column_start":5,"column_end":34}},{"value":"/ let mut handle = Easy::new();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":59718,"byte_end":59751,"line_start":229,"line_end":229,"column_start":5,"column_end":38}},{"value":"/ handle.url(\"https://www.rust-lang.org/\").unwrap();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":59756,"byte_end":59810,"line_start":230,"line_end":230,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":59815,"byte_end":59818,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ let mut transfer = handle.transfer();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":59823,"byte_end":59864,"line_start":232,"line_end":232,"column_start":5,"column_end":46}},{"value":"/ transfer.write_function(|data| {","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":59869,"byte_end":59905,"line_start":233,"line_end":233,"column_start":5,"column_end":41}},{"value":"/     buf.extend_from_slice(data);","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":59910,"byte_end":59946,"line_start":234,"line_end":234,"column_start":5,"column_end":41}},{"value":"/     Ok(data.len())","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":59951,"byte_end":59973,"line_start":235,"line_end":235,"column_start":5,"column_end":27}},{"value":"/ }).unwrap();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":59978,"byte_end":59994,"line_start":236,"line_end":236,"column_start":5,"column_end":21}},{"value":"/ transfer.perform().unwrap();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":59999,"byte_end":60031,"line_start":237,"line_end":237,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":60036,"byte_end":60043,"line_start":238,"line_end":238,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":62834,"byte_end":62847,"line_start":311,"line_end":311,"column_start":12,"column_end":25},"name":"read_function","qualname":"<Easy>::read_function","value":"fn <F> (&mut self, f: F) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Read callback for data uploads.","sig":null,"attributes":[{"value":"/ Read callback for data uploads.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":60286,"byte_end":60321,"line_start":247,"line_end":247,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":60326,"byte_end":60329,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ This callback function gets called by libcurl as soon as it needs to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":60334,"byte_end":60406,"line_start":249,"line_end":249,"column_start":5,"column_end":77}},{"value":"/ read data in order to send it to the peer - like if you ask it to upload","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":60411,"byte_end":60487,"line_start":250,"line_end":250,"column_start":5,"column_end":81}},{"value":"/ or post data to the server.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":60492,"byte_end":60523,"line_start":251,"line_end":251,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":60528,"byte_end":60531,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ Your function must then return the actual number of bytes that it stored","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":60536,"byte_end":60612,"line_start":253,"line_end":253,"column_start":5,"column_end":81}},{"value":"/ in that memory area. Returning 0 will signal end-of-file to the library","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":60617,"byte_end":60692,"line_start":254,"line_end":254,"column_start":5,"column_end":80}},{"value":"/ and cause it to stop the current transfer.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":60697,"byte_end":60743,"line_start":255,"line_end":255,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":60748,"byte_end":60751,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ If you stop the current transfer by returning 0 \"pre-maturely\" (i.e","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":60756,"byte_end":60827,"line_start":257,"line_end":257,"column_start":5,"column_end":76}},{"value":"/ before the server expected it, like when you've said you will upload N","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":60832,"byte_end":60906,"line_start":258,"line_end":258,"column_start":5,"column_end":79}},{"value":"/ bytes and you upload less than N bytes), you may experience that the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":60911,"byte_end":60983,"line_start":259,"line_end":259,"column_start":5,"column_end":77}},{"value":"/ server \"hangs\" waiting for the rest of the data that won't come.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":60988,"byte_end":61056,"line_start":260,"line_end":260,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":61061,"byte_end":61064,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ The read callback may return `Err(ReadError::Abort)` to stop the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":61069,"byte_end":61137,"line_start":262,"line_end":262,"column_start":5,"column_end":73}},{"value":"/ current operation immediately, resulting in a `is_aborted_by_callback`","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":61142,"byte_end":61216,"line_start":263,"line_end":263,"column_start":5,"column_end":79}},{"value":"/ error code from the transfer.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":61221,"byte_end":61254,"line_start":264,"line_end":264,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":61259,"byte_end":61262,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ The callback can return `Err(ReadError::Pause)` to cause reading from","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":61267,"byte_end":61340,"line_start":266,"line_end":266,"column_start":5,"column_end":78}},{"value":"/ this connection to pause. See `unpause_read` for further details.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":61345,"byte_end":61414,"line_start":267,"line_end":267,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":61419,"byte_end":61422,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ By default data not input, and this corresponds to the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":61427,"byte_end":61485,"line_start":269,"line_end":269,"column_start":5,"column_end":63}},{"value":"/ `CURLOPT_READFUNCTION` and `CURLOPT_READDATA` options.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":61490,"byte_end":61548,"line_start":270,"line_end":270,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":61553,"byte_end":61556,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ Note that the lifetime bound on this function is `'static`, but that","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":61561,"byte_end":61633,"line_start":272,"line_end":272,"column_start":5,"column_end":77}},{"value":"/ is often too restrictive. To use stack data consider calling the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":61638,"byte_end":61706,"line_start":273,"line_end":273,"column_start":5,"column_end":73}},{"value":"/ `transfer` method and then using `read_function` to configure a","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":61711,"byte_end":61778,"line_start":274,"line_end":274,"column_start":5,"column_end":72}},{"value":"/ callback that can reference stack-local data.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":61783,"byte_end":61832,"line_start":275,"line_end":275,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":61837,"byte_end":61840,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":61845,"byte_end":61859,"line_start":277,"line_end":277,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":61864,"byte_end":61867,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ Read input from stdin","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":61872,"byte_end":61897,"line_start":279,"line_end":279,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":61902,"byte_end":61905,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":61910,"byte_end":61923,"line_start":281,"line_end":281,"column_start":5,"column_end":18}},{"value":"/ use std::io::{stdin, Read};","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":61928,"byte_end":61959,"line_start":282,"line_end":282,"column_start":5,"column_end":36}},{"value":"/ use curl::easy::Easy;","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":61964,"byte_end":61989,"line_start":283,"line_end":283,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":61994,"byte_end":61997,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ let mut handle = Easy::new();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":62002,"byte_end":62035,"line_start":285,"line_end":285,"column_start":5,"column_end":38}},{"value":"/ handle.url(\"https://example.com/login\").unwrap();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":62040,"byte_end":62093,"line_start":286,"line_end":286,"column_start":5,"column_end":58}},{"value":"/ handle.read_function(|into| {","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":62098,"byte_end":62131,"line_start":287,"line_end":287,"column_start":5,"column_end":38}},{"value":"/     Ok(stdin().read(into).unwrap())","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":62136,"byte_end":62175,"line_start":288,"line_end":288,"column_start":5,"column_end":44}},{"value":"/ }).unwrap();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":62180,"byte_end":62196,"line_start":289,"line_end":289,"column_start":5,"column_end":21}},{"value":"/ handle.post(true).unwrap();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":62201,"byte_end":62232,"line_start":290,"line_end":290,"column_start":5,"column_end":36}},{"value":"/ handle.perform().unwrap();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":62237,"byte_end":62267,"line_start":291,"line_end":291,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":62272,"byte_end":62279,"line_start":292,"line_end":292,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":62284,"byte_end":62287,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ Reading from stack-local data:","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":62292,"byte_end":62326,"line_start":294,"line_end":294,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":62331,"byte_end":62334,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":62339,"byte_end":62352,"line_start":296,"line_end":296,"column_start":5,"column_end":18}},{"value":"/ use std::io::{stdin, Read};","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":62357,"byte_end":62388,"line_start":297,"line_end":297,"column_start":5,"column_end":36}},{"value":"/ use curl::easy::Easy;","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":62393,"byte_end":62418,"line_start":298,"line_end":298,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":62423,"byte_end":62426,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ let mut data_to_upload = &b\"foobar\"[..];","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":62431,"byte_end":62475,"line_start":300,"line_end":300,"column_start":5,"column_end":49}},{"value":"/ let mut handle = Easy::new();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":62480,"byte_end":62513,"line_start":301,"line_end":301,"column_start":5,"column_end":38}},{"value":"/ handle.url(\"https://example.com/login\").unwrap();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":62518,"byte_end":62571,"line_start":302,"line_end":302,"column_start":5,"column_end":58}},{"value":"/ handle.post(true).unwrap();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":62576,"byte_end":62607,"line_start":303,"line_end":303,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":62612,"byte_end":62615,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ let mut transfer = handle.transfer();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":62620,"byte_end":62661,"line_start":305,"line_end":305,"column_start":5,"column_end":46}},{"value":"/ transfer.read_function(|into| {","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":62666,"byte_end":62701,"line_start":306,"line_end":306,"column_start":5,"column_end":40}},{"value":"/     Ok(data_to_upload.read(into).unwrap())","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":62706,"byte_end":62752,"line_start":307,"line_end":307,"column_start":5,"column_end":51}},{"value":"/ }).unwrap();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":62757,"byte_end":62773,"line_start":308,"line_end":308,"column_start":5,"column_end":21}},{"value":"/ transfer.perform().unwrap();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":62778,"byte_end":62810,"line_start":309,"line_end":309,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":62815,"byte_end":62822,"line_start":310,"line_end":310,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":64513,"byte_end":64526,"line_start":343,"line_end":343,"column_start":12,"column_end":25},"name":"seek_function","qualname":"<Easy>::seek_function","value":"fn <F> (&mut self, f: F) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" User callback for seeking in input stream.","sig":null,"attributes":[{"value":"/ User callback for seeking in input stream.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":63066,"byte_end":63112,"line_start":319,"line_end":319,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":63117,"byte_end":63120,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ This function gets called by libcurl to seek to a certain position in","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":63125,"byte_end":63198,"line_start":321,"line_end":321,"column_start":5,"column_end":78}},{"value":"/ the input stream and can be used to fast forward a file in a resumed","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":63203,"byte_end":63275,"line_start":322,"line_end":322,"column_start":5,"column_end":77}},{"value":"/ upload (instead of reading all uploaded bytes with the normal read","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":63280,"byte_end":63350,"line_start":323,"line_end":323,"column_start":5,"column_end":75}},{"value":"/ function/callback). It is also called to rewind a stream when data has","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":63355,"byte_end":63429,"line_start":324,"line_end":324,"column_start":5,"column_end":79}},{"value":"/ already been sent to the server and needs to be sent again. This may","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":63434,"byte_end":63506,"line_start":325,"line_end":325,"column_start":5,"column_end":77}},{"value":"/ happen when doing a HTTP PUT or POST with a multi-pass authentication","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":63511,"byte_end":63584,"line_start":326,"line_end":326,"column_start":5,"column_end":78}},{"value":"/ method, or when an existing HTTP connection is reused too late and the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":63589,"byte_end":63663,"line_start":327,"line_end":327,"column_start":5,"column_end":79}},{"value":"/ server closes the connection.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":63668,"byte_end":63701,"line_start":328,"line_end":328,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":63706,"byte_end":63709,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ The callback function must return `SeekResult::Ok` on success,","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":63714,"byte_end":63780,"line_start":330,"line_end":330,"column_start":5,"column_end":71}},{"value":"/ `SeekResult::Fail` to cause the upload operation to fail or","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":63785,"byte_end":63848,"line_start":331,"line_end":331,"column_start":5,"column_end":68}},{"value":"/ `SeekResult::CantSeek` to indicate that while the seek failed, libcurl","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":63853,"byte_end":63927,"line_start":332,"line_end":332,"column_start":5,"column_end":79}},{"value":"/ is free to work around the problem if possible. The latter can sometimes","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":63932,"byte_end":64008,"line_start":333,"line_end":333,"column_start":5,"column_end":81}},{"value":"/ be done by instead reading from the input or similar.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":64013,"byte_end":64070,"line_start":334,"line_end":334,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":64075,"byte_end":64078,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ By default data this option is not set, and this corresponds to the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":64083,"byte_end":64154,"line_start":336,"line_end":336,"column_start":5,"column_end":76}},{"value":"/ `CURLOPT_SEEKFUNCTION` and `CURLOPT_SEEKDATA` options.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":64159,"byte_end":64217,"line_start":337,"line_end":337,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":64222,"byte_end":64225,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ Note that the lifetime bound on this function is `'static`, but that","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":64230,"byte_end":64302,"line_start":339,"line_end":339,"column_start":5,"column_end":77}},{"value":"/ is often too restrictive. To use stack data consider calling the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":64307,"byte_end":64375,"line_start":340,"line_end":340,"column_start":5,"column_end":73}},{"value":"/ `transfer` method and then using `seek_function` to configure a","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":64380,"byte_end":64447,"line_start":341,"line_end":341,"column_start":5,"column_end":72}},{"value":"/ callback that can reference stack-local data.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":64452,"byte_end":64501,"line_start":342,"line_end":342,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":66764,"byte_end":66781,"line_start":387,"line_end":387,"column_start":12,"column_end":29},"name":"progress_function","qualname":"<Easy>::progress_function","value":"fn <F> (&mut self, f: F) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Callback to progress meter function","sig":null,"attributes":[{"value":"/ Callback to progress meter function","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":64730,"byte_end":64769,"line_start":351,"line_end":351,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":64774,"byte_end":64777,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ This function gets called by libcurl instead of its internal equivalent","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":64782,"byte_end":64857,"line_start":353,"line_end":353,"column_start":5,"column_end":80}},{"value":"/ with a frequent interval. While data is being transferred it will be","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":64862,"byte_end":64934,"line_start":354,"line_end":354,"column_start":5,"column_end":77}},{"value":"/ called very frequently, and during slow periods like when nothing is","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":64939,"byte_end":65011,"line_start":355,"line_end":355,"column_start":5,"column_end":77}},{"value":"/ being transferred it can slow down to about one call per second.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":65016,"byte_end":65084,"line_start":356,"line_end":356,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":65089,"byte_end":65092,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ The callback gets told how much data libcurl will transfer and has","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":65097,"byte_end":65167,"line_start":358,"line_end":358,"column_start":5,"column_end":75}},{"value":"/ transferred, in number of bytes. The first argument is the total number","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":65172,"byte_end":65247,"line_start":359,"line_end":359,"column_start":5,"column_end":80}},{"value":"/ of bytes libcurl expects to download in this transfer. The second","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":65252,"byte_end":65321,"line_start":360,"line_end":360,"column_start":5,"column_end":74}},{"value":"/ argument is the number of bytes downloaded so far. The third argument is","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":65326,"byte_end":65402,"line_start":361,"line_end":361,"column_start":5,"column_end":81}},{"value":"/ the total number of bytes libcurl expects to upload in this transfer.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":65407,"byte_end":65480,"line_start":362,"line_end":362,"column_start":5,"column_end":78}},{"value":"/ The fourth argument is the number of bytes uploaded so far.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":65485,"byte_end":65548,"line_start":363,"line_end":363,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":65553,"byte_end":65556,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ Unknown/unused argument values passed to the callback will be set to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":65561,"byte_end":65633,"line_start":365,"line_end":365,"column_start":5,"column_end":77}},{"value":"/ zero (like if you only download data, the upload size will remain 0).","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":65638,"byte_end":65711,"line_start":366,"line_end":366,"column_start":5,"column_end":78}},{"value":"/ Many times the callback will be called one or more times first, before","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":65716,"byte_end":65790,"line_start":367,"line_end":367,"column_start":5,"column_end":79}},{"value":"/ it knows the data sizes so a program must be made to handle that.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":65795,"byte_end":65864,"line_start":368,"line_end":368,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":65869,"byte_end":65872,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ Returning `false` from this callback will cause libcurl to abort the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":65877,"byte_end":65949,"line_start":370,"line_end":370,"column_start":5,"column_end":77}},{"value":"/ transfer and return `is_aborted_by_callback`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":65954,"byte_end":66003,"line_start":371,"line_end":371,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":66008,"byte_end":66011,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ If you transfer data with the multi interface, this function will not be","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":66016,"byte_end":66092,"line_start":373,"line_end":373,"column_start":5,"column_end":81}},{"value":"/ called during periods of idleness unless you call the appropriate","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":66097,"byte_end":66166,"line_start":374,"line_end":374,"column_start":5,"column_end":74}},{"value":"/ libcurl function that performs transfers.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":66171,"byte_end":66216,"line_start":375,"line_end":375,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":66221,"byte_end":66224,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ `progress` must be set to `true` to make this function actually get","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":66229,"byte_end":66300,"line_start":377,"line_end":377,"column_start":5,"column_end":76}},{"value":"/ called.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":66305,"byte_end":66316,"line_start":378,"line_end":378,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":66321,"byte_end":66324,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ By default this function calls an internal method and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":66329,"byte_end":66401,"line_start":380,"line_end":380,"column_start":5,"column_end":77}},{"value":"/ `CURLOPT_PROGRESSFUNCTION` and `CURLOPT_PROGRESSDATA`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":66406,"byte_end":66464,"line_start":381,"line_end":381,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":66469,"byte_end":66472,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ Note that the lifetime bound on this function is `'static`, but that","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":66477,"byte_end":66549,"line_start":383,"line_end":383,"column_start":5,"column_end":77}},{"value":"/ is often too restrictive. To use stack data consider calling the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":66554,"byte_end":66622,"line_start":384,"line_end":384,"column_start":5,"column_end":73}},{"value":"/ `transfer` method and then using `progress_function` to configure a","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":66627,"byte_end":66698,"line_start":385,"line_end":385,"column_start":5,"column_end":76}},{"value":"/ callback that can reference stack-local data.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":66703,"byte_end":66752,"line_start":386,"line_end":386,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":68517,"byte_end":68533,"line_start":424,"line_end":424,"column_start":12,"column_end":28},"name":"ssl_ctx_function","qualname":"<Easy>::ssl_ctx_function","value":"fn <F> (&mut self, f: F) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Callback to SSL context","sig":null,"attributes":[{"value":"/ Callback to SSL context","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":66993,"byte_end":67020,"line_start":395,"line_end":395,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":67025,"byte_end":67028,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ This callback function gets called by libcurl just before the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":67033,"byte_end":67098,"line_start":397,"line_end":397,"column_start":5,"column_end":70}},{"value":"/ initialization of an SSL connection after having processed all","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":67103,"byte_end":67169,"line_start":398,"line_end":398,"column_start":5,"column_end":71}},{"value":"/ other SSL related options to give a last chance to an","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":67174,"byte_end":67231,"line_start":399,"line_end":399,"column_start":5,"column_end":62}},{"value":"/ application to modify the behaviour of the SSL","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":67236,"byte_end":67286,"line_start":400,"line_end":400,"column_start":5,"column_end":55}},{"value":"/ initialization. The `ssl_ctx` parameter is actually a pointer","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":67291,"byte_end":67356,"line_start":401,"line_end":401,"column_start":5,"column_end":70}},{"value":"/ to the SSL library's SSL_CTX. If an error is returned from the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":67361,"byte_end":67427,"line_start":402,"line_end":402,"column_start":5,"column_end":71}},{"value":"/ callback no attempt to establish a connection is made and the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":67432,"byte_end":67497,"line_start":403,"line_end":403,"column_start":5,"column_end":70}},{"value":"/ perform operation will return the callback's error code.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":67502,"byte_end":67562,"line_start":404,"line_end":404,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":67567,"byte_end":67570,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ This function will get called on all new connections made to a","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":67575,"byte_end":67641,"line_start":406,"line_end":406,"column_start":5,"column_end":71}},{"value":"/ server, during the SSL negotiation. The SSL_CTX pointer will","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":67646,"byte_end":67710,"line_start":407,"line_end":407,"column_start":5,"column_end":69}},{"value":"/ be a new one every time.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":67715,"byte_end":67743,"line_start":408,"line_end":408,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":67748,"byte_end":67751,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ To use this properly, a non-trivial amount of knowledge of","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":67756,"byte_end":67818,"line_start":410,"line_end":410,"column_start":5,"column_end":67}},{"value":"/ your SSL library is necessary. For example, you can use this","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":67823,"byte_end":67887,"line_start":411,"line_end":411,"column_start":5,"column_end":69}},{"value":"/ function to call library-specific callbacks to add additional","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":67892,"byte_end":67957,"line_start":412,"line_end":412,"column_start":5,"column_end":70}},{"value":"/ validation code for certificates, and even to change the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":67962,"byte_end":68022,"line_start":413,"line_end":413,"column_start":5,"column_end":65}},{"value":"/ actual URI of a HTTPS request.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":68027,"byte_end":68061,"line_start":414,"line_end":414,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":68066,"byte_end":68069,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ By default this function calls an internal method and","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":68074,"byte_end":68131,"line_start":416,"line_end":416,"column_start":5,"column_end":62}},{"value":"/ corresponds to `CURLOPT_SSL_CTX_FUNCTION` and","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":68136,"byte_end":68185,"line_start":417,"line_end":417,"column_start":5,"column_end":54}},{"value":"/ `CURLOPT_SSL_CTX_DATA`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":68190,"byte_end":68217,"line_start":418,"line_end":418,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":68222,"byte_end":68225,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ Note that the lifetime bound on this function is `'static`, but that","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":68230,"byte_end":68302,"line_start":420,"line_end":420,"column_start":5,"column_end":77}},{"value":"/ is often too restrictive. To use stack data consider calling the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":68307,"byte_end":68375,"line_start":421,"line_end":421,"column_start":5,"column_end":73}},{"value":"/ `transfer` method and then using `progress_function` to configure a","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":68380,"byte_end":68451,"line_start":422,"line_end":422,"column_start":5,"column_end":76}},{"value":"/ callback that can reference stack-local data.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":68456,"byte_end":68505,"line_start":423,"line_end":423,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":69410,"byte_end":69424,"line_start":445,"line_end":445,"column_start":12,"column_end":26},"name":"debug_function","qualname":"<Easy>::debug_function","value":"fn <F> (&mut self, f: F) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Specify a debug callback","sig":null,"attributes":[{"value":"/ Specify a debug callback","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":68750,"byte_end":68778,"line_start":432,"line_end":432,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":68783,"byte_end":68786,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ `debug_function` replaces the standard debug function used when","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":68791,"byte_end":68858,"line_start":434,"line_end":434,"column_start":5,"column_end":72}},{"value":"/ `verbose` is in effect. This callback receives debug information,","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":68863,"byte_end":68932,"line_start":435,"line_end":435,"column_start":5,"column_end":74}},{"value":"/ as specified in the type argument.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":68937,"byte_end":68975,"line_start":436,"line_end":436,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":68980,"byte_end":68983,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ By default this option is not set and corresponds to the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":68988,"byte_end":69048,"line_start":438,"line_end":438,"column_start":5,"column_end":65}},{"value":"/ `CURLOPT_DEBUGFUNCTION` and `CURLOPT_DEBUGDATA` options.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":69053,"byte_end":69113,"line_start":439,"line_end":439,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":69118,"byte_end":69121,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ Note that the lifetime bound on this function is `'static`, but that","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":69126,"byte_end":69198,"line_start":441,"line_end":441,"column_start":5,"column_end":77}},{"value":"/ is often too restrictive. To use stack data consider calling the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":69203,"byte_end":69271,"line_start":442,"line_end":442,"column_start":5,"column_end":73}},{"value":"/ `transfer` method and then using `debug_function` to configure a","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":69276,"byte_end":69344,"line_start":443,"line_end":443,"column_start":5,"column_end":73}},{"value":"/ callback that can reference stack-local data.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":69349,"byte_end":69398,"line_start":444,"line_end":444,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":72941,"byte_end":72956,"line_start":530,"line_end":530,"column_start":12,"column_end":27},"name":"header_function","qualname":"<Easy>::header_function","value":"fn <F> (&mut self, f: F) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Callback that receives header data","sig":null,"attributes":[{"value":"/ Callback that receives header data","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":69622,"byte_end":69660,"line_start":453,"line_end":453,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":69665,"byte_end":69668,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ This function gets called by libcurl as soon as it has received header","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":69673,"byte_end":69747,"line_start":455,"line_end":455,"column_start":5,"column_end":79}},{"value":"/ data. The header callback will be called once for each header and only","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":69752,"byte_end":69826,"line_start":456,"line_end":456,"column_start":5,"column_end":79}},{"value":"/ complete header lines are passed on to the callback. Parsing headers is","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":69831,"byte_end":69906,"line_start":457,"line_end":457,"column_start":5,"column_end":80}},{"value":"/ very easy using this. If this callback returns `false` it'll signal an","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":69911,"byte_end":69985,"line_start":458,"line_end":458,"column_start":5,"column_end":79}},{"value":"/ error to the library. This will cause the transfer to get aborted and","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":69990,"byte_end":70063,"line_start":459,"line_end":459,"column_start":5,"column_end":78}},{"value":"/ the libcurl function in progress will return `is_write_error`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":70068,"byte_end":70134,"line_start":460,"line_end":460,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":70139,"byte_end":70142,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ A complete HTTP header that is passed to this function can be up to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":70147,"byte_end":70218,"line_start":462,"line_end":462,"column_start":5,"column_end":76}},{"value":"/ CURL_MAX_HTTP_HEADER (100K) bytes.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":70223,"byte_end":70261,"line_start":463,"line_end":463,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":70266,"byte_end":70269,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ It's important to note that the callback will be invoked for the headers","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":70274,"byte_end":70350,"line_start":465,"line_end":465,"column_start":5,"column_end":81}},{"value":"/ of all responses received after initiating a request and not just the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":70355,"byte_end":70428,"line_start":466,"line_end":466,"column_start":5,"column_end":78}},{"value":"/ final response. This includes all responses which occur during","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":70433,"byte_end":70499,"line_start":467,"line_end":467,"column_start":5,"column_end":71}},{"value":"/ authentication negotiation. If you need to operate on only the headers","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":70504,"byte_end":70578,"line_start":468,"line_end":468,"column_start":5,"column_end":79}},{"value":"/ from the final response, you will need to collect headers in the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":70583,"byte_end":70651,"line_start":469,"line_end":469,"column_start":5,"column_end":73}},{"value":"/ callback yourself and use HTTP status lines, for example, to delimit","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":70656,"byte_end":70728,"line_start":470,"line_end":470,"column_start":5,"column_end":77}},{"value":"/ response boundaries.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":70733,"byte_end":70757,"line_start":471,"line_end":471,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":70762,"byte_end":70765,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ When a server sends a chunked encoded transfer, it may contain a","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":70770,"byte_end":70838,"line_start":473,"line_end":473,"column_start":5,"column_end":73}},{"value":"/ trailer. That trailer is identical to a HTTP header and if such a","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":70843,"byte_end":70912,"line_start":474,"line_end":474,"column_start":5,"column_end":74}},{"value":"/ trailer is received it is passed to the application using this callback","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":70917,"byte_end":70992,"line_start":475,"line_end":475,"column_start":5,"column_end":80}},{"value":"/ as well. There are several ways to detect it being a trailer and not an","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":70997,"byte_end":71072,"line_start":476,"line_end":476,"column_start":5,"column_end":80}},{"value":"/ ordinary header: 1) it comes after the response-body. 2) it comes after","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":71077,"byte_end":71152,"line_start":477,"line_end":477,"column_start":5,"column_end":80}},{"value":"/ the final header line (CR LF) 3) a Trailer: header among the regular","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":71157,"byte_end":71229,"line_start":478,"line_end":478,"column_start":5,"column_end":77}},{"value":"/ response-headers mention what header(s) to expect in the trailer.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":71234,"byte_end":71303,"line_start":479,"line_end":479,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":71308,"byte_end":71311,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ For non-HTTP protocols like FTP, POP3, IMAP and SMTP this function will","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":71316,"byte_end":71391,"line_start":481,"line_end":481,"column_start":5,"column_end":80}},{"value":"/ get called with the server responses to the commands that libcurl sends.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":71396,"byte_end":71472,"line_start":482,"line_end":482,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":71477,"byte_end":71480,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ By default this option is not set and corresponds to the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":71485,"byte_end":71545,"line_start":484,"line_end":484,"column_start":5,"column_end":65}},{"value":"/ `CURLOPT_HEADERFUNCTION` and `CURLOPT_HEADERDATA` options.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":71550,"byte_end":71612,"line_start":485,"line_end":485,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":71617,"byte_end":71620,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ Note that the lifetime bound on this function is `'static`, but that","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":71625,"byte_end":71697,"line_start":487,"line_end":487,"column_start":5,"column_end":77}},{"value":"/ is often too restrictive. To use stack data consider calling the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":71702,"byte_end":71770,"line_start":488,"line_end":488,"column_start":5,"column_end":73}},{"value":"/ `transfer` method and then using `header_function` to configure a","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":71775,"byte_end":71844,"line_start":489,"line_end":489,"column_start":5,"column_end":74}},{"value":"/ callback that can reference stack-local data.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":71849,"byte_end":71898,"line_start":490,"line_end":490,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":71903,"byte_end":71906,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":71911,"byte_end":71925,"line_start":492,"line_end":492,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":71930,"byte_end":71933,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":71938,"byte_end":71945,"line_start":494,"line_end":494,"column_start":5,"column_end":12}},{"value":"/ use std::str;","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":71950,"byte_end":71967,"line_start":495,"line_end":495,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":71972,"byte_end":71975,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ use curl::easy::Easy;","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":71980,"byte_end":72005,"line_start":497,"line_end":497,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":72010,"byte_end":72013,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ let mut handle = Easy::new();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":72018,"byte_end":72051,"line_start":499,"line_end":499,"column_start":5,"column_end":38}},{"value":"/ handle.url(\"https://www.rust-lang.org/\").unwrap();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":72056,"byte_end":72110,"line_start":500,"line_end":500,"column_start":5,"column_end":59}},{"value":"/ handle.header_function(|header| {","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":72115,"byte_end":72152,"line_start":501,"line_end":501,"column_start":5,"column_end":42}},{"value":"/     print!(\"header: {}\", str::from_utf8(header).unwrap());","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":72157,"byte_end":72219,"line_start":502,"line_end":502,"column_start":5,"column_end":67}},{"value":"/     true","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":72224,"byte_end":72236,"line_start":503,"line_end":503,"column_start":5,"column_end":17}},{"value":"/ }).unwrap();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":72241,"byte_end":72257,"line_start":504,"line_end":504,"column_start":5,"column_end":21}},{"value":"/ handle.perform().unwrap();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":72262,"byte_end":72292,"line_start":505,"line_end":505,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":72297,"byte_end":72304,"line_start":506,"line_end":506,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":72309,"byte_end":72312,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ Collecting headers to a stack local vector","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":72317,"byte_end":72363,"line_start":508,"line_end":508,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":72368,"byte_end":72371,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":72376,"byte_end":72383,"line_start":510,"line_end":510,"column_start":5,"column_end":12}},{"value":"/ use std::str;","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":72388,"byte_end":72405,"line_start":511,"line_end":511,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":72410,"byte_end":72413,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ use curl::easy::Easy;","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":72418,"byte_end":72443,"line_start":513,"line_end":513,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":72448,"byte_end":72451,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ let mut headers = Vec::new();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":72456,"byte_end":72489,"line_start":515,"line_end":515,"column_start":5,"column_end":38}},{"value":"/ let mut handle = Easy::new();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":72494,"byte_end":72527,"line_start":516,"line_end":516,"column_start":5,"column_end":38}},{"value":"/ handle.url(\"https://www.rust-lang.org/\").unwrap();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":72532,"byte_end":72586,"line_start":517,"line_end":517,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":72591,"byte_end":72594,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":72599,"byte_end":72604,"line_start":519,"line_end":519,"column_start":5,"column_end":10}},{"value":"/     let mut transfer = handle.transfer();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":72609,"byte_end":72654,"line_start":520,"line_end":520,"column_start":5,"column_end":50}},{"value":"/     transfer.header_function(|header| {","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":72659,"byte_end":72702,"line_start":521,"line_end":521,"column_start":5,"column_end":48}},{"value":"/         headers.push(str::from_utf8(header).unwrap().to_string());","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":72707,"byte_end":72777,"line_start":522,"line_end":522,"column_start":5,"column_end":75}},{"value":"/         true","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":72782,"byte_end":72798,"line_start":523,"line_end":523,"column_start":5,"column_end":21}},{"value":"/     }).unwrap();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":72803,"byte_end":72823,"line_start":524,"line_end":524,"column_start":5,"column_end":25}},{"value":"/     transfer.perform().unwrap();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":72828,"byte_end":72864,"line_start":525,"line_end":525,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":72869,"byte_end":72874,"line_start":526,"line_end":526,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":72879,"byte_end":72882,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", headers);","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":72887,"byte_end":72917,"line_start":528,"line_end":528,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":72922,"byte_end":72929,"line_start":529,"line_end":529,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":73382,"byte_end":73395,"line_start":544,"line_end":544,"column_start":12,"column_end":25},"name":"fail_on_error","qualname":"<Easy>::fail_on_error","value":"fn (&mut self, fail: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::fail_on_error`](struct.Easy2.html#method.fail_on_error)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::fail_on_error`](struct.Easy2.html#method.fail_on_error)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":73294,"byte_end":73370,"line_start":543,"line_end":543,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":73665,"byte_end":73668,"line_start":552,"line_end":552,"column_start":12,"column_end":15},"name":"url","qualname":"<Easy>::url","value":"fn (&mut self, url: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::url`](struct.Easy2.html#method.url)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::url`](struct.Easy2.html#method.url)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":73597,"byte_end":73653,"line_start":551,"line_end":551,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":73823,"byte_end":73827,"line_start":557,"line_end":557,"column_start":12,"column_end":16},"name":"port","qualname":"<Easy>::port","value":"fn (&mut self, port: u16) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::port`](struct.Easy2.html#method.port)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::port`](struct.Easy2.html#method.port)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":73753,"byte_end":73811,"line_start":556,"line_end":556,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":73996,"byte_end":74006,"line_start":562,"line_end":562,"column_start":12,"column_end":22},"name":"connect_to","qualname":"<Easy>::connect_to","value":"fn (&mut self, list: List) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::connect_to`](struct.Easy2.html#method.connect_to)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::connect_to`](struct.Easy2.html#method.connect_to)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":73914,"byte_end":73984,"line_start":561,"line_end":561,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":74172,"byte_end":74177,"line_start":567,"line_end":567,"column_start":12,"column_end":17},"name":"proxy","qualname":"<Easy>::proxy","value":"fn (&mut self, url: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::proxy`](struct.Easy2.html#method.proxy)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::proxy`](struct.Easy2.html#method.proxy)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":74100,"byte_end":74160,"line_start":566,"line_end":566,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":74346,"byte_end":74356,"line_start":572,"line_end":572,"column_start":12,"column_end":22},"name":"proxy_port","qualname":"<Easy>::proxy_port","value":"fn (&mut self, port: u16) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::proxy_port`](struct.Easy2.html#method.proxy_port)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::proxy_port`](struct.Easy2.html#method.proxy_port)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":74264,"byte_end":74334,"line_start":571,"line_end":571,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":74535,"byte_end":74547,"line_start":577,"line_end":577,"column_start":12,"column_end":24},"name":"proxy_cainfo","qualname":"<Easy>::proxy_cainfo","value":"fn (&mut self, cainfo: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::proxy_cainfo`](struct.Easy2.html#method.proxy_cainfo)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::proxy_cainfo`](struct.Easy2.html#method.proxy_cainfo)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":74449,"byte_end":74523,"line_start":576,"line_end":576,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":74733,"byte_end":74745,"line_start":582,"line_end":582,"column_start":12,"column_end":24},"name":"proxy_capath","qualname":"<Easy>::proxy_capath","value":"fn <P> (&mut self, path: P) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::proxy_capath`](struct.Easy2.html#method.proxy_capath)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::proxy_capath`](struct.Easy2.html#method.proxy_capath)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":74647,"byte_end":74721,"line_start":581,"line_end":581,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":74942,"byte_end":74955,"line_start":587,"line_end":587,"column_start":12,"column_end":25},"name":"proxy_sslcert","qualname":"<Easy>::proxy_sslcert","value":"fn (&mut self, sslcert: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::proxy_sslcert`](struct.Easy2.html#method.proxy_sslcert)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::proxy_sslcert`](struct.Easy2.html#method.proxy_sslcert)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":74854,"byte_end":74930,"line_start":586,"line_end":586,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":75144,"byte_end":75156,"line_start":592,"line_end":592,"column_start":12,"column_end":24},"name":"proxy_sslkey","qualname":"<Easy>::proxy_sslkey","value":"fn (&mut self, sslkey: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::proxy_sslkey`](struct.Easy2.html#method.proxy_sslkey)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::proxy_sslkey`](struct.Easy2.html#method.proxy_sslkey)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":75058,"byte_end":75132,"line_start":591,"line_end":591,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":75338,"byte_end":75348,"line_start":597,"line_end":597,"column_start":12,"column_end":22},"name":"proxy_type","qualname":"<Easy>::proxy_type","value":"fn (&mut self, kind: ProxyType) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::proxy_type`](struct.Easy2.html#method.proxy_type)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::proxy_type`](struct.Easy2.html#method.proxy_type)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":75256,"byte_end":75326,"line_start":596,"line_end":596,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":75523,"byte_end":75530,"line_start":602,"line_end":602,"column_start":12,"column_end":19},"name":"noproxy","qualname":"<Easy>::noproxy","value":"fn (&mut self, skip: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::noproxy`](struct.Easy2.html#method.noproxy)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::noproxy`](struct.Easy2.html#method.noproxy)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":75447,"byte_end":75511,"line_start":601,"line_end":601,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":75717,"byte_end":75734,"line_start":607,"line_end":607,"column_start":12,"column_end":29},"name":"http_proxy_tunnel","qualname":"<Easy>::http_proxy_tunnel","value":"fn (&mut self, tunnel: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::http_proxy_tunnel`](struct.Easy2.html#method.http_proxy_tunnel)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::http_proxy_tunnel`](struct.Easy2.html#method.http_proxy_tunnel)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":75621,"byte_end":75705,"line_start":606,"line_end":606,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":75919,"byte_end":75928,"line_start":612,"line_end":612,"column_start":12,"column_end":21},"name":"interface","qualname":"<Easy>::interface","value":"fn (&mut self, interface: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::interface`](struct.Easy2.html#method.interface)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::interface`](struct.Easy2.html#method.interface)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":75839,"byte_end":75907,"line_start":611,"line_end":611,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":76121,"byte_end":76135,"line_start":617,"line_end":617,"column_start":12,"column_end":26},"name":"set_local_port","qualname":"<Easy>::set_local_port","value":"fn (&mut self, port: u16) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::set_local_port`](struct.Easy2.html#method.set_local_port)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::set_local_port`](struct.Easy2.html#method.set_local_port)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":76031,"byte_end":76109,"line_start":616,"line_end":616,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":76326,"byte_end":76342,"line_start":622,"line_end":622,"column_start":12,"column_end":28},"name":"local_port_range","qualname":"<Easy>::local_port_range","value":"fn (&mut self, range: u16) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::local_port_range`](struct.Easy2.html#method.local_port_range)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::local_port_range`](struct.Easy2.html#method.local_port_range)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":76232,"byte_end":76314,"line_start":621,"line_end":621,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":76527,"byte_end":76538,"line_start":627,"line_end":627,"column_start":12,"column_end":23},"name":"dns_servers","qualname":"<Easy>::dns_servers","value":"fn (&mut self, servers: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::dns_servers`](struct.Easy2.html#method.dns_servers)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::dns_servers`](struct.Easy2.html#method.dns_servers)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":76443,"byte_end":76515,"line_start":626,"line_end":626,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":76735,"byte_end":76752,"line_start":632,"line_end":632,"column_start":12,"column_end":29},"name":"dns_cache_timeout","qualname":"<Easy>::dns_cache_timeout","value":"fn (&mut self, dur: Duration) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::dns_cache_timeout`](struct.Easy2.html#method.dns_cache_timeout)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::dns_cache_timeout`](struct.Easy2.html#method.dns_cache_timeout)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":76639,"byte_end":76723,"line_start":631,"line_end":631,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":76939,"byte_end":76950,"line_start":637,"line_end":637,"column_start":12,"column_end":23},"name":"buffer_size","qualname":"<Easy>::buffer_size","value":"fn (&mut self, size: usize) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::buffer_size`](struct.Easy2.html#method.buffer_size)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::buffer_size`](struct.Easy2.html#method.buffer_size)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":76855,"byte_end":76927,"line_start":636,"line_end":636,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":77130,"byte_end":77141,"line_start":642,"line_end":642,"column_start":12,"column_end":23},"name":"tcp_nodelay","qualname":"<Easy>::tcp_nodelay","value":"fn (&mut self, enable: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::tcp_nodelay`](struct.Easy2.html#method.tcp_nodelay)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::tcp_nodelay`](struct.Easy2.html#method.tcp_nodelay)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":77046,"byte_end":77118,"line_start":641,"line_end":641,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":77328,"byte_end":77341,"line_start":647,"line_end":647,"column_start":12,"column_end":25},"name":"tcp_keepalive","qualname":"<Easy>::tcp_keepalive","value":"fn (&mut self, enable: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::tcp_keepalive`](struct.Easy2.html#method.tcp_keepalive)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::tcp_keepalive`](struct.Easy2.html#method.tcp_keepalive)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":77240,"byte_end":77316,"line_start":646,"line_end":646,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":77530,"byte_end":77543,"line_start":652,"line_end":652,"column_start":12,"column_end":25},"name":"tcp_keepintvl","qualname":"<Easy>::tcp_keepintvl","value":"fn (&mut self, dur: Duration) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::tcp_keepintvl`](struct.Easy2.html#method.tcp_keepalive)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::tcp_keepintvl`](struct.Easy2.html#method.tcp_keepalive)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":77442,"byte_end":77518,"line_start":651,"line_end":651,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":77728,"byte_end":77740,"line_start":657,"line_end":657,"column_start":12,"column_end":24},"name":"tcp_keepidle","qualname":"<Easy>::tcp_keepidle","value":"fn (&mut self, dur: Duration) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::tcp_keepidle`](struct.Easy2.html#method.tcp_keepidle)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::tcp_keepidle`](struct.Easy2.html#method.tcp_keepidle)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":77642,"byte_end":77716,"line_start":656,"line_end":656,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":77926,"byte_end":77939,"line_start":662,"line_end":662,"column_start":12,"column_end":25},"name":"address_scope","qualname":"<Easy>::address_scope","value":"fn (&mut self, scope: u32) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::address_scope`](struct.Easy2.html#method.address_scope)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::address_scope`](struct.Easy2.html#method.address_scope)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":77838,"byte_end":77914,"line_start":661,"line_end":661,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":78224,"byte_end":78232,"line_start":670,"line_end":670,"column_start":12,"column_end":20},"name":"username","qualname":"<Easy>::username","value":"fn (&mut self, user: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::username`](struct.Easy2.html#method.username)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::username`](struct.Easy2.html#method.username)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":78146,"byte_end":78212,"line_start":669,"line_end":669,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":78402,"byte_end":78410,"line_start":675,"line_end":675,"column_start":12,"column_end":20},"name":"password","qualname":"<Easy>::password","value":"fn (&mut self, pass: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::password`](struct.Easy2.html#method.password)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::password`](struct.Easy2.html#method.password)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":78324,"byte_end":78390,"line_start":674,"line_end":674,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":78582,"byte_end":78591,"line_start":680,"line_end":680,"column_start":12,"column_end":21},"name":"http_auth","qualname":"<Easy>::http_auth","value":"fn (&mut self, auth: &Auth) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::http_auth`](struct.Easy2.html#method.http_auth)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::http_auth`](struct.Easy2.html#method.http_auth)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":78502,"byte_end":78570,"line_start":679,"line_end":679,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":78775,"byte_end":78789,"line_start":685,"line_end":685,"column_start":12,"column_end":26},"name":"proxy_username","qualname":"<Easy>::proxy_username","value":"fn (&mut self, user: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::proxy_username`](struct.Easy2.html#method.proxy_username)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::proxy_username`](struct.Easy2.html#method.proxy_username)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":78685,"byte_end":78763,"line_start":684,"line_end":684,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":78977,"byte_end":78991,"line_start":690,"line_end":690,"column_start":12,"column_end":26},"name":"proxy_password","qualname":"<Easy>::proxy_password","value":"fn (&mut self, pass: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::proxy_password`](struct.Easy2.html#method.proxy_password)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::proxy_password`](struct.Easy2.html#method.proxy_password)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":78887,"byte_end":78965,"line_start":689,"line_end":689,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":79171,"byte_end":79181,"line_start":695,"line_end":695,"column_start":12,"column_end":22},"name":"proxy_auth","qualname":"<Easy>::proxy_auth","value":"fn (&mut self, auth: &Auth) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::proxy_auth`](struct.Easy2.html#method.proxy_auth)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::proxy_auth`](struct.Easy2.html#method.proxy_auth)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":79089,"byte_end":79159,"line_start":694,"line_end":694,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":79348,"byte_end":79353,"line_start":700,"line_end":700,"column_start":12,"column_end":17},"name":"netrc","qualname":"<Easy>::netrc","value":"fn (&mut self, netrc: NetRc) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::netrc`](struct.Easy2.html#method.netrc)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::netrc`](struct.Easy2.html#method.netrc)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":79276,"byte_end":79336,"line_start":699,"line_end":699,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":79631,"byte_end":79642,"line_start":708,"line_end":708,"column_start":12,"column_end":23},"name":"autoreferer","qualname":"<Easy>::autoreferer","value":"fn (&mut self, enable: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::autoreferer`](struct.Easy2.html#method.autoreferer)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::autoreferer`](struct.Easy2.html#method.autoreferer)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":79547,"byte_end":79619,"line_start":707,"line_end":707,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":79833,"byte_end":79848,"line_start":713,"line_end":713,"column_start":12,"column_end":27},"name":"accept_encoding","qualname":"<Easy>::accept_encoding","value":"fn (&mut self, encoding: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::accept_encoding`](struct.Easy2.html#method.accept_encoding)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::accept_encoding`](struct.Easy2.html#method.accept_encoding)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":79741,"byte_end":79821,"line_start":712,"line_end":712,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":80051,"byte_end":80068,"line_start":718,"line_end":718,"column_start":12,"column_end":29},"name":"transfer_encoding","qualname":"<Easy>::transfer_encoding","value":"fn (&mut self, enable: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::transfer_encoding`](struct.Easy2.html#method.transfer_encoding)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::transfer_encoding`](struct.Easy2.html#method.transfer_encoding)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":79955,"byte_end":80039,"line_start":717,"line_end":717,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":80265,"byte_end":80280,"line_start":723,"line_end":723,"column_start":12,"column_end":27},"name":"follow_location","qualname":"<Easy>::follow_location","value":"fn (&mut self, enable: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::follow_location`](struct.Easy2.html#method.follow_location)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::follow_location`](struct.Easy2.html#method.follow_location)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":80173,"byte_end":80253,"line_start":722,"line_end":722,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":80479,"byte_end":80496,"line_start":728,"line_end":728,"column_start":12,"column_end":29},"name":"unrestricted_auth","qualname":"<Easy>::unrestricted_auth","value":"fn (&mut self, enable: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::unrestricted_auth`](struct.Easy2.html#method.unrestricted_auth)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::unrestricted_auth`](struct.Easy2.html#method.unrestricted_auth)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":80383,"byte_end":80467,"line_start":727,"line_end":727,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":80695,"byte_end":80711,"line_start":733,"line_end":733,"column_start":12,"column_end":28},"name":"max_redirections","qualname":"<Easy>::max_redirections","value":"fn (&mut self, max: u32) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::max_redirections`](struct.Easy2.html#method.max_redirections)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::max_redirections`](struct.Easy2.html#method.max_redirections)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":80601,"byte_end":80683,"line_start":732,"line_end":732,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":80876,"byte_end":80879,"line_start":738,"line_end":738,"column_start":12,"column_end":15},"name":"put","qualname":"<Easy>::put","value":"fn (&mut self, enable: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::put`](struct.Easy2.html#method.put)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::put`](struct.Easy2.html#method.put)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":80808,"byte_end":80864,"line_start":737,"line_end":737,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":81040,"byte_end":81044,"line_start":743,"line_end":743,"column_start":12,"column_end":16},"name":"post","qualname":"<Easy>::post","value":"fn (&mut self, enable: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::post`](struct.Easy2.html#method.post)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::post`](struct.Easy2.html#method.post)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":80970,"byte_end":81028,"line_start":742,"line_end":742,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":81228,"byte_end":81244,"line_start":748,"line_end":748,"column_start":12,"column_end":28},"name":"post_fields_copy","qualname":"<Easy>::post_fields_copy","value":"fn (&mut self, data: &[u8]) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::post_field_copy`](struct.Easy2.html#method.post_field_copy)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::post_field_copy`](struct.Easy2.html#method.post_field_copy)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":81136,"byte_end":81216,"line_start":747,"line_end":747,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":81437,"byte_end":81452,"line_start":753,"line_end":753,"column_start":12,"column_end":27},"name":"post_field_size","qualname":"<Easy>::post_field_size","value":"fn (&mut self, size: u64) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::post_field_size`](struct.Easy2.html#method.post_field_size)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::post_field_size`](struct.Easy2.html#method.post_field_size)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":81345,"byte_end":81425,"line_start":752,"line_end":752,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":81628,"byte_end":81636,"line_start":758,"line_end":758,"column_start":12,"column_end":20},"name":"httppost","qualname":"<Easy>::httppost","value":"fn (&mut self, form: Form) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::httppost`](struct.Easy2.html#method.httppost)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::httppost`](struct.Easy2.html#method.httppost)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":81550,"byte_end":81616,"line_start":757,"line_end":757,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":81804,"byte_end":81811,"line_start":763,"line_end":763,"column_start":12,"column_end":19},"name":"referer","qualname":"<Easy>::referer","value":"fn (&mut self, referer: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::referer`](struct.Easy2.html#method.referer)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::referer`](struct.Easy2.html#method.referer)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":81728,"byte_end":81792,"line_start":762,"line_end":762,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":81988,"byte_end":81997,"line_start":768,"line_end":768,"column_start":12,"column_end":21},"name":"useragent","qualname":"<Easy>::useragent","value":"fn (&mut self, useragent: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::useragent`](struct.Easy2.html#method.useragent)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::useragent`](struct.Easy2.html#method.useragent)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":81908,"byte_end":81976,"line_start":767,"line_end":767,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":82186,"byte_end":82198,"line_start":773,"line_end":773,"column_start":12,"column_end":24},"name":"http_headers","qualname":"<Easy>::http_headers","value":"fn (&mut self, list: List) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::http_headers`](struct.Easy2.html#method.http_headers)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::http_headers`](struct.Easy2.html#method.http_headers)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":82100,"byte_end":82174,"line_start":772,"line_end":772,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":82368,"byte_end":82374,"line_start":778,"line_end":778,"column_start":12,"column_end":18},"name":"cookie","qualname":"<Easy>::cookie","value":"fn (&mut self, cookie: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::cookie`](struct.Easy2.html#method.cookie)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::cookie`](struct.Easy2.html#method.cookie)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":82294,"byte_end":82356,"line_start":777,"line_end":777,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":82552,"byte_end":82563,"line_start":783,"line_end":783,"column_start":12,"column_end":23},"name":"cookie_file","qualname":"<Easy>::cookie_file","value":"fn <P> (&mut self, file: P) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::cookie_file`](struct.Easy2.html#method.cookie_file)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::cookie_file`](struct.Easy2.html#method.cookie_file)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":82468,"byte_end":82540,"line_start":782,"line_end":782,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":82753,"byte_end":82763,"line_start":788,"line_end":788,"column_start":12,"column_end":22},"name":"cookie_jar","qualname":"<Easy>::cookie_jar","value":"fn <P> (&mut self, file: P) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::cookie_jar`](struct.Easy2.html#method.cookie_jar)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::cookie_jar`](struct.Easy2.html#method.cookie_jar)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":82671,"byte_end":82741,"line_start":787,"line_end":787,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":82960,"byte_end":82974,"line_start":793,"line_end":793,"column_start":12,"column_end":26},"name":"cookie_session","qualname":"<Easy>::cookie_session","value":"fn (&mut self, session: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::cookie_session`](struct.Easy2.html#method.cookie_session)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::cookie_session`](struct.Easy2.html#method.cookie_session)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":82870,"byte_end":82948,"line_start":792,"line_end":792,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":83162,"byte_end":83173,"line_start":798,"line_end":798,"column_start":12,"column_end":23},"name":"cookie_list","qualname":"<Easy>::cookie_list","value":"fn (&mut self, cookie: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::cookie_list`](struct.Easy2.html#method.cookie_list)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::cookie_list`](struct.Easy2.html#method.cookie_list)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":83078,"byte_end":83150,"line_start":797,"line_end":797,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":83340,"byte_end":83343,"line_start":803,"line_end":803,"column_start":12,"column_end":15},"name":"get","qualname":"<Easy>::get","value":"fn (&mut self, enable: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::get`](struct.Easy2.html#method.get)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::get`](struct.Easy2.html#method.get)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":83272,"byte_end":83328,"line_start":802,"line_end":802,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":83538,"byte_end":83559,"line_start":808,"line_end":808,"column_start":12,"column_end":33},"name":"ignore_content_length","qualname":"<Easy>::ignore_content_length","value":"fn (&mut self, ignore: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::ignore_content_length`](struct.Easy2.html#method.ignore_content_length)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::ignore_content_length`](struct.Easy2.html#method.ignore_content_length)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":83434,"byte_end":83526,"line_start":807,"line_end":807,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":83772,"byte_end":83793,"line_start":813,"line_end":813,"column_start":12,"column_end":33},"name":"http_content_decoding","qualname":"<Easy>::http_content_decoding","value":"fn (&mut self, enable: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::http_content_decoding`](struct.Easy2.html#method.http_content_decoding)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::http_content_decoding`](struct.Easy2.html#method.http_content_decoding)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":83668,"byte_end":83760,"line_start":812,"line_end":812,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":84008,"byte_end":84030,"line_start":818,"line_end":818,"column_start":12,"column_end":34},"name":"http_transfer_decoding","qualname":"<Easy>::http_transfer_decoding","value":"fn (&mut self, enable: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::http_transfer_decoding`](struct.Easy2.html#method.http_transfer_decoding)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::http_transfer_decoding`](struct.Easy2.html#method.http_transfer_decoding)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":83902,"byte_end":83996,"line_start":817,"line_end":817,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":84318,"byte_end":84323,"line_start":826,"line_end":826,"column_start":12,"column_end":17},"name":"range","qualname":"<Easy>::range","value":"fn (&mut self, range: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::range`](struct.Easy2.html#method.range)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::range`](struct.Easy2.html#method.range)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":84246,"byte_end":84306,"line_start":825,"line_end":825,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":84498,"byte_end":84509,"line_start":831,"line_end":831,"column_start":12,"column_end":23},"name":"resume_from","qualname":"<Easy>::resume_from","value":"fn (&mut self, from: u64) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::resume_from`](struct.Easy2.html#method.resume_from)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::resume_from`](struct.Easy2.html#method.resume_from)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":84414,"byte_end":84486,"line_start":830,"line_end":830,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":84693,"byte_end":84707,"line_start":836,"line_end":836,"column_start":12,"column_end":26},"name":"custom_request","qualname":"<Easy>::custom_request","value":"fn (&mut self, request: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::custom_request`](struct.Easy2.html#method.custom_request)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::custom_request`](struct.Easy2.html#method.custom_request)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":84603,"byte_end":84681,"line_start":835,"line_end":835,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":84901,"byte_end":84915,"line_start":841,"line_end":841,"column_start":12,"column_end":26},"name":"fetch_filetime","qualname":"<Easy>::fetch_filetime","value":"fn (&mut self, fetch: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::fetch_filetime`](struct.Easy2.html#method.fetch_filetime)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::fetch_filetime`](struct.Easy2.html#method.fetch_filetime)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":84811,"byte_end":84889,"line_start":840,"line_end":840,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":85089,"byte_end":85095,"line_start":846,"line_end":846,"column_start":12,"column_end":18},"name":"nobody","qualname":"<Easy>::nobody","value":"fn (&mut self, enable: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::nobody`](struct.Easy2.html#method.nobody)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::nobody`](struct.Easy2.html#method.nobody)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":85015,"byte_end":85077,"line_start":845,"line_end":845,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":85273,"byte_end":85284,"line_start":851,"line_end":851,"column_start":12,"column_end":23},"name":"in_filesize","qualname":"<Easy>::in_filesize","value":"fn (&mut self, size: u64) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::in_filesize`](struct.Easy2.html#method.in_filesize)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::in_filesize`](struct.Easy2.html#method.in_filesize)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":85189,"byte_end":85261,"line_start":850,"line_end":850,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":85452,"byte_end":85458,"line_start":856,"line_end":856,"column_start":12,"column_end":18},"name":"upload","qualname":"<Easy>::upload","value":"fn (&mut self, enable: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::upload`](struct.Easy2.html#method.upload)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::upload`](struct.Easy2.html#method.upload)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":85378,"byte_end":85440,"line_start":855,"line_end":855,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":85638,"byte_end":85650,"line_start":861,"line_end":861,"column_start":12,"column_end":24},"name":"max_filesize","qualname":"<Easy>::max_filesize","value":"fn (&mut self, size: u64) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::max_filesize`](struct.Easy2.html#method.max_filesize)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::max_filesize`](struct.Easy2.html#method.max_filesize)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":85552,"byte_end":85626,"line_start":860,"line_end":860,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":85835,"byte_end":85849,"line_start":866,"line_end":866,"column_start":12,"column_end":26},"name":"time_condition","qualname":"<Easy>::time_condition","value":"fn (&mut self, cond: TimeCondition) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::time_condition`](struct.Easy2.html#method.time_condition)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::time_condition`](struct.Easy2.html#method.time_condition)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":85745,"byte_end":85823,"line_start":865,"line_end":865,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":86038,"byte_end":86048,"line_start":871,"line_end":871,"column_start":12,"column_end":22},"name":"time_value","qualname":"<Easy>::time_value","value":"fn (&mut self, val: i64) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::time_value`](struct.Easy2.html#method.time_value)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::time_value`](struct.Easy2.html#method.time_value)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":85956,"byte_end":86026,"line_start":870,"line_end":870,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":86323,"byte_end":86330,"line_start":879,"line_end":879,"column_start":12,"column_end":19},"name":"timeout","qualname":"<Easy>::timeout","value":"fn (&mut self, timeout: Duration) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::timeout`](struct.Easy2.html#method.timeout)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::timeout`](struct.Easy2.html#method.timeout)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":86247,"byte_end":86311,"line_start":878,"line_end":878,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":86523,"byte_end":86538,"line_start":884,"line_end":884,"column_start":12,"column_end":27},"name":"low_speed_limit","qualname":"<Easy>::low_speed_limit","value":"fn (&mut self, limit: u32) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::low_speed_limit`](struct.Easy2.html#method.low_speed_limit)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::low_speed_limit`](struct.Easy2.html#method.low_speed_limit)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":86431,"byte_end":86511,"line_start":883,"line_end":883,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":86728,"byte_end":86742,"line_start":889,"line_end":889,"column_start":12,"column_end":26},"name":"low_speed_time","qualname":"<Easy>::low_speed_time","value":"fn (&mut self, dur: Duration) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::low_speed_time`](struct.Easy2.html#method.low_speed_time)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::low_speed_time`](struct.Easy2.html#method.low_speed_time)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":86638,"byte_end":86716,"line_start":888,"line_end":888,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":86932,"byte_end":86946,"line_start":894,"line_end":894,"column_start":12,"column_end":26},"name":"max_send_speed","qualname":"<Easy>::max_send_speed","value":"fn (&mut self, speed: u64) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::max_send_speed`](struct.Easy2.html#method.max_send_speed)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::max_send_speed`](struct.Easy2.html#method.max_send_speed)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":86842,"byte_end":86920,"line_start":893,"line_end":893,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":87135,"byte_end":87149,"line_start":899,"line_end":899,"column_start":12,"column_end":26},"name":"max_recv_speed","qualname":"<Easy>::max_recv_speed","value":"fn (&mut self, speed: u64) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::max_recv_speed`](struct.Easy2.html#method.max_recv_speed)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::max_recv_speed`](struct.Easy2.html#method.max_recv_speed)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":87045,"byte_end":87123,"line_start":898,"line_end":898,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":87334,"byte_end":87346,"line_start":904,"line_end":904,"column_start":12,"column_end":24},"name":"max_connects","qualname":"<Easy>::max_connects","value":"fn (&mut self, max: u32) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::max_connects`](struct.Easy2.html#method.max_connects)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::max_connects`](struct.Easy2.html#method.max_connects)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":87248,"byte_end":87322,"line_start":903,"line_end":903,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":87523,"byte_end":87534,"line_start":909,"line_end":909,"column_start":12,"column_end":23},"name":"maxage_conn","qualname":"<Easy>::maxage_conn","value":"fn (&mut self, max_age: Duration) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::maxage_conn`](struct.Easy2.html#method.maxage_conn)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::maxage_conn`](struct.Easy2.html#method.maxage_conn)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":87439,"byte_end":87511,"line_start":908,"line_end":908,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":87727,"byte_end":87740,"line_start":914,"line_end":914,"column_start":12,"column_end":25},"name":"fresh_connect","qualname":"<Easy>::fresh_connect","value":"fn (&mut self, enable: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::fresh_connect`](struct.Easy2.html#method.fresh_connect)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::fresh_connect`](struct.Easy2.html#method.fresh_connect)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":87639,"byte_end":87715,"line_start":913,"line_end":913,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":87927,"byte_end":87939,"line_start":919,"line_end":919,"column_start":12,"column_end":24},"name":"forbid_reuse","qualname":"<Easy>::forbid_reuse","value":"fn (&mut self, enable: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::forbid_reuse`](struct.Easy2.html#method.forbid_reuse)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::forbid_reuse`](struct.Easy2.html#method.forbid_reuse)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":87841,"byte_end":87915,"line_start":918,"line_end":918,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":88131,"byte_end":88146,"line_start":924,"line_end":924,"column_start":12,"column_end":27},"name":"connect_timeout","qualname":"<Easy>::connect_timeout","value":"fn (&mut self, timeout: Duration) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::connect_timeout`](struct.Easy2.html#method.connect_timeout)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::connect_timeout`](struct.Easy2.html#method.connect_timeout)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":88039,"byte_end":88119,"line_start":923,"line_end":923,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":88337,"byte_end":88347,"line_start":929,"line_end":929,"column_start":12,"column_end":22},"name":"ip_resolve","qualname":"<Easy>::ip_resolve","value":"fn (&mut self, resolve: IpResolve) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::ip_resolve`](struct.Easy2.html#method.ip_resolve)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::ip_resolve`](struct.Easy2.html#method.ip_resolve)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":88255,"byte_end":88325,"line_start":928,"line_end":928,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":88528,"byte_end":88535,"line_start":934,"line_end":934,"column_start":12,"column_end":19},"name":"resolve","qualname":"<Easy>::resolve","value":"fn (&mut self, list: List) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::resolve`](struct.Easy2.html#method.resolve)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::resolve`](struct.Easy2.html#method.resolve)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":88452,"byte_end":88516,"line_start":933,"line_end":933,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":88712,"byte_end":88724,"line_start":939,"line_end":939,"column_start":12,"column_end":24},"name":"connect_only","qualname":"<Easy>::connect_only","value":"fn (&mut self, enable: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::connect_only`](struct.Easy2.html#method.connect_only)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::connect_only`](struct.Easy2.html#method.connect_only)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":88626,"byte_end":88700,"line_start":938,"line_end":938,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":89012,"byte_end":89020,"line_start":947,"line_end":947,"column_start":12,"column_end":20},"name":"ssl_cert","qualname":"<Easy>::ssl_cert","value":"fn <P> (&mut self, cert: P) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::ssl_cert`](struct.Easy2.html#method.ssl_cert)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::ssl_cert`](struct.Easy2.html#method.ssl_cert)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":88934,"byte_end":89000,"line_start":946,"line_end":946,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":89213,"byte_end":89226,"line_start":952,"line_end":952,"column_start":12,"column_end":25},"name":"ssl_cert_type","qualname":"<Easy>::ssl_cert_type","value":"fn (&mut self, kind: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::ssl_cert_type`](struct.Easy2.html#method.ssl_cert_type)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::ssl_cert_type`](struct.Easy2.html#method.ssl_cert_type)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":89125,"byte_end":89201,"line_start":951,"line_end":951,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":89399,"byte_end":89406,"line_start":957,"line_end":957,"column_start":12,"column_end":19},"name":"ssl_key","qualname":"<Easy>::ssl_key","value":"fn <P> (&mut self, key: P) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::ssl_key`](struct.Easy2.html#method.ssl_key)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::ssl_key`](struct.Easy2.html#method.ssl_key)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":89323,"byte_end":89387,"line_start":956,"line_end":956,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":89594,"byte_end":89606,"line_start":962,"line_end":962,"column_start":12,"column_end":24},"name":"ssl_key_type","qualname":"<Easy>::ssl_key_type","value":"fn (&mut self, kind: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::ssl_key_type`](struct.Easy2.html#method.ssl_key_type)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::ssl_key_type`](struct.Easy2.html#method.ssl_key_type)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":89508,"byte_end":89582,"line_start":961,"line_end":961,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":89788,"byte_end":89800,"line_start":967,"line_end":967,"column_start":12,"column_end":24},"name":"key_password","qualname":"<Easy>::key_password","value":"fn (&mut self, password: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::key_password`](struct.Easy2.html#method.key_password)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::key_password`](struct.Easy2.html#method.key_password)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":89702,"byte_end":89776,"line_start":966,"line_end":966,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":89986,"byte_end":89996,"line_start":972,"line_end":972,"column_start":12,"column_end":22},"name":"ssl_engine","qualname":"<Easy>::ssl_engine","value":"fn (&mut self, engine: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::ssl_engine`](struct.Easy2.html#method.ssl_engine)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::ssl_engine`](struct.Easy2.html#method.ssl_engine)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":89904,"byte_end":89974,"line_start":971,"line_end":971,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":90192,"byte_end":90210,"line_start":977,"line_end":977,"column_start":12,"column_end":30},"name":"ssl_engine_default","qualname":"<Easy>::ssl_engine_default","value":"fn (&mut self, enable: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::ssl_engine_default`](struct.Easy2.html#method.ssl_engine_default)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::ssl_engine_default`](struct.Easy2.html#method.ssl_engine_default)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":90094,"byte_end":90180,"line_start":976,"line_end":976,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":90402,"byte_end":90414,"line_start":982,"line_end":982,"column_start":12,"column_end":24},"name":"http_version","qualname":"<Easy>::http_version","value":"fn (&mut self, version: HttpVersion) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::http_version`](struct.Easy2.html#method.http_version)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::http_version`](struct.Easy2.html#method.http_version)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":90316,"byte_end":90390,"line_start":981,"line_end":981,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":90607,"byte_end":90618,"line_start":987,"line_end":987,"column_start":12,"column_end":23},"name":"ssl_version","qualname":"<Easy>::ssl_version","value":"fn (&mut self, version: SslVersion) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::ssl_version`](struct.Easy2.html#method.ssl_version)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::ssl_version`](struct.Easy2.html#method.ssl_version)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":90523,"byte_end":90595,"line_start":986,"line_end":986,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":90825,"byte_end":90844,"line_start":992,"line_end":992,"column_start":12,"column_end":31},"name":"ssl_min_max_version","qualname":"<Easy>::ssl_min_max_version","value":"fn (&mut self, min_version: SslVersion, max_version: SslVersion) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::ssl_min_max_version`](struct.Easy2.html#method.ssl_min_max_version)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::ssl_min_max_version`](struct.Easy2.html#method.ssl_min_max_version)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":90725,"byte_end":90813,"line_start":991,"line_end":991,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":91128,"byte_end":91143,"line_start":1001,"line_end":1001,"column_start":12,"column_end":27},"name":"ssl_verify_host","qualname":"<Easy>::ssl_verify_host","value":"fn (&mut self, verify: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::ssl_verify_host`](struct.Easy2.html#method.ssl_verify_host)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::ssl_verify_host`](struct.Easy2.html#method.ssl_verify_host)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":91036,"byte_end":91116,"line_start":1000,"line_end":1000,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":91338,"byte_end":91353,"line_start":1006,"line_end":1006,"column_start":12,"column_end":27},"name":"ssl_verify_peer","qualname":"<Easy>::ssl_verify_peer","value":"fn (&mut self, verify: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::ssl_verify_peer`](struct.Easy2.html#method.ssl_verify_peer)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::ssl_verify_peer`](struct.Easy2.html#method.ssl_verify_peer)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":91246,"byte_end":91326,"line_start":1005,"line_end":1005,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":91530,"byte_end":91536,"line_start":1011,"line_end":1011,"column_start":12,"column_end":18},"name":"cainfo","qualname":"<Easy>::cainfo","value":"fn <P> (&mut self, path: P) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::cainfo`](struct.Easy2.html#method.cainfo)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::cainfo`](struct.Easy2.html#method.cainfo)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":91456,"byte_end":91518,"line_start":1010,"line_end":1010,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":430},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":91723,"byte_end":91734,"line_start":1016,"line_end":1016,"column_start":12,"column_end":23},"name":"issuer_cert","qualname":"<Easy>::issuer_cert","value":"fn <P> (&mut self, path: P) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::issuer_cert`](struct.Easy2.html#method.issuer_cert)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::issuer_cert`](struct.Easy2.html#method.issuer_cert)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":91639,"byte_end":91711,"line_start":1015,"line_end":1015,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":91916,"byte_end":91922,"line_start":1021,"line_end":1021,"column_start":12,"column_end":18},"name":"capath","qualname":"<Easy>::capath","value":"fn <P> (&mut self, path: P) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::capath`](struct.Easy2.html#method.capath)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::capath`](struct.Easy2.html#method.capath)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":91842,"byte_end":91904,"line_start":1020,"line_end":1020,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":92101,"byte_end":92108,"line_start":1026,"line_end":1026,"column_start":12,"column_end":19},"name":"crlfile","qualname":"<Easy>::crlfile","value":"fn <P> (&mut self, path: P) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::crlfile`](struct.Easy2.html#method.crlfile)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::crlfile`](struct.Easy2.html#method.crlfile)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":92025,"byte_end":92089,"line_start":1025,"line_end":1025,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":92290,"byte_end":92298,"line_start":1031,"line_end":1031,"column_start":12,"column_end":20},"name":"certinfo","qualname":"<Easy>::certinfo","value":"fn (&mut self, enable: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::certinfo`](struct.Easy2.html#method.certinfo)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::certinfo`](struct.Easy2.html#method.certinfo)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":92212,"byte_end":92278,"line_start":1030,"line_end":1030,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":92478,"byte_end":92489,"line_start":1036,"line_end":1036,"column_start":12,"column_end":23},"name":"random_file","qualname":"<Easy>::random_file","value":"fn <P> (&mut self, p: P) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::random_file`](struct.Easy2.html#method.random_file)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::random_file`](struct.Easy2.html#method.random_file)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":92394,"byte_end":92466,"line_start":1035,"line_end":1035,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":92673,"byte_end":92683,"line_start":1041,"line_end":1041,"column_start":12,"column_end":22},"name":"egd_socket","qualname":"<Easy>::egd_socket","value":"fn <P> (&mut self, p: P) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::egd_socket`](struct.Easy2.html#method.egd_socket)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::egd_socket`](struct.Easy2.html#method.egd_socket)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":92591,"byte_end":92661,"line_start":1040,"line_end":1040,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":92876,"byte_end":92891,"line_start":1046,"line_end":1046,"column_start":12,"column_end":27},"name":"ssl_cipher_list","qualname":"<Easy>::ssl_cipher_list","value":"fn (&mut self, ciphers: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::ssl_cipher_list`](struct.Easy2.html#method.ssl_cipher_list)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::ssl_cipher_list`](struct.Easy2.html#method.ssl_cipher_list)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":92784,"byte_end":92864,"line_start":1045,"line_end":1045,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":93096,"byte_end":93115,"line_start":1051,"line_end":1051,"column_start":12,"column_end":31},"name":"ssl_sessionid_cache","qualname":"<Easy>::ssl_sessionid_cache","value":"fn (&mut self, enable: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::ssl_sessionid_cache`](struct.Easy2.html#method.ssl_sessionid_cache)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::ssl_sessionid_cache`](struct.Easy2.html#method.ssl_sessionid_cache)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":92996,"byte_end":93084,"line_start":1050,"line_end":1050,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":93306,"byte_end":93317,"line_start":1056,"line_end":1056,"column_start":12,"column_end":23},"name":"ssl_options","qualname":"<Easy>::ssl_options","value":"fn (&mut self, bits: &SslOpt) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::ssl_options`](struct.Easy2.html#method.ssl_options)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::ssl_options`](struct.Easy2.html#method.ssl_options)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":93222,"byte_end":93294,"line_start":1055,"line_end":1055,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":93614,"byte_end":93634,"line_start":1064,"line_end":1064,"column_start":12,"column_end":32},"name":"time_condition_unmet","qualname":"<Easy>::time_condition_unmet","value":"fn (&mut self) -> Result<bool, Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::time_condition_unmet`](struct.Easy2.html#method.time_condition_unmet)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::time_condition_unmet`](struct.Easy2.html#method.time_condition_unmet)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":93512,"byte_end":93602,"line_start":1063,"line_end":1063,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":93812,"byte_end":93825,"line_start":1069,"line_end":1069,"column_start":12,"column_end":25},"name":"effective_url","qualname":"<Easy>::effective_url","value":"fn (&mut self) -> Result<Option<&str>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::effective_url`](struct.Easy2.html#method.effective_url)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::effective_url`](struct.Easy2.html#method.effective_url)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":93724,"byte_end":93800,"line_start":1068,"line_end":1068,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":94016,"byte_end":94035,"line_start":1074,"line_end":1074,"column_start":12,"column_end":31},"name":"effective_url_bytes","qualname":"<Easy>::effective_url_bytes","value":"fn (&mut self) -> Result<Option<&[u8]>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::effective_url_bytes`](struct.Easy2.html#method.effective_url_bytes)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::effective_url_bytes`](struct.Easy2.html#method.effective_url_bytes)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":93916,"byte_end":94004,"line_start":1073,"line_end":1073,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":94221,"byte_end":94234,"line_start":1079,"line_end":1079,"column_start":12,"column_end":25},"name":"response_code","qualname":"<Easy>::response_code","value":"fn (&mut self) -> Result<u32, Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::response_code`](struct.Easy2.html#method.response_code)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::response_code`](struct.Easy2.html#method.response_code)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":94133,"byte_end":94209,"line_start":1078,"line_end":1078,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":94410,"byte_end":94426,"line_start":1084,"line_end":1084,"column_start":12,"column_end":28},"name":"http_connectcode","qualname":"<Easy>::http_connectcode","value":"fn (&mut self) -> Result<u32, Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::http_connectcode`](struct.Easy2.html#method.http_connectcode)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::http_connectcode`](struct.Easy2.html#method.http_connectcode)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":94316,"byte_end":94398,"line_start":1083,"line_end":1083,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":94589,"byte_end":94597,"line_start":1089,"line_end":1089,"column_start":12,"column_end":20},"name":"filetime","qualname":"<Easy>::filetime","value":"fn (&mut self) -> Result<Option<i64>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::filetime`](struct.Easy2.html#method.filetime)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::filetime`](struct.Easy2.html#method.filetime)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":94511,"byte_end":94577,"line_start":1088,"line_end":1088,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":94770,"byte_end":94783,"line_start":1094,"line_end":1094,"column_start":12,"column_end":25},"name":"download_size","qualname":"<Easy>::download_size","value":"fn (&mut self) -> Result<f64, Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::download_size`](struct.Easy2.html#method.download_size)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::download_size`](struct.Easy2.html#method.download_size)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":94682,"byte_end":94758,"line_start":1093,"line_end":1093,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":94972,"byte_end":94995,"line_start":1098,"line_end":1098,"column_start":12,"column_end":35},"name":"content_length_download","qualname":"<Easy>::content_length_download","value":"fn (&mut self) -> Result<f64, Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::content_length_download`](struct.Easy2.html#method.content_length_download)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::content_length_download`](struct.Easy2.html#method.content_length_download)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":94864,"byte_end":94960,"line_start":1097,"line_end":1097,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":95169,"byte_end":95179,"line_start":1103,"line_end":1103,"column_start":12,"column_end":22},"name":"total_time","qualname":"<Easy>::total_time","value":"fn (&mut self) -> Result<Duration, Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::total_time`](struct.Easy2.html#method.total_time)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::total_time`](struct.Easy2.html#method.total_time)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":95087,"byte_end":95157,"line_start":1102,"line_end":1102,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":95355,"byte_end":95370,"line_start":1108,"line_end":1108,"column_start":12,"column_end":27},"name":"namelookup_time","qualname":"<Easy>::namelookup_time","value":"fn (&mut self) -> Result<Duration, Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::namelookup_time`](struct.Easy2.html#method.namelookup_time)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::namelookup_time`](struct.Easy2.html#method.namelookup_time)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":95263,"byte_end":95343,"line_start":1107,"line_end":1107,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":95545,"byte_end":95557,"line_start":1113,"line_end":1113,"column_start":12,"column_end":24},"name":"connect_time","qualname":"<Easy>::connect_time","value":"fn (&mut self) -> Result<Duration, Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::connect_time`](struct.Easy2.html#method.connect_time)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::connect_time`](struct.Easy2.html#method.connect_time)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":95459,"byte_end":95533,"line_start":1112,"line_end":1112,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":455},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":95735,"byte_end":95750,"line_start":1118,"line_end":1118,"column_start":12,"column_end":27},"name":"appconnect_time","qualname":"<Easy>::appconnect_time","value":"fn (&mut self) -> Result<Duration, Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::appconnect_time`](struct.Easy2.html#method.appconnect_time)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::appconnect_time`](struct.Easy2.html#method.appconnect_time)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":95643,"byte_end":95723,"line_start":1117,"line_end":1117,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":95933,"byte_end":95949,"line_start":1123,"line_end":1123,"column_start":12,"column_end":28},"name":"pretransfer_time","qualname":"<Easy>::pretransfer_time","value":"fn (&mut self) -> Result<Duration, Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::pretransfer_time`](struct.Easy2.html#method.pretransfer_time)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::pretransfer_time`](struct.Easy2.html#method.pretransfer_time)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":95839,"byte_end":95921,"line_start":1122,"line_end":1122,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":96137,"byte_end":96155,"line_start":1128,"line_end":1128,"column_start":12,"column_end":30},"name":"starttransfer_time","qualname":"<Easy>::starttransfer_time","value":"fn (&mut self) -> Result<Duration, Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::starttransfer_time`](struct.Easy2.html#method.starttransfer_time)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::starttransfer_time`](struct.Easy2.html#method.starttransfer_time)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":96039,"byte_end":96125,"line_start":1127,"line_end":1127,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":96335,"byte_end":96348,"line_start":1133,"line_end":1133,"column_start":12,"column_end":25},"name":"redirect_time","qualname":"<Easy>::redirect_time","value":"fn (&mut self) -> Result<Duration, Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::redirect_time`](struct.Easy2.html#method.redirect_time)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::redirect_time`](struct.Easy2.html#method.redirect_time)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":96247,"byte_end":96323,"line_start":1132,"line_end":1132,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":96525,"byte_end":96539,"line_start":1138,"line_end":1138,"column_start":12,"column_end":26},"name":"redirect_count","qualname":"<Easy>::redirect_count","value":"fn (&mut self) -> Result<u32, Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::redirect_count`](struct.Easy2.html#method.redirect_count)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::redirect_count`](struct.Easy2.html#method.redirect_count)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":96435,"byte_end":96513,"line_start":1137,"line_end":1137,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":96708,"byte_end":96720,"line_start":1143,"line_end":1143,"column_start":12,"column_end":24},"name":"redirect_url","qualname":"<Easy>::redirect_url","value":"fn (&mut self) -> Result<Option<&str>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::redirect_url`](struct.Easy2.html#method.redirect_url)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::redirect_url`](struct.Easy2.html#method.redirect_url)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":96622,"byte_end":96696,"line_start":1142,"line_end":1142,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":96908,"byte_end":96926,"line_start":1148,"line_end":1148,"column_start":12,"column_end":30},"name":"redirect_url_bytes","qualname":"<Easy>::redirect_url_bytes","value":"fn (&mut self) -> Result<Option<&[u8]>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::redirect_url_bytes`](struct.Easy2.html#method.redirect_url_bytes)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::redirect_url_bytes`](struct.Easy2.html#method.redirect_url_bytes)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":96810,"byte_end":96896,"line_start":1147,"line_end":1147,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":97107,"byte_end":97118,"line_start":1153,"line_end":1153,"column_start":12,"column_end":23},"name":"header_size","qualname":"<Easy>::header_size","value":"fn (&mut self) -> Result<u64, Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::header_size`](struct.Easy2.html#method.header_size)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::header_size`](struct.Easy2.html#method.header_size)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":97023,"byte_end":97095,"line_start":1152,"line_end":1152,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":97284,"byte_end":97296,"line_start":1158,"line_end":1158,"column_start":12,"column_end":24},"name":"request_size","qualname":"<Easy>::request_size","value":"fn (&mut self) -> Result<u64, Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::request_size`](struct.Easy2.html#method.request_size)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::request_size`](struct.Easy2.html#method.request_size)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":97198,"byte_end":97272,"line_start":1157,"line_end":1157,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":97463,"byte_end":97475,"line_start":1163,"line_end":1163,"column_start":12,"column_end":24},"name":"content_type","qualname":"<Easy>::content_type","value":"fn (&mut self) -> Result<Option<&str>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::content_type`](struct.Easy2.html#method.content_type)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::content_type`](struct.Easy2.html#method.content_type)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":97377,"byte_end":97451,"line_start":1162,"line_end":1162,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":97663,"byte_end":97681,"line_start":1168,"line_end":1168,"column_start":12,"column_end":30},"name":"content_type_bytes","qualname":"<Easy>::content_type_bytes","value":"fn (&mut self) -> Result<Option<&[u8]>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::content_type_bytes`](struct.Easy2.html#method.content_type_bytes)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::content_type_bytes`](struct.Easy2.html#method.content_type_bytes)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":97565,"byte_end":97651,"line_start":1167,"line_end":1167,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":97856,"byte_end":97864,"line_start":1173,"line_end":1173,"column_start":12,"column_end":20},"name":"os_errno","qualname":"<Easy>::os_errno","value":"fn (&mut self) -> Result<i32, Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::os_errno`](struct.Easy2.html#method.os_errno)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::os_errno`](struct.Easy2.html#method.os_errno)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":97778,"byte_end":97844,"line_start":1172,"line_end":1172,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":98023,"byte_end":98033,"line_start":1178,"line_end":1178,"column_start":12,"column_end":22},"name":"primary_ip","qualname":"<Easy>::primary_ip","value":"fn (&mut self) -> Result<Option<&str>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::primary_ip`](struct.Easy2.html#method.primary_ip)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::primary_ip`](struct.Easy2.html#method.primary_ip)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":97941,"byte_end":98011,"line_start":1177,"line_end":1177,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":98207,"byte_end":98219,"line_start":1183,"line_end":1183,"column_start":12,"column_end":24},"name":"primary_port","qualname":"<Easy>::primary_port","value":"fn (&mut self) -> Result<u16, Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::primary_port`](struct.Easy2.html#method.primary_port)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::primary_port`](struct.Easy2.html#method.primary_port)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":98121,"byte_end":98195,"line_start":1182,"line_end":1182,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":98378,"byte_end":98386,"line_start":1188,"line_end":1188,"column_start":12,"column_end":20},"name":"local_ip","qualname":"<Easy>::local_ip","value":"fn (&mut self) -> Result<Option<&str>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::local_ip`](struct.Easy2.html#method.local_ip)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::local_ip`](struct.Easy2.html#method.local_ip)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":98300,"byte_end":98366,"line_start":1187,"line_end":1187,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":98554,"byte_end":98564,"line_start":1193,"line_end":1193,"column_start":12,"column_end":22},"name":"local_port","qualname":"<Easy>::local_port","value":"fn (&mut self) -> Result<u16, Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::local_port`](struct.Easy2.html#method.local_port)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::local_port`](struct.Easy2.html#method.local_port)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":98472,"byte_end":98542,"line_start":1192,"line_end":1192,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":98719,"byte_end":98726,"line_start":1198,"line_end":1198,"column_start":12,"column_end":19},"name":"cookies","qualname":"<Easy>::cookies","value":"fn (&mut self) -> Result<List, Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::cookies`](struct.Easy2.html#method.cookies)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::cookies`](struct.Easy2.html#method.cookies)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":98643,"byte_end":98707,"line_start":1197,"line_end":1197,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":98881,"byte_end":98889,"line_start":1203,"line_end":1203,"column_start":12,"column_end":20},"name":"pipewait","qualname":"<Easy>::pipewait","value":"fn (&mut self, wait: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::pipewait`](struct.Easy2.html#method.pipewait)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::pipewait`](struct.Easy2.html#method.pipewait)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":98803,"byte_end":98869,"line_start":1202,"line_end":1202,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":99160,"byte_end":99167,"line_start":1211,"line_end":1211,"column_start":12,"column_end":19},"name":"perform","qualname":"<Easy>::perform","value":"fn (&self) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::perform`](struct.Easy2.html#method.perform)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::perform`](struct.Easy2.html#method.perform)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":99084,"byte_end":99148,"line_start":1210,"line_end":1210,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":100858,"byte_end":100866,"line_start":1251,"line_end":1251,"column_start":12,"column_end":20},"name":"transfer","qualname":"<Easy>::transfer","value":"fn <'data, 'easy> (&'easy mut self) -> Transfer<'easy, 'data>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new scoped transfer which can be used to set callbacks and\n data which only live for the scope of the returned object.","sig":null,"attributes":[{"value":"/ Creates a new scoped transfer which can be used to set callbacks and","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":99990,"byte_end":100062,"line_start":1236,"line_end":1236,"column_start":5,"column_end":77}},{"value":"/ data which only live for the scope of the returned object.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":100067,"byte_end":100129,"line_start":1237,"line_end":1237,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":100134,"byte_end":100137,"line_start":1238,"line_end":1238,"column_start":5,"column_end":8}},{"value":"/ An `Easy` handle is often reused between different requests to cache","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":100142,"byte_end":100214,"line_start":1239,"line_end":1239,"column_start":5,"column_end":77}},{"value":"/ connections to servers, but often the lifetime of the data as part of","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":100219,"byte_end":100292,"line_start":1240,"line_end":1240,"column_start":5,"column_end":78}},{"value":"/ each transfer is unique. This function serves as an ability to share an","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":100297,"byte_end":100372,"line_start":1241,"line_end":1241,"column_start":5,"column_end":80}},{"value":"/ `Easy` across many transfers while ergonomically using possibly","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":100377,"byte_end":100444,"line_start":1242,"line_end":1242,"column_start":5,"column_end":72}},{"value":"/ stack-local data as part of each transfer.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":100449,"byte_end":100495,"line_start":1243,"line_end":1243,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":100500,"byte_end":100503,"line_start":1244,"line_end":1244,"column_start":5,"column_end":8}},{"value":"/ Configuration can be set on the `Easy` and then a `Transfer` can be","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":100508,"byte_end":100579,"line_start":1245,"line_end":1245,"column_start":5,"column_end":76}},{"value":"/ created to set scoped configuration (like callbacks). Finally, the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":100584,"byte_end":100654,"line_start":1246,"line_end":1246,"column_start":5,"column_end":75}},{"value":"/ `perform` method on the `Transfer` function can be used.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":100659,"byte_end":100719,"line_start":1247,"line_end":1247,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":100724,"byte_end":100727,"line_start":1248,"line_end":1248,"column_start":5,"column_end":8}},{"value":"/ When the `Transfer` option is dropped then all configuration set on the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":100732,"byte_end":100807,"line_start":1249,"line_end":1249,"column_start":5,"column_end":80}},{"value":"/ transfer itself will be reset.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":100812,"byte_end":100846,"line_start":1250,"line_end":1250,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":101180,"byte_end":101192,"line_start":1260,"line_end":1260,"column_start":12,"column_end":24},"name":"unpause_read","qualname":"<Easy>::unpause_read","value":"fn (&self) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::unpause_read`](struct.Easy2.html#method.unpause_read)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::unpause_read`](struct.Easy2.html#method.unpause_read)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":101094,"byte_end":101168,"line_start":1259,"line_end":1259,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":101356,"byte_end":101369,"line_start":1265,"line_end":1265,"column_start":12,"column_end":25},"name":"unpause_write","qualname":"<Easy>::unpause_write","value":"fn (&self) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::unpause_write`](struct.Easy2.html#method.unpause_write)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::unpause_write`](struct.Easy2.html#method.unpause_write)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":101268,"byte_end":101344,"line_start":1264,"line_end":1264,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":101528,"byte_end":101538,"line_start":1270,"line_end":1270,"column_start":12,"column_end":22},"name":"url_encode","qualname":"<Easy>::url_encode","value":"fn (&mut self, s: &[u8]) -> String","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::url_encode`](struct.Easy2.html#method.url_encode)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::url_encode`](struct.Easy2.html#method.url_encode)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":101446,"byte_end":101516,"line_start":1269,"line_end":1269,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":101698,"byte_end":101708,"line_start":1275,"line_end":1275,"column_start":12,"column_end":22},"name":"url_decode","qualname":"<Easy>::url_decode","value":"fn (&mut self, s: &str) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::url_decode`](struct.Easy2.html#method.url_decode)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::url_decode`](struct.Easy2.html#method.url_decode)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":101616,"byte_end":101686,"line_start":1274,"line_end":1274,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":101858,"byte_end":101863,"line_start":1280,"line_end":1280,"column_start":12,"column_end":17},"name":"reset","qualname":"<Easy>::reset","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::reset`](struct.Easy2.html#method.reset)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::reset`](struct.Easy2.html#method.reset)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":101786,"byte_end":101846,"line_start":1279,"line_end":1279,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":101985,"byte_end":101989,"line_start":1285,"line_end":1285,"column_start":12,"column_end":16},"name":"recv","qualname":"<Easy>::recv","value":"fn (&mut self, data: &mut [u8]) -> Result<usize, Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::recv`](struct.Easy2.html#method.recv)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::recv`](struct.Easy2.html#method.recv)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":101915,"byte_end":101973,"line_start":1284,"line_end":1284,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":102155,"byte_end":102159,"line_start":1290,"line_end":1290,"column_start":12,"column_end":16},"name":"send","qualname":"<Easy>::send","value":"fn (&mut self, data: &[u8]) -> Result<usize, Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::send`](struct.Easy2.html#method.send)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::send`](struct.Easy2.html#method.send)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":102085,"byte_end":102143,"line_start":1289,"line_end":1289,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":102319,"byte_end":102322,"line_start":1295,"line_end":1295,"column_start":12,"column_end":15},"name":"raw","qualname":"<Easy>::raw","value":"fn (&self) -> *mut curl_sys::CURL","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::raw`](struct.Easy2.html#method.raw)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::raw`](struct.Easy2.html#method.raw)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":102251,"byte_end":102307,"line_start":1294,"line_end":1294,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":102481,"byte_end":102495,"line_start":1300,"line_end":1300,"column_start":12,"column_end":26},"name":"take_error_buf","qualname":"<Easy>::take_error_buf","value":"fn (&self) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Easy2::take_error_buf`](struct.Easy2.html#method.take_error_buf)\n","sig":null,"attributes":[{"value":"/ Same as [`Easy2::take_error_buf`](struct.Easy2.html#method.take_error_buf)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":102391,"byte_end":102469,"line_start":1299,"line_end":1299,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":106136,"byte_end":106150,"line_start":1413,"line_end":1413,"column_start":12,"column_end":26},"name":"write_function","qualname":"<Transfer>::write_function","value":"fn <F> (&mut self, f: F) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as `Easy::write_function`, just takes a non `'static` lifetime\n corresponding to the lifetime of this transfer.\n","sig":null,"attributes":[{"value":"/ Same as `Easy::write_function`, just takes a non `'static` lifetime","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":105997,"byte_end":106068,"line_start":1411,"line_end":1411,"column_start":5,"column_end":76}},{"value":"/ corresponding to the lifetime of this transfer.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":106073,"byte_end":106124,"line_start":1412,"line_end":1412,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":106479,"byte_end":106492,"line_start":1423,"line_end":1423,"column_start":12,"column_end":25},"name":"read_function","qualname":"<Transfer>::read_function","value":"fn <F> (&mut self, f: F) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as `Easy::read_function`, just takes a non `'static` lifetime\n corresponding to the lifetime of this transfer.\n","sig":null,"attributes":[{"value":"/ Same as `Easy::read_function`, just takes a non `'static` lifetime","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":106341,"byte_end":106411,"line_start":1421,"line_end":1421,"column_start":5,"column_end":75}},{"value":"/ corresponding to the lifetime of this transfer.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":106416,"byte_end":106467,"line_start":1422,"line_end":1422,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":106823,"byte_end":106836,"line_start":1433,"line_end":1433,"column_start":12,"column_end":25},"name":"seek_function","qualname":"<Transfer>::seek_function","value":"fn <F> (&mut self, f: F) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as `Easy::seek_function`, just takes a non `'static` lifetime\n corresponding to the lifetime of this transfer.\n","sig":null,"attributes":[{"value":"/ Same as `Easy::seek_function`, just takes a non `'static` lifetime","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":106685,"byte_end":106755,"line_start":1431,"line_end":1431,"column_start":5,"column_end":75}},{"value":"/ corresponding to the lifetime of this transfer.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":106760,"byte_end":106811,"line_start":1432,"line_end":1432,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":107156,"byte_end":107173,"line_start":1443,"line_end":1443,"column_start":12,"column_end":29},"name":"progress_function","qualname":"<Transfer>::progress_function","value":"fn <F> (&mut self, f: F) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as `Easy::progress_function`, just takes a non `'static` lifetime\n corresponding to the lifetime of this transfer.\n","sig":null,"attributes":[{"value":"/ Same as `Easy::progress_function`, just takes a non `'static` lifetime","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":107014,"byte_end":107088,"line_start":1441,"line_end":1441,"column_start":5,"column_end":79}},{"value":"/ corresponding to the lifetime of this transfer.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":107093,"byte_end":107144,"line_start":1442,"line_end":1442,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":528},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":107500,"byte_end":107516,"line_start":1453,"line_end":1453,"column_start":12,"column_end":28},"name":"ssl_ctx_function","qualname":"<Transfer>::ssl_ctx_function","value":"fn <F> (&mut self, f: F) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as `Easy::ssl_ctx_function`, just takes a non `'static`\n lifetime corresponding to the lifetime of this transfer.\n","sig":null,"attributes":[{"value":"/ Same as `Easy::ssl_ctx_function`, just takes a non `'static`","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":107359,"byte_end":107423,"line_start":1451,"line_end":1451,"column_start":5,"column_end":69}},{"value":"/ lifetime corresponding to the lifetime of this transfer.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":107428,"byte_end":107488,"line_start":1452,"line_end":1452,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":107853,"byte_end":107867,"line_start":1463,"line_end":1463,"column_start":12,"column_end":26},"name":"debug_function","qualname":"<Transfer>::debug_function","value":"fn <F> (&mut self, f: F) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as `Easy::debug_function`, just takes a non `'static` lifetime\n corresponding to the lifetime of this transfer.\n","sig":null,"attributes":[{"value":"/ Same as `Easy::debug_function`, just takes a non `'static` lifetime","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":107714,"byte_end":107785,"line_start":1461,"line_end":1461,"column_start":5,"column_end":76}},{"value":"/ corresponding to the lifetime of this transfer.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":107790,"byte_end":107841,"line_start":1462,"line_end":1462,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":108179,"byte_end":108194,"line_start":1473,"line_end":1473,"column_start":12,"column_end":27},"name":"header_function","qualname":"<Transfer>::header_function","value":"fn <F> (&mut self, f: F) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as `Easy::header_function`, just takes a non `'static` lifetime\n corresponding to the lifetime of this transfer.\n","sig":null,"attributes":[{"value":"/ Same as `Easy::header_function`, just takes a non `'static` lifetime","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":108039,"byte_end":108111,"line_start":1471,"line_end":1471,"column_start":5,"column_end":77}},{"value":"/ corresponding to the lifetime of this transfer.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":108116,"byte_end":108167,"line_start":1472,"line_end":1472,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":108405,"byte_end":108412,"line_start":1482,"line_end":1482,"column_start":12,"column_end":19},"name":"perform","qualname":"<Transfer>::perform","value":"fn (&self) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as `Easy::perform`.\n","sig":null,"attributes":[{"value":"/ Same as `Easy::perform`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":108365,"byte_end":108393,"line_start":1481,"line_end":1481,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":109369,"byte_end":109381,"line_start":1508,"line_end":1508,"column_start":12,"column_end":24},"name":"unpause_read","qualname":"<Transfer>::unpause_read","value":"fn (&self) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as `Easy::unpause_read`.\n","sig":null,"attributes":[{"value":"/ Same as `Easy::unpause_read`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":109324,"byte_end":109357,"line_start":1507,"line_end":1507,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":543},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":109501,"byte_end":109514,"line_start":1513,"line_end":1513,"column_start":12,"column_end":25},"name":"unpause_write","qualname":"<Transfer>::unpause_write","value":"fn (&self) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as `Easy::unpause_write`\n","sig":null,"attributes":[{"value":"/ Same as `Easy::unpause_write`","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":109456,"byte_end":109489,"line_start":1512,"line_end":1512,"column_start":5,"column_end":38}}]},{"kind":"Trait","id":{"krate":0,"index":586},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":111519,"byte_end":111526,"line_start":53,"line_end":53,"column_start":11,"column_end":18},"name":"Handler","qualname":"::easy::handler::Handler","value":"Handler","parent":null,"children":[{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594}],"decl_id":null,"docs":" A trait for the various callbacks used by libcurl to invoke user code.","sig":null,"attributes":[{"value":"/ A trait for the various callbacks used by libcurl to invoke user code.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":110456,"byte_end":110530,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":110531,"byte_end":110534,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This trait represents all operations that libcurl can possibly invoke a","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":110535,"byte_end":110610,"line_start":24,"line_end":24,"column_start":1,"column_end":76}},{"value":"/ client for code during an HTTP transaction. Each callback has a default","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":110611,"byte_end":110686,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/ \"noop\" implementation, the same as in libcurl. Types implementing this trait","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":110687,"byte_end":110767,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ may simply override the relevant functions to learn about the callbacks","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":110768,"byte_end":110843,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/ they're interested in.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":110844,"byte_end":110870,"line_start":28,"line_end":28,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":110871,"byte_end":110874,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":110875,"byte_end":110889,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":110890,"byte_end":110893,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":110894,"byte_end":110901,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ use curl::easy::{Easy2, Handler, WriteError};","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":110902,"byte_end":110951,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":110952,"byte_end":110955,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ struct Collector(Vec<u8>);","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":110956,"byte_end":110986,"line_start":35,"line_end":35,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":110987,"byte_end":110990,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ impl Handler for Collector {","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":110991,"byte_end":111023,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"/     fn write(&mut self, data: &[u8]) -> Result<usize, WriteError> {","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":111024,"byte_end":111095,"line_start":38,"line_end":38,"column_start":1,"column_end":72}},{"value":"/         self.0.extend_from_slice(data);","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":111096,"byte_end":111139,"line_start":39,"line_end":39,"column_start":1,"column_end":44}},{"value":"/         Ok(data.len())","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":111140,"byte_end":111166,"line_start":40,"line_end":40,"column_start":1,"column_end":27}},{"value":"/     }","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":111167,"byte_end":111176,"line_start":41,"line_end":41,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":111177,"byte_end":111182,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":111183,"byte_end":111186,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ let mut easy = Easy2::new(Collector(Vec::new()));","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":111187,"byte_end":111240,"line_start":44,"line_end":44,"column_start":1,"column_end":54}},{"value":"/ easy.get(true).unwrap();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":111241,"byte_end":111269,"line_start":45,"line_end":45,"column_start":1,"column_end":29}},{"value":"/ easy.url(\"https://www.rust-lang.org/\").unwrap();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":111270,"byte_end":111322,"line_start":46,"line_end":46,"column_start":1,"column_end":53}},{"value":"/ easy.perform().unwrap();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":111323,"byte_end":111351,"line_start":47,"line_end":47,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":111352,"byte_end":111355,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(easy.response_code().unwrap(), 200);","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":111356,"byte_end":111407,"line_start":49,"line_end":49,"column_start":1,"column_end":52}},{"value":"/ let contents = easy.get_ref();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":111408,"byte_end":111442,"line_start":50,"line_end":50,"column_start":1,"column_end":35}},{"value":"/ println!(\"{}\", String::from_utf8_lossy(&contents.0));","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":111443,"byte_end":111500,"line_start":51,"line_end":51,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":111501,"byte_end":111508,"line_start":52,"line_end":52,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":112932,"byte_end":112937,"line_start":80,"line_end":80,"column_start":8,"column_end":13},"name":"write","qualname":"::easy::handler::Handler::write","value":"fn (&mut self, data: &[u8]) -> Result<usize, WriteError>","parent":{"krate":0,"index":586},"children":[],"decl_id":null,"docs":" Callback invoked whenever curl has downloaded data for the application.","sig":null,"attributes":[{"value":"/ Callback invoked whenever curl has downloaded data for the application.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":111533,"byte_end":111608,"line_start":54,"line_end":54,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":111613,"byte_end":111616,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This callback function gets called by libcurl as soon as there is data","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":111621,"byte_end":111695,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/ received that needs to be saved.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":111700,"byte_end":111736,"line_start":57,"line_end":57,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":111741,"byte_end":111744,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ The callback function will be passed as much data as possible in all","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":111749,"byte_end":111821,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ invokes, but you must not make any assumptions. It may be one byte, it","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":111826,"byte_end":111900,"line_start":60,"line_end":60,"column_start":5,"column_end":79}},{"value":"/ may be thousands. If `show_header` is enabled, which makes header data","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":111905,"byte_end":111979,"line_start":61,"line_end":61,"column_start":5,"column_end":79}},{"value":"/ get passed to the write callback, you can get up to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":111984,"byte_end":112039,"line_start":62,"line_end":62,"column_start":5,"column_end":60}},{"value":"/ `CURL_MAX_HTTP_HEADER` bytes of header data passed into it.  This","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":112044,"byte_end":112113,"line_start":63,"line_end":63,"column_start":5,"column_end":74}},{"value":"/ usually means 100K.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":112118,"byte_end":112141,"line_start":64,"line_end":64,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":112146,"byte_end":112149,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ This function may be called with zero bytes data if the transferred file","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":112154,"byte_end":112230,"line_start":66,"line_end":66,"column_start":5,"column_end":81}},{"value":"/ is empty.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":112235,"byte_end":112248,"line_start":67,"line_end":67,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":112253,"byte_end":112256,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ The callback should return the number of bytes actually taken care of.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":112261,"byte_end":112335,"line_start":69,"line_end":69,"column_start":5,"column_end":79}},{"value":"/ If that amount differs from the amount passed to your callback function,","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":112340,"byte_end":112416,"line_start":70,"line_end":70,"column_start":5,"column_end":81}},{"value":"/ it'll signal an error condition to the library. This will cause the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":112421,"byte_end":112492,"line_start":71,"line_end":71,"column_start":5,"column_end":76}},{"value":"/ transfer to get aborted and the libcurl function used will return","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":112497,"byte_end":112566,"line_start":72,"line_end":72,"column_start":5,"column_end":74}},{"value":"/ an error with `is_write_error`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":112571,"byte_end":112606,"line_start":73,"line_end":73,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":112611,"byte_end":112614,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ If your callback function returns `Err(WriteError::Pause)` it will cause","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":112619,"byte_end":112695,"line_start":75,"line_end":75,"column_start":5,"column_end":81}},{"value":"/ this transfer to become paused. See `unpause_write` for further details.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":112700,"byte_end":112776,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":112781,"byte_end":112784,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ By default data is sent into the void, and this corresponds to the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":112789,"byte_end":112859,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ `CURLOPT_WRITEFUNCTION` and `CURLOPT_WRITEDATA` options.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":112864,"byte_end":112924,"line_start":79,"line_end":79,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":114581,"byte_end":114585,"line_start":113,"line_end":113,"column_start":8,"column_end":12},"name":"read","qualname":"::easy::handler::Handler::read","value":"fn (&mut self, data: &mut [u8]) -> Result<usize, ReadError>","parent":{"krate":0,"index":586},"children":[],"decl_id":null,"docs":" Read callback for data uploads.","sig":null,"attributes":[{"value":"/ Read callback for data uploads.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":113027,"byte_end":113062,"line_start":84,"line_end":84,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":113067,"byte_end":113070,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ This callback function gets called by libcurl as soon as it needs to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":113075,"byte_end":113147,"line_start":86,"line_end":86,"column_start":5,"column_end":77}},{"value":"/ read data in order to send it to the peer - like if you ask it to upload","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":113152,"byte_end":113228,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ or post data to the server.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":113233,"byte_end":113264,"line_start":88,"line_end":88,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":113269,"byte_end":113272,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ Your function must then return the actual number of bytes that it stored","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":113277,"byte_end":113353,"line_start":90,"line_end":90,"column_start":5,"column_end":81}},{"value":"/ in that memory area. Returning 0 will signal end-of-file to the library","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":113358,"byte_end":113433,"line_start":91,"line_end":91,"column_start":5,"column_end":80}},{"value":"/ and cause it to stop the current transfer.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":113438,"byte_end":113484,"line_start":92,"line_end":92,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":113489,"byte_end":113492,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ If you stop the current transfer by returning 0 \"pre-maturely\" (i.e","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":113497,"byte_end":113568,"line_start":94,"line_end":94,"column_start":5,"column_end":76}},{"value":"/ before the server expected it, like when you've said you will upload N","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":113573,"byte_end":113647,"line_start":95,"line_end":95,"column_start":5,"column_end":79}},{"value":"/ bytes and you upload less than N bytes), you may experience that the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":113652,"byte_end":113724,"line_start":96,"line_end":96,"column_start":5,"column_end":77}},{"value":"/ server \"hangs\" waiting for the rest of the data that won't come.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":113729,"byte_end":113797,"line_start":97,"line_end":97,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":113802,"byte_end":113805,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ The read callback may return `Err(ReadError::Abort)` to stop the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":113810,"byte_end":113878,"line_start":99,"line_end":99,"column_start":5,"column_end":73}},{"value":"/ current operation immediately, resulting in a `is_aborted_by_callback`","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":113883,"byte_end":113957,"line_start":100,"line_end":100,"column_start":5,"column_end":79}},{"value":"/ error code from the transfer.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":113962,"byte_end":113995,"line_start":101,"line_end":101,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":114000,"byte_end":114003,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ The callback can return `Err(ReadError::Pause)` to cause reading from","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":114008,"byte_end":114081,"line_start":103,"line_end":103,"column_start":5,"column_end":78}},{"value":"/ this connection to pause. See `unpause_read` for further details.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":114086,"byte_end":114155,"line_start":104,"line_end":104,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":114160,"byte_end":114163,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ By default data not input, and this corresponds to the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":114168,"byte_end":114226,"line_start":106,"line_end":106,"column_start":5,"column_end":63}},{"value":"/ `CURLOPT_READFUNCTION` and `CURLOPT_READDATA` options.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":114231,"byte_end":114289,"line_start":107,"line_end":107,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":114294,"byte_end":114297,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ Note that the lifetime bound on this function is `'static`, but that","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":114302,"byte_end":114374,"line_start":109,"line_end":109,"column_start":5,"column_end":77}},{"value":"/ is often too restrictive. To use stack data consider calling the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":114379,"byte_end":114447,"line_start":110,"line_end":110,"column_start":5,"column_end":73}},{"value":"/ `transfer` method and then using `read_function` to configure a","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":114452,"byte_end":114519,"line_start":111,"line_end":111,"column_start":5,"column_end":72}},{"value":"/ callback that can reference stack-local data.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":114524,"byte_end":114573,"line_start":112,"line_end":112,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":115848,"byte_end":115852,"line_start":137,"line_end":137,"column_start":8,"column_end":12},"name":"seek","qualname":"::easy::handler::Handler::seek","value":"fn (&mut self, whence: SeekFrom) -> SeekResult","parent":{"krate":0,"index":586},"children":[],"decl_id":null,"docs":" User callback for seeking in input stream.","sig":null,"attributes":[{"value":"/ User callback for seeking in input stream.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":114689,"byte_end":114735,"line_start":118,"line_end":118,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":114740,"byte_end":114743,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ This function gets called by libcurl to seek to a certain position in","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":114748,"byte_end":114821,"line_start":120,"line_end":120,"column_start":5,"column_end":78}},{"value":"/ the input stream and can be used to fast forward a file in a resumed","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":114826,"byte_end":114898,"line_start":121,"line_end":121,"column_start":5,"column_end":77}},{"value":"/ upload (instead of reading all uploaded bytes with the normal read","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":114903,"byte_end":114973,"line_start":122,"line_end":122,"column_start":5,"column_end":75}},{"value":"/ function/callback). It is also called to rewind a stream when data has","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":114978,"byte_end":115052,"line_start":123,"line_end":123,"column_start":5,"column_end":79}},{"value":"/ already been sent to the server and needs to be sent again. This may","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":115057,"byte_end":115129,"line_start":124,"line_end":124,"column_start":5,"column_end":77}},{"value":"/ happen when doing a HTTP PUT or POST with a multi-pass authentication","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":115134,"byte_end":115207,"line_start":125,"line_end":125,"column_start":5,"column_end":78}},{"value":"/ method, or when an existing HTTP connection is reused too late and the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":115212,"byte_end":115286,"line_start":126,"line_end":126,"column_start":5,"column_end":79}},{"value":"/ server closes the connection.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":115291,"byte_end":115324,"line_start":127,"line_end":127,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":115329,"byte_end":115332,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ The callback function must return `SeekResult::Ok` on success,","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":115337,"byte_end":115403,"line_start":129,"line_end":129,"column_start":5,"column_end":71}},{"value":"/ `SeekResult::Fail` to cause the upload operation to fail or","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":115408,"byte_end":115471,"line_start":130,"line_end":130,"column_start":5,"column_end":68}},{"value":"/ `SeekResult::CantSeek` to indicate that while the seek failed, libcurl","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":115476,"byte_end":115550,"line_start":131,"line_end":131,"column_start":5,"column_end":79}},{"value":"/ is free to work around the problem if possible. The latter can sometimes","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":115555,"byte_end":115631,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ be done by instead reading from the input or similar.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":115636,"byte_end":115693,"line_start":133,"line_end":133,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":115698,"byte_end":115701,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ By default data this option is not set, and this corresponds to the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":115706,"byte_end":115777,"line_start":135,"line_end":135,"column_start":5,"column_end":76}},{"value":"/ `CURLOPT_SEEKFUNCTION` and `CURLOPT_SEEKDATA` options.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":115782,"byte_end":115840,"line_start":136,"line_end":136,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":116331,"byte_end":116336,"line_start":150,"line_end":150,"column_start":8,"column_end":13},"name":"debug","qualname":"::easy::handler::Handler::debug","value":"fn (&mut self, kind: InfoType, data: &[u8]) -> ()","parent":{"krate":0,"index":586},"children":[],"decl_id":null,"docs":" Specify a debug callback","sig":null,"attributes":[{"value":"/ Specify a debug callback","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":115960,"byte_end":115988,"line_start":142,"line_end":142,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":115993,"byte_end":115996,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ `debug_function` replaces the standard debug function used when","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":116001,"byte_end":116068,"line_start":144,"line_end":144,"column_start":5,"column_end":72}},{"value":"/ `verbose` is in effect. This callback receives debug information,","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":116073,"byte_end":116142,"line_start":145,"line_end":145,"column_start":5,"column_end":74}},{"value":"/ as specified in the type argument.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":116147,"byte_end":116185,"line_start":146,"line_end":146,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":116190,"byte_end":116193,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ By default this option is not set and corresponds to the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":116198,"byte_end":116258,"line_start":148,"line_end":148,"column_start":5,"column_end":65}},{"value":"/ `CURLOPT_DEBUGFUNCTION` and `CURLOPT_DEBUGDATA` options.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":116263,"byte_end":116323,"line_start":149,"line_end":149,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":591},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":118414,"byte_end":118420,"line_start":187,"line_end":187,"column_start":8,"column_end":14},"name":"header","qualname":"::easy::handler::Handler::header","value":"fn (&mut self, data: &[u8]) -> bool","parent":{"krate":0,"index":586},"children":[],"decl_id":null,"docs":" Callback that receives header data","sig":null,"attributes":[{"value":"/ Callback that receives header data","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":116416,"byte_end":116454,"line_start":154,"line_end":154,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":116459,"byte_end":116462,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ This function gets called by libcurl as soon as it has received header","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":116467,"byte_end":116541,"line_start":156,"line_end":156,"column_start":5,"column_end":79}},{"value":"/ data. The header callback will be called once for each header and only","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":116546,"byte_end":116620,"line_start":157,"line_end":157,"column_start":5,"column_end":79}},{"value":"/ complete header lines are passed on to the callback. Parsing headers is","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":116625,"byte_end":116700,"line_start":158,"line_end":158,"column_start":5,"column_end":80}},{"value":"/ very easy using this. If this callback returns `false` it'll signal an","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":116705,"byte_end":116779,"line_start":159,"line_end":159,"column_start":5,"column_end":79}},{"value":"/ error to the library. This will cause the transfer to get aborted and","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":116784,"byte_end":116857,"line_start":160,"line_end":160,"column_start":5,"column_end":78}},{"value":"/ the libcurl function in progress will return `is_write_error`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":116862,"byte_end":116928,"line_start":161,"line_end":161,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":116933,"byte_end":116936,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ A complete HTTP header that is passed to this function can be up to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":116941,"byte_end":117012,"line_start":163,"line_end":163,"column_start":5,"column_end":76}},{"value":"/ CURL_MAX_HTTP_HEADER (100K) bytes.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":117017,"byte_end":117055,"line_start":164,"line_end":164,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":117060,"byte_end":117063,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ It's important to note that the callback will be invoked for the headers","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":117068,"byte_end":117144,"line_start":166,"line_end":166,"column_start":5,"column_end":81}},{"value":"/ of all responses received after initiating a request and not just the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":117149,"byte_end":117222,"line_start":167,"line_end":167,"column_start":5,"column_end":78}},{"value":"/ final response. This includes all responses which occur during","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":117227,"byte_end":117293,"line_start":168,"line_end":168,"column_start":5,"column_end":71}},{"value":"/ authentication negotiation. If you need to operate on only the headers","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":117298,"byte_end":117372,"line_start":169,"line_end":169,"column_start":5,"column_end":79}},{"value":"/ from the final response, you will need to collect headers in the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":117377,"byte_end":117445,"line_start":170,"line_end":170,"column_start":5,"column_end":73}},{"value":"/ callback yourself and use HTTP status lines, for example, to delimit","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":117450,"byte_end":117522,"line_start":171,"line_end":171,"column_start":5,"column_end":77}},{"value":"/ response boundaries.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":117527,"byte_end":117551,"line_start":172,"line_end":172,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":117556,"byte_end":117559,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ When a server sends a chunked encoded transfer, it may contain a","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":117564,"byte_end":117632,"line_start":174,"line_end":174,"column_start":5,"column_end":73}},{"value":"/ trailer. That trailer is identical to a HTTP header and if such a","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":117637,"byte_end":117706,"line_start":175,"line_end":175,"column_start":5,"column_end":74}},{"value":"/ trailer is received it is passed to the application using this callback","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":117711,"byte_end":117786,"line_start":176,"line_end":176,"column_start":5,"column_end":80}},{"value":"/ as well. There are several ways to detect it being a trailer and not an","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":117791,"byte_end":117866,"line_start":177,"line_end":177,"column_start":5,"column_end":80}},{"value":"/ ordinary header: 1) it comes after the response-body. 2) it comes after","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":117871,"byte_end":117946,"line_start":178,"line_end":178,"column_start":5,"column_end":80}},{"value":"/ the final header line (CR LF) 3) a Trailer: header among the regular","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":117951,"byte_end":118023,"line_start":179,"line_end":179,"column_start":5,"column_end":77}},{"value":"/ response-headers mention what header(s) to expect in the trailer.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":118028,"byte_end":118097,"line_start":180,"line_end":180,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":118102,"byte_end":118105,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ For non-HTTP protocols like FTP, POP3, IMAP and SMTP this function will","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":118110,"byte_end":118185,"line_start":182,"line_end":182,"column_start":5,"column_end":80}},{"value":"/ get called with the server responses to the commands that libcurl sends.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":118190,"byte_end":118266,"line_start":183,"line_end":183,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":118271,"byte_end":118274,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ By default this option is not set and corresponds to the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":118279,"byte_end":118339,"line_start":185,"line_end":185,"column_start":5,"column_end":65}},{"value":"/ `CURLOPT_HEADERFUNCTION` and `CURLOPT_HEADERDATA` options.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":118344,"byte_end":118406,"line_start":186,"line_end":186,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":120241,"byte_end":120249,"line_start":223,"line_end":223,"column_start":8,"column_end":16},"name":"progress","qualname":"::easy::handler::Handler::progress","value":"fn (&mut self, dltotal: f64, dlnow: f64, ultotal: f64, ulnow: f64) -> bool","parent":{"krate":0,"index":586},"children":[],"decl_id":null,"docs":" Callback to progress meter function","sig":null,"attributes":[{"value":"/ Callback to progress meter function","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":118499,"byte_end":118538,"line_start":192,"line_end":192,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":118543,"byte_end":118546,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ This function gets called by libcurl instead of its internal equivalent","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":118551,"byte_end":118626,"line_start":194,"line_end":194,"column_start":5,"column_end":80}},{"value":"/ with a frequent interval. While data is being transferred it will be","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":118631,"byte_end":118703,"line_start":195,"line_end":195,"column_start":5,"column_end":77}},{"value":"/ called very frequently, and during slow periods like when nothing is","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":118708,"byte_end":118780,"line_start":196,"line_end":196,"column_start":5,"column_end":77}},{"value":"/ being transferred it can slow down to about one call per second.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":118785,"byte_end":118853,"line_start":197,"line_end":197,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":118858,"byte_end":118861,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ The callback gets told how much data libcurl will transfer and has","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":118866,"byte_end":118936,"line_start":199,"line_end":199,"column_start":5,"column_end":75}},{"value":"/ transferred, in number of bytes. The first argument is the total number","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":118941,"byte_end":119016,"line_start":200,"line_end":200,"column_start":5,"column_end":80}},{"value":"/ of bytes libcurl expects to download in this transfer. The second","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":119021,"byte_end":119090,"line_start":201,"line_end":201,"column_start":5,"column_end":74}},{"value":"/ argument is the number of bytes downloaded so far. The third argument is","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":119095,"byte_end":119171,"line_start":202,"line_end":202,"column_start":5,"column_end":81}},{"value":"/ the total number of bytes libcurl expects to upload in this transfer.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":119176,"byte_end":119249,"line_start":203,"line_end":203,"column_start":5,"column_end":78}},{"value":"/ The fourth argument is the number of bytes uploaded so far.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":119254,"byte_end":119317,"line_start":204,"line_end":204,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":119322,"byte_end":119325,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ Unknown/unused argument values passed to the callback will be set to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":119330,"byte_end":119402,"line_start":206,"line_end":206,"column_start":5,"column_end":77}},{"value":"/ zero (like if you only download data, the upload size will remain 0).","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":119407,"byte_end":119480,"line_start":207,"line_end":207,"column_start":5,"column_end":78}},{"value":"/ Many times the callback will be called one or more times first, before","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":119485,"byte_end":119559,"line_start":208,"line_end":208,"column_start":5,"column_end":79}},{"value":"/ it knows the data sizes so a program must be made to handle that.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":119564,"byte_end":119633,"line_start":209,"line_end":209,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":119638,"byte_end":119641,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ Returning `false` from this callback will cause libcurl to abort the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":119646,"byte_end":119718,"line_start":211,"line_end":211,"column_start":5,"column_end":77}},{"value":"/ transfer and return `is_aborted_by_callback`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":119723,"byte_end":119772,"line_start":212,"line_end":212,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":119777,"byte_end":119780,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ If you transfer data with the multi interface, this function will not be","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":119785,"byte_end":119861,"line_start":214,"line_end":214,"column_start":5,"column_end":81}},{"value":"/ called during periods of idleness unless you call the appropriate","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":119866,"byte_end":119935,"line_start":215,"line_end":215,"column_start":5,"column_end":74}},{"value":"/ libcurl function that performs transfers.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":119940,"byte_end":119985,"line_start":216,"line_end":216,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":119990,"byte_end":119993,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ `progress` must be set to `true` to make this function actually get","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":119998,"byte_end":120069,"line_start":218,"line_end":218,"column_start":5,"column_end":76}},{"value":"/ called.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":120074,"byte_end":120085,"line_start":219,"line_end":219,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":120090,"byte_end":120093,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ By default this function calls an internal method and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":120098,"byte_end":120170,"line_start":221,"line_end":221,"column_start":5,"column_end":77}},{"value":"/ `CURLOPT_PROGRESSFUNCTION` and `CURLOPT_PROGRESSDATA`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":120175,"byte_end":120233,"line_start":222,"line_end":222,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":593},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":121766,"byte_end":121773,"line_start":255,"line_end":255,"column_start":8,"column_end":15},"name":"ssl_ctx","qualname":"::easy::handler::Handler::ssl_ctx","value":"fn (&mut self, cx: *mut c_void) -> Result<(), Error>","parent":{"krate":0,"index":586},"children":[],"decl_id":null,"docs":" Callback to SSL context","sig":null,"attributes":[{"value":"/ Callback to SSL context","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":120395,"byte_end":120422,"line_start":228,"line_end":228,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":120427,"byte_end":120430,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ This callback function gets called by libcurl just before the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":120435,"byte_end":120500,"line_start":230,"line_end":230,"column_start":5,"column_end":70}},{"value":"/ initialization of an SSL connection after having processed all","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":120505,"byte_end":120571,"line_start":231,"line_end":231,"column_start":5,"column_end":71}},{"value":"/ other SSL related options to give a last chance to an","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":120576,"byte_end":120633,"line_start":232,"line_end":232,"column_start":5,"column_end":62}},{"value":"/ application to modify the behaviour of the SSL","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":120638,"byte_end":120688,"line_start":233,"line_end":233,"column_start":5,"column_end":55}},{"value":"/ initialization. The `ssl_ctx` parameter is actually a pointer","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":120693,"byte_end":120758,"line_start":234,"line_end":234,"column_start":5,"column_end":70}},{"value":"/ to the SSL library's SSL_CTX. If an error is returned from the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":120763,"byte_end":120829,"line_start":235,"line_end":235,"column_start":5,"column_end":71}},{"value":"/ callback no attempt to establish a connection is made and the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":120834,"byte_end":120899,"line_start":236,"line_end":236,"column_start":5,"column_end":70}},{"value":"/ perform operation will return the callback's error code.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":120904,"byte_end":120964,"line_start":237,"line_end":237,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":120969,"byte_end":120972,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ This function will get called on all new connections made to a","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":120977,"byte_end":121043,"line_start":239,"line_end":239,"column_start":5,"column_end":71}},{"value":"/ server, during the SSL negotiation. The SSL_CTX pointer will","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":121048,"byte_end":121112,"line_start":240,"line_end":240,"column_start":5,"column_end":69}},{"value":"/ be a new one every time.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":121117,"byte_end":121145,"line_start":241,"line_end":241,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":121150,"byte_end":121153,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ To use this properly, a non-trivial amount of knowledge of","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":121158,"byte_end":121220,"line_start":243,"line_end":243,"column_start":5,"column_end":67}},{"value":"/ your SSL library is necessary. For example, you can use this","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":121225,"byte_end":121289,"line_start":244,"line_end":244,"column_start":5,"column_end":69}},{"value":"/ function to call library-specific callbacks to add additional","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":121294,"byte_end":121359,"line_start":245,"line_end":245,"column_start":5,"column_end":70}},{"value":"/ validation code for certificates, and even to change the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":121364,"byte_end":121424,"line_start":246,"line_end":246,"column_start":5,"column_end":65}},{"value":"/ actual URI of a HTTPS request.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":121429,"byte_end":121463,"line_start":247,"line_end":247,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":121468,"byte_end":121471,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ By default this function calls an internal method and","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":121476,"byte_end":121533,"line_start":249,"line_end":249,"column_start":5,"column_end":62}},{"value":"/ corresponds to `CURLOPT_SSL_CTX_FUNCTION` and","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":121538,"byte_end":121587,"line_start":250,"line_end":250,"column_start":5,"column_end":54}},{"value":"/ `CURLOPT_SSL_CTX_DATA`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":121592,"byte_end":121619,"line_start":251,"line_end":251,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":121624,"byte_end":121627,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ Note that this callback is not guaranteed to be called, not all versions","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":121632,"byte_end":121708,"line_start":253,"line_end":253,"column_start":5,"column_end":81}},{"value":"/ of libcurl support calling this callback.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":121713,"byte_end":121758,"line_start":254,"line_end":254,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":122777,"byte_end":122788,"line_start":275,"line_end":275,"column_start":8,"column_end":19},"name":"open_socket","qualname":"::easy::handler::Handler::open_socket","value":"fn (&mut self, family: c_int, socktype: c_int, protocol: c_int) -> Option<curl_sys::curl_socket_t>","parent":{"krate":0,"index":586},"children":[],"decl_id":null,"docs":" Callback to open sockets for libcurl.","sig":null,"attributes":[{"value":"/ Callback to open sockets for libcurl.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":122029,"byte_end":122070,"line_start":262,"line_end":262,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":122075,"byte_end":122078,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ This callback function gets called by libcurl instead of the socket(2)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":122083,"byte_end":122157,"line_start":264,"line_end":264,"column_start":5,"column_end":79}},{"value":"/ call. The callback function should return the newly created socket","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":122162,"byte_end":122232,"line_start":265,"line_end":265,"column_start":5,"column_end":75}},{"value":"/ or `None` in case no connection could be established or another","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":122237,"byte_end":122304,"line_start":266,"line_end":266,"column_start":5,"column_end":72}},{"value":"/ error was detected. Any additional `setsockopt(2)` calls can of course","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":122309,"byte_end":122383,"line_start":267,"line_end":267,"column_start":5,"column_end":79}},{"value":"/ be done on the socket at the user's discretion. A `None` return","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":122388,"byte_end":122455,"line_start":268,"line_end":268,"column_start":5,"column_end":72}},{"value":"/ value from the callback function will signal an unrecoverable error to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":122460,"byte_end":122534,"line_start":269,"line_end":269,"column_start":5,"column_end":79}},{"value":"/ libcurl and it will return `is_couldnt_connect` from the function that","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":122539,"byte_end":122613,"line_start":270,"line_end":270,"column_start":5,"column_end":79}},{"value":"/ triggered this callback.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":122618,"byte_end":122646,"line_start":271,"line_end":271,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":122651,"byte_end":122654,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ By default this function opens a standard socket and","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":122659,"byte_end":122715,"line_start":273,"line_end":273,"column_start":5,"column_end":61}},{"value":"/ corresponds to `CURLOPT_OPENSOCKETFUNCTION `.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":122720,"byte_end":122769,"line_start":274,"line_end":274,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":599},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":126763,"byte_end":126768,"line_start":378,"line_end":378,"column_start":12,"column_end":17},"name":"Easy2","qualname":"::easy::handler::Easy2","value":"Easy2 {  }","parent":null,"children":[{"krate":0,"index":601}],"decl_id":null,"docs":" Raw bindings to a libcurl \"easy session\".","sig":null,"attributes":[{"value":"/ Raw bindings to a libcurl \"easy session\".","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":124283,"byte_end":124328,"line_start":324,"line_end":324,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":124329,"byte_end":124332,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ This type corresponds to the `CURL` type in libcurl, and is probably what","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":124333,"byte_end":124410,"line_start":326,"line_end":326,"column_start":1,"column_end":78}},{"value":"/ you want for just sending off a simple HTTP request and fetching a response.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":124411,"byte_end":124491,"line_start":327,"line_end":327,"column_start":1,"column_end":81}},{"value":"/ Each easy handle can be thought of as a large builder before calling the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":124492,"byte_end":124568,"line_start":328,"line_end":328,"column_start":1,"column_end":77}},{"value":"/ final `perform` function.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":124569,"byte_end":124598,"line_start":329,"line_end":329,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":124599,"byte_end":124602,"line_start":330,"line_end":330,"column_start":1,"column_end":4}},{"value":"/ There are many many configuration options for each `Easy2` handle, and they","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":124603,"byte_end":124682,"line_start":331,"line_end":331,"column_start":1,"column_end":80}},{"value":"/ should all have their own documentation indicating what it affects and how","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":124683,"byte_end":124761,"line_start":332,"line_end":332,"column_start":1,"column_end":79}},{"value":"/ it interacts with other options. Some implementations of libcurl can use","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":124762,"byte_end":124838,"line_start":333,"line_end":333,"column_start":1,"column_end":77}},{"value":"/ this handle to interact with many different protocols, although by default","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":124839,"byte_end":124917,"line_start":334,"line_end":334,"column_start":1,"column_end":79}},{"value":"/ this crate only guarantees the HTTP/HTTPS protocols working.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":124918,"byte_end":124982,"line_start":335,"line_end":335,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":124983,"byte_end":124986,"line_start":336,"line_end":336,"column_start":1,"column_end":4}},{"value":"/ Note that almost all methods on this structure which configure various","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":124987,"byte_end":125061,"line_start":337,"line_end":337,"column_start":1,"column_end":75}},{"value":"/ properties return a `Result`. This is largely used to detect whether the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":125062,"byte_end":125138,"line_start":338,"line_end":338,"column_start":1,"column_end":77}},{"value":"/ underlying implementation of libcurl actually implements the option being","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":125139,"byte_end":125216,"line_start":339,"line_end":339,"column_start":1,"column_end":78}},{"value":"/ requested. If you're linked to a version of libcurl which doesn't support","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":125217,"byte_end":125294,"line_start":340,"line_end":340,"column_start":1,"column_end":78}},{"value":"/ the option, then an error will be returned. Some options also perform some","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":125295,"byte_end":125373,"line_start":341,"line_end":341,"column_start":1,"column_end":79}},{"value":"/ validation when they're set, and the error is returned through this vector.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":125374,"byte_end":125453,"line_start":342,"line_end":342,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":125454,"byte_end":125457,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ Note that historically this library contained an `Easy` handle so this one's","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":125458,"byte_end":125538,"line_start":344,"line_end":344,"column_start":1,"column_end":81}},{"value":"/ called `Easy2`. The major difference between the `Easy` type is that an","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":125539,"byte_end":125614,"line_start":345,"line_end":345,"column_start":1,"column_end":76}},{"value":"/ `Easy2` structure uses a trait instead of closures for all of the callbacks","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":125615,"byte_end":125694,"line_start":346,"line_end":346,"column_start":1,"column_end":80}},{"value":"/ that curl can invoke. The `Easy` type is actually built on top of this","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":125695,"byte_end":125769,"line_start":347,"line_end":347,"column_start":1,"column_end":75}},{"value":"/ `Easy` type, and this `Easy2` type can be more flexible in some situations","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":125770,"byte_end":125848,"line_start":348,"line_end":348,"column_start":1,"column_end":79}},{"value":"/ due to the generic parameter.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":125849,"byte_end":125882,"line_start":349,"line_end":349,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":125883,"byte_end":125886,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/ There's not necessarily a right answer for which type is correct to use, but","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":125887,"byte_end":125967,"line_start":351,"line_end":351,"column_start":1,"column_end":81}},{"value":"/ as a general rule of thumb `Easy` is typically a reasonable choice for","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":125968,"byte_end":126042,"line_start":352,"line_end":352,"column_start":1,"column_end":75}},{"value":"/ synchronous I/O and `Easy2` is a good choice for asynchronous I/O.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":126043,"byte_end":126113,"line_start":353,"line_end":353,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":126114,"byte_end":126117,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":126118,"byte_end":126132,"line_start":355,"line_end":355,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":126133,"byte_end":126136,"line_start":356,"line_end":356,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":126137,"byte_end":126144,"line_start":357,"line_end":357,"column_start":1,"column_end":8}},{"value":"/ use curl::easy::{Easy2, Handler, WriteError};","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":126145,"byte_end":126194,"line_start":358,"line_end":358,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":126195,"byte_end":126198,"line_start":359,"line_end":359,"column_start":1,"column_end":4}},{"value":"/ struct Collector(Vec<u8>);","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":126199,"byte_end":126229,"line_start":360,"line_end":360,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":126230,"byte_end":126233,"line_start":361,"line_end":361,"column_start":1,"column_end":4}},{"value":"/ impl Handler for Collector {","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":126234,"byte_end":126266,"line_start":362,"line_end":362,"column_start":1,"column_end":33}},{"value":"/     fn write(&mut self, data: &[u8]) -> Result<usize, WriteError> {","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":126267,"byte_end":126338,"line_start":363,"line_end":363,"column_start":1,"column_end":72}},{"value":"/         self.0.extend_from_slice(data);","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":126339,"byte_end":126382,"line_start":364,"line_end":364,"column_start":1,"column_end":44}},{"value":"/         Ok(data.len())","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":126383,"byte_end":126409,"line_start":365,"line_end":365,"column_start":1,"column_end":27}},{"value":"/     }","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":126410,"byte_end":126419,"line_start":366,"line_end":366,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":126420,"byte_end":126425,"line_start":367,"line_end":367,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":126426,"byte_end":126429,"line_start":368,"line_end":368,"column_start":1,"column_end":4}},{"value":"/ let mut easy = Easy2::new(Collector(Vec::new()));","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":126430,"byte_end":126483,"line_start":369,"line_end":369,"column_start":1,"column_end":54}},{"value":"/ easy.get(true).unwrap();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":126484,"byte_end":126512,"line_start":370,"line_end":370,"column_start":1,"column_end":29}},{"value":"/ easy.url(\"https://www.rust-lang.org/\").unwrap();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":126513,"byte_end":126565,"line_start":371,"line_end":371,"column_start":1,"column_end":53}},{"value":"/ easy.perform().unwrap();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":126566,"byte_end":126594,"line_start":372,"line_end":372,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":126595,"byte_end":126598,"line_start":373,"line_end":373,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(easy.response_code().unwrap(), 200);","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":126599,"byte_end":126650,"line_start":374,"line_end":374,"column_start":1,"column_end":52}},{"value":"/ let contents = easy.get_ref();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":126651,"byte_end":126685,"line_start":375,"line_end":375,"column_start":1,"column_end":35}},{"value":"/ println!(\"{}\", String::from_utf8_lossy(&contents.0));","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":126686,"byte_end":126743,"line_start":376,"line_end":376,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":126744,"byte_end":126751,"line_start":377,"line_end":377,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1152},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":127228,"byte_end":127232,"line_start":399,"line_end":399,"column_start":5,"column_end":9},"name":"Http","qualname":"::easy::handler::ProxyType::Http","value":"ProxyType::Http","parent":{"krate":0,"index":1151},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1155},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":127274,"byte_end":127279,"line_start":400,"line_end":400,"column_start":5,"column_end":10},"name":"Http1","qualname":"::easy::handler::ProxyType::Http1","value":"ProxyType::Http1","parent":{"krate":0,"index":1151},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1158},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":127325,"byte_end":127331,"line_start":401,"line_end":401,"column_start":5,"column_end":11},"name":"Socks4","qualname":"::easy::handler::ProxyType::Socks4","value":"ProxyType::Socks4","parent":{"krate":0,"index":1151},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1161},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":127375,"byte_end":127381,"line_start":402,"line_end":402,"column_start":5,"column_end":11},"name":"Socks5","qualname":"::easy::handler::ProxyType::Socks5","value":"ProxyType::Socks5","parent":{"krate":0,"index":1151},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1164},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":127425,"byte_end":127432,"line_start":403,"line_end":403,"column_start":5,"column_end":12},"name":"Socks4a","qualname":"::easy::handler::ProxyType::Socks4a","value":"ProxyType::Socks4a","parent":{"krate":0,"index":1151},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1167},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":127477,"byte_end":127491,"line_start":404,"line_end":404,"column_start":5,"column_end":19},"name":"Socks5Hostname","qualname":"::easy::handler::ProxyType::Socks5Hostname","value":"ProxyType::Socks5Hostname","parent":{"krate":0,"index":1151},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1151},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":127212,"byte_end":127221,"line_start":398,"line_end":398,"column_start":10,"column_end":19},"name":"ProxyType","qualname":"::easy::handler::ProxyType","value":"ProxyType::{Http, Http1, Socks4, Socks5, Socks4a, Socks5Hostname}","parent":null,"children":[{"krate":0,"index":1152},{"krate":0,"index":1155},{"krate":0,"index":1158},{"krate":0,"index":1161},{"krate":0,"index":1164},{"krate":0,"index":1167}],"decl_id":null,"docs":" Possible proxy types that libcurl currently understands.\n","sig":null,"attributes":[{"value":"/ Possible proxy types that libcurl currently understands.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":127071,"byte_end":127131,"line_start":394,"line_end":394,"column_start":1,"column_end":61}},{"value":"non_exhaustive","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":127132,"byte_end":127149,"line_start":395,"line_end":395,"column_start":1,"column_end":18}},{"value":"allow(missing_docs)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":127150,"byte_end":127172,"line_start":396,"line_end":396,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1176},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":127700,"byte_end":127704,"line_start":412,"line_end":412,"column_start":5,"column_end":9},"name":"None","qualname":"::easy::handler::TimeCondition::None","value":"TimeCondition::None","parent":{"krate":0,"index":1175},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1179},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":127750,"byte_end":127765,"line_start":413,"line_end":413,"column_start":5,"column_end":20},"name":"IfModifiedSince","qualname":"::easy::handler::TimeCondition::IfModifiedSince","value":"TimeCondition::IfModifiedSince","parent":{"krate":0,"index":1175},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1182},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":127817,"byte_end":127834,"line_start":414,"line_end":414,"column_start":5,"column_end":22},"name":"IfUnmodifiedSince","qualname":"::easy::handler::TimeCondition::IfUnmodifiedSince","value":"TimeCondition::IfUnmodifiedSince","parent":{"krate":0,"index":1175},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1185},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":127888,"byte_end":127900,"line_start":415,"line_end":415,"column_start":5,"column_end":17},"name":"LastModified","qualname":"::easy::handler::TimeCondition::LastModified","value":"TimeCondition::LastModified","parent":{"krate":0,"index":1175},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1175},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":127680,"byte_end":127693,"line_start":411,"line_end":411,"column_start":10,"column_end":23},"name":"TimeCondition","qualname":"::easy::handler::TimeCondition","value":"TimeCondition::{None, IfModifiedSince, IfUnmodifiedSince, LastModified}","parent":null,"children":[{"krate":0,"index":1176},{"krate":0,"index":1179},{"krate":0,"index":1182},{"krate":0,"index":1185}],"decl_id":null,"docs":" Possible conditions for the `time_condition` method.\n","sig":null,"attributes":[{"value":"/ Possible conditions for the `time_condition` method.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":127543,"byte_end":127599,"line_start":407,"line_end":407,"column_start":1,"column_end":57}},{"value":"non_exhaustive","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":127600,"byte_end":127617,"line_start":408,"line_end":408,"column_start":1,"column_end":18}},{"value":"allow(missing_docs)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":127618,"byte_end":127640,"line_start":409,"line_end":409,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1194},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":128100,"byte_end":128102,"line_start":423,"line_end":423,"column_start":5,"column_end":7},"name":"V4","qualname":"::easy::handler::IpResolve::V4","value":"IpResolve::V4","parent":{"krate":0,"index":1193},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1197},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":128147,"byte_end":128149,"line_start":424,"line_end":424,"column_start":5,"column_end":7},"name":"V6","qualname":"::easy::handler::IpResolve::V6","value":"IpResolve::V6","parent":{"krate":0,"index":1193},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1200},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":128194,"byte_end":128197,"line_start":425,"line_end":425,"column_start":5,"column_end":8},"name":"Any","qualname":"::easy::handler::IpResolve::Any","value":"IpResolve::Any","parent":{"krate":0,"index":1193},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1193},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":128084,"byte_end":128093,"line_start":422,"line_end":422,"column_start":10,"column_end":19},"name":"IpResolve","qualname":"::easy::handler::IpResolve","value":"IpResolve::{V4, V6, Any}","parent":null,"children":[{"krate":0,"index":1194},{"krate":0,"index":1197},{"krate":0,"index":1200}],"decl_id":null,"docs":" Possible values to pass to the `ip_resolve` method.\n","sig":null,"attributes":[{"value":"/ Possible values to pass to the `ip_resolve` method.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":127948,"byte_end":128003,"line_start":418,"line_end":418,"column_start":1,"column_end":56}},{"value":"non_exhaustive","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":128004,"byte_end":128021,"line_start":419,"line_end":419,"column_start":1,"column_end":18}},{"value":"allow(missing_docs)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":128022,"byte_end":128044,"line_start":420,"line_end":420,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1209},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":128498,"byte_end":128501,"line_start":434,"line_end":434,"column_start":5,"column_end":8},"name":"Any","qualname":"::easy::handler::HttpVersion::Any","value":"HttpVersion::Any","parent":{"krate":0,"index":1208},"children":[],"decl_id":null,"docs":" We don't care what http version to use, and we'd like the library to\n choose the best possible for us.\n","sig":null,"attributes":[{"value":"/ We don't care what http version to use, and we'd like the library to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":128380,"byte_end":128452,"line_start":432,"line_end":432,"column_start":5,"column_end":77}},{"value":"/ choose the best possible for us.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":128457,"byte_end":128493,"line_start":433,"line_end":433,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1212},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":128595,"byte_end":128598,"line_start":437,"line_end":437,"column_start":5,"column_end":8},"name":"V10","qualname":"::easy::handler::HttpVersion::V10","value":"HttpVersion::V10","parent":{"krate":0,"index":1208},"children":[],"decl_id":null,"docs":" Please use HTTP 1.0 in the request\n","sig":null,"attributes":[{"value":"/ Please use HTTP 1.0 in the request","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":128552,"byte_end":128590,"line_start":436,"line_end":436,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1215},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":128691,"byte_end":128694,"line_start":440,"line_end":440,"column_start":5,"column_end":8},"name":"V11","qualname":"::easy::handler::HttpVersion::V11","value":"HttpVersion::V11","parent":{"krate":0,"index":1208},"children":[],"decl_id":null,"docs":" Please use HTTP 1.1 in the request\n","sig":null,"attributes":[{"value":"/ Please use HTTP 1.1 in the request","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":128648,"byte_end":128686,"line_start":439,"line_end":439,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1218},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":128816,"byte_end":128818,"line_start":444,"line_end":444,"column_start":5,"column_end":7},"name":"V2","qualname":"::easy::handler::HttpVersion::V2","value":"HttpVersion::V2","parent":{"krate":0,"index":1208},"children":[],"decl_id":null,"docs":" Please use HTTP 2 in the request\n (Added in CURL 7.33.0)\n","sig":null,"attributes":[{"value":"/ Please use HTTP 2 in the request","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":128744,"byte_end":128780,"line_start":442,"line_end":442,"column_start":5,"column_end":41}},{"value":"/ (Added in CURL 7.33.0)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":128785,"byte_end":128811,"line_start":443,"line_end":443,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1221},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":128953,"byte_end":128958,"line_start":448,"line_end":448,"column_start":5,"column_end":10},"name":"V2TLS","qualname":"::easy::handler::HttpVersion::V2TLS","value":"HttpVersion::V2TLS","parent":{"krate":0,"index":1208},"children":[],"decl_id":null,"docs":" Use version 2 for HTTPS, version 1.1 for HTTP\n (Added in CURL 7.47.0)\n","sig":null,"attributes":[{"value":"/ Use version 2 for HTTPS, version 1.1 for HTTP","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":128868,"byte_end":128917,"line_start":446,"line_end":446,"column_start":5,"column_end":54}},{"value":"/ (Added in CURL 7.47.0)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":128922,"byte_end":128948,"line_start":447,"line_end":447,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1224},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":129091,"byte_end":129107,"line_start":452,"line_end":452,"column_start":5,"column_end":21},"name":"V2PriorKnowledge","qualname":"::easy::handler::HttpVersion::V2PriorKnowledge","value":"HttpVersion::V2PriorKnowledge","parent":{"krate":0,"index":1208},"children":[],"decl_id":null,"docs":" Please use HTTP 2 without HTTP/1.1 Upgrade\n (Added in CURL 7.49.0)\n","sig":null,"attributes":[{"value":"/ Please use HTTP 2 without HTTP/1.1 Upgrade","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":129009,"byte_end":129055,"line_start":450,"line_end":450,"column_start":5,"column_end":51}},{"value":"/ (Added in CURL 7.49.0)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":129060,"byte_end":129086,"line_start":451,"line_end":451,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1227},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":129612,"byte_end":129614,"line_start":463,"line_end":463,"column_start":5,"column_end":7},"name":"V3","qualname":"::easy::handler::HttpVersion::V3","value":"HttpVersion::V3","parent":{"krate":0,"index":1208},"children":[],"decl_id":null,"docs":" Setting this value will make libcurl attempt to use HTTP/3 directly to\n server given in the URL. Note that this cannot gracefully downgrade to\n earlier HTTP version if the server doesn't support HTTP/3.","sig":null,"attributes":[{"value":"/ Setting this value will make libcurl attempt to use HTTP/3 directly to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":129171,"byte_end":129245,"line_start":454,"line_end":454,"column_start":5,"column_end":79}},{"value":"/ server given in the URL. Note that this cannot gracefully downgrade to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":129250,"byte_end":129324,"line_start":455,"line_end":455,"column_start":5,"column_end":79}},{"value":"/ earlier HTTP version if the server doesn't support HTTP/3.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":129329,"byte_end":129391,"line_start":456,"line_end":456,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":129396,"byte_end":129399,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ For more reliably upgrading to HTTP/3, set the preferred version to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":129404,"byte_end":129475,"line_start":458,"line_end":458,"column_start":5,"column_end":76}},{"value":"/ something lower and let the server announce its HTTP/3 support via","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":129480,"byte_end":129550,"line_start":459,"line_end":459,"column_start":5,"column_end":75}},{"value":"/ Alt-Svc:.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":129555,"byte_end":129568,"line_start":460,"line_end":460,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":129573,"byte_end":129576,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ (Added in CURL 7.66.0)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":129581,"byte_end":129607,"line_start":462,"line_end":462,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":1208},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":128362,"byte_end":128373,"line_start":431,"line_end":431,"column_start":10,"column_end":21},"name":"HttpVersion","qualname":"::easy::handler::HttpVersion","value":"HttpVersion::{Any, V10, V11, V2, V2TLS, V2PriorKnowledge, V3}","parent":null,"children":[{"krate":0,"index":1209},{"krate":0,"index":1212},{"krate":0,"index":1215},{"krate":0,"index":1218},{"krate":0,"index":1221},{"krate":0,"index":1224},{"krate":0,"index":1227}],"decl_id":null,"docs":" Possible values to pass to the `http_version` method.\n","sig":null,"attributes":[{"value":"/ Possible values to pass to the `http_version` method.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":128247,"byte_end":128304,"line_start":428,"line_end":428,"column_start":1,"column_end":58}},{"value":"non_exhaustive","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":128305,"byte_end":128322,"line_start":429,"line_end":429,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1236},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":129840,"byte_end":129847,"line_start":471,"line_end":471,"column_start":5,"column_end":12},"name":"Default","qualname":"::easy::handler::SslVersion::Default","value":"SslVersion::Default","parent":{"krate":0,"index":1235},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1239},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":129898,"byte_end":129903,"line_start":472,"line_end":472,"column_start":5,"column_end":10},"name":"Tlsv1","qualname":"::easy::handler::SslVersion::Tlsv1","value":"SslVersion::Tlsv1","parent":{"krate":0,"index":1235},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1242},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":129952,"byte_end":129957,"line_start":473,"line_end":473,"column_start":5,"column_end":10},"name":"Sslv2","qualname":"::easy::handler::SslVersion::Sslv2","value":"SslVersion::Sslv2","parent":{"krate":0,"index":1235},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1245},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":130006,"byte_end":130011,"line_start":474,"line_end":474,"column_start":5,"column_end":10},"name":"Sslv3","qualname":"::easy::handler::SslVersion::Sslv3","value":"SslVersion::Sslv3","parent":{"krate":0,"index":1235},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1248},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":130060,"byte_end":130066,"line_start":475,"line_end":475,"column_start":5,"column_end":11},"name":"Tlsv10","qualname":"::easy::handler::SslVersion::Tlsv10","value":"SslVersion::Tlsv10","parent":{"krate":0,"index":1235},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1251},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":130117,"byte_end":130123,"line_start":476,"line_end":476,"column_start":5,"column_end":11},"name":"Tlsv11","qualname":"::easy::handler::SslVersion::Tlsv11","value":"SslVersion::Tlsv11","parent":{"krate":0,"index":1235},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1254},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":130174,"byte_end":130180,"line_start":477,"line_end":477,"column_start":5,"column_end":11},"name":"Tlsv12","qualname":"::easy::handler::SslVersion::Tlsv12","value":"SslVersion::Tlsv12","parent":{"krate":0,"index":1235},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1257},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":130231,"byte_end":130237,"line_start":478,"line_end":478,"column_start":5,"column_end":11},"name":"Tlsv13","qualname":"::easy::handler::SslVersion::Tlsv13","value":"SslVersion::Tlsv13","parent":{"krate":0,"index":1235},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1235},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":129823,"byte_end":129833,"line_start":470,"line_end":470,"column_start":10,"column_end":20},"name":"SslVersion","qualname":"::easy::handler::SslVersion","value":"SslVersion::{Default, Tlsv1, Sslv2, Sslv3, Tlsv10, Tlsv11, Tlsv12, Tlsv13}","parent":null,"children":[{"krate":0,"index":1236},{"krate":0,"index":1239},{"krate":0,"index":1242},{"krate":0,"index":1245},{"krate":0,"index":1248},{"krate":0,"index":1251},{"krate":0,"index":1254},{"krate":0,"index":1257}],"decl_id":null,"docs":" Possible values to pass to the `ssl_version` and `ssl_min_max_version` method.\n","sig":null,"attributes":[{"value":"/ Possible values to pass to the `ssl_version` and `ssl_min_max_version` method.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":129660,"byte_end":129742,"line_start":466,"line_end":466,"column_start":1,"column_end":83}},{"value":"non_exhaustive","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":129743,"byte_end":129760,"line_start":467,"line_end":467,"column_start":1,"column_end":18}},{"value":"allow(missing_docs)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":129761,"byte_end":129783,"line_start":468,"line_end":468,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1266},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":130479,"byte_end":130481,"line_start":486,"line_end":486,"column_start":5,"column_end":7},"name":"Ok","qualname":"::easy::handler::SeekResult::Ok","value":"SeekResult::Ok","parent":{"krate":0,"index":1265},"children":[],"decl_id":null,"docs":" Indicates that the seek operation was a success\n","sig":null,"attributes":[{"value":"/ Indicates that the seek operation was a success","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":130423,"byte_end":130474,"line_start":485,"line_end":485,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1269},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":130632,"byte_end":130636,"line_start":490,"line_end":490,"column_start":5,"column_end":9},"name":"Fail","qualname":"::easy::handler::SeekResult::Fail","value":"SeekResult::Fail","parent":{"krate":0,"index":1265},"children":[],"decl_id":null,"docs":" Indicates that the seek operation failed, and the entire request should\n fail as a result.\n","sig":null,"attributes":[{"value":"/ Indicates that the seek operation failed, and the entire request should","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":130526,"byte_end":130601,"line_start":488,"line_end":488,"column_start":5,"column_end":80}},{"value":"/ fail as a result.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":130606,"byte_end":130627,"line_start":489,"line_end":489,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1272},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":130828,"byte_end":130836,"line_start":494,"line_end":494,"column_start":5,"column_end":13},"name":"CantSeek","qualname":"::easy::handler::SeekResult::CantSeek","value":"SeekResult::CantSeek","parent":{"krate":0,"index":1265},"children":[],"decl_id":null,"docs":" Indicates that although the seek failed libcurl should attempt to keep\n working if possible (for example \"seek\" through reading).\n","sig":null,"attributes":[{"value":"/ Indicates that although the seek failed libcurl should attempt to keep","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":130683,"byte_end":130757,"line_start":492,"line_end":492,"column_start":5,"column_end":79}},{"value":"/ working if possible (for example \"seek\" through reading).","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":130762,"byte_end":130823,"line_start":493,"line_end":493,"column_start":5,"column_end":66}}]},{"kind":"Enum","id":{"krate":0,"index":1265},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":130406,"byte_end":130416,"line_start":484,"line_end":484,"column_start":10,"column_end":20},"name":"SeekResult","qualname":"::easy::handler::SeekResult","value":"SeekResult::{Ok, Fail, CantSeek}","parent":null,"children":[{"krate":0,"index":1266},{"krate":0,"index":1269},{"krate":0,"index":1272}],"decl_id":null,"docs":" Possible return values from the `seek_function` callback.\n","sig":null,"attributes":[{"value":"/ Possible return values from the `seek_function` callback.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":130287,"byte_end":130348,"line_start":481,"line_end":481,"column_start":1,"column_end":62}},{"value":"non_exhaustive","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":130349,"byte_end":130366,"line_start":482,"line_end":482,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1281},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":131090,"byte_end":131094,"line_start":503,"line_end":503,"column_start":5,"column_end":9},"name":"Text","qualname":"::easy::handler::InfoType::Text","value":"InfoType::Text","parent":{"krate":0,"index":1280},"children":[],"decl_id":null,"docs":" The data is informational text.\n","sig":null,"attributes":[{"value":"/ The data is informational text.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":131050,"byte_end":131085,"line_start":502,"line_end":502,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1283},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":131174,"byte_end":131182,"line_start":506,"line_end":506,"column_start":5,"column_end":13},"name":"HeaderIn","qualname":"::easy::handler::InfoType::HeaderIn","value":"InfoType::HeaderIn","parent":{"krate":0,"index":1280},"children":[],"decl_id":null,"docs":" The data is header (or header-like) data received from the peer.\n","sig":null,"attributes":[{"value":"/ The data is header (or header-like) data received from the peer.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":131101,"byte_end":131169,"line_start":505,"line_end":505,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1285},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":131256,"byte_end":131265,"line_start":509,"line_end":509,"column_start":5,"column_end":14},"name":"HeaderOut","qualname":"::easy::handler::InfoType::HeaderOut","value":"InfoType::HeaderOut","parent":{"krate":0,"index":1280},"children":[],"decl_id":null,"docs":" The data is header (or header-like) data sent to the peer.\n","sig":null,"attributes":[{"value":"/ The data is header (or header-like) data sent to the peer.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":131189,"byte_end":131251,"line_start":508,"line_end":508,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1287},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":131330,"byte_end":131336,"line_start":512,"line_end":512,"column_start":5,"column_end":11},"name":"DataIn","qualname":"::easy::handler::InfoType::DataIn","value":"InfoType::DataIn","parent":{"krate":0,"index":1280},"children":[],"decl_id":null,"docs":" The data is protocol data received from the peer.\n","sig":null,"attributes":[{"value":"/ The data is protocol data received from the peer.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":131272,"byte_end":131325,"line_start":511,"line_end":511,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1289},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":131395,"byte_end":131402,"line_start":515,"line_end":515,"column_start":5,"column_end":12},"name":"DataOut","qualname":"::easy::handler::InfoType::DataOut","value":"InfoType::DataOut","parent":{"krate":0,"index":1280},"children":[],"decl_id":null,"docs":" The data is protocol data sent to the peer.\n","sig":null,"attributes":[{"value":"/ The data is protocol data sent to the peer.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":131343,"byte_end":131390,"line_start":514,"line_end":514,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1291},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":131475,"byte_end":131484,"line_start":518,"line_end":518,"column_start":5,"column_end":14},"name":"SslDataIn","qualname":"::easy::handler::InfoType::SslDataIn","value":"InfoType::SslDataIn","parent":{"krate":0,"index":1280},"children":[],"decl_id":null,"docs":" The data is SSL/TLS (binary) data received from the peer.\n","sig":null,"attributes":[{"value":"/ The data is SSL/TLS (binary) data received from the peer.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":131409,"byte_end":131470,"line_start":517,"line_end":517,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1293},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":131551,"byte_end":131561,"line_start":521,"line_end":521,"column_start":5,"column_end":15},"name":"SslDataOut","qualname":"::easy::handler::InfoType::SslDataOut","value":"InfoType::SslDataOut","parent":{"krate":0,"index":1280},"children":[],"decl_id":null,"docs":" The data is SSL/TLS (binary) data sent to the peer.\n","sig":null,"attributes":[{"value":"/ The data is SSL/TLS (binary) data sent to the peer.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":131491,"byte_end":131546,"line_start":520,"line_end":520,"column_start":5,"column_end":60}}]},{"kind":"Enum","id":{"krate":0,"index":1280},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":131035,"byte_end":131043,"line_start":501,"line_end":501,"column_start":10,"column_end":18},"name":"InfoType","qualname":"::easy::handler::InfoType","value":"InfoType::{Text, HeaderIn, HeaderOut, DataIn, DataOut, SslDataIn, SslDataOut}","parent":null,"children":[{"krate":0,"index":1281},{"krate":0,"index":1283},{"krate":0,"index":1285},{"krate":0,"index":1287},{"krate":0,"index":1289},{"krate":0,"index":1291},{"krate":0,"index":1293}],"decl_id":null,"docs":" Possible data chunks that can be witnessed as part of the `debug_function`\n callback.\n","sig":null,"attributes":[{"value":"/ Possible data chunks that can be witnessed as part of the `debug_function`","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":130885,"byte_end":130963,"line_start":497,"line_end":497,"column_start":1,"column_end":79}},{"value":"/ callback.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":130964,"byte_end":130977,"line_start":498,"line_end":498,"column_start":1,"column_end":14}},{"value":"non_exhaustive","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":130978,"byte_end":130995,"line_start":499,"line_end":499,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1301},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":131775,"byte_end":131780,"line_start":529,"line_end":529,"column_start":5,"column_end":10},"name":"Abort","qualname":"::easy::handler::ReadError::Abort","value":"ReadError::Abort","parent":{"krate":0,"index":1300},"children":[],"decl_id":null,"docs":" Indicates that the connection should be aborted immediately\n","sig":null,"attributes":[{"value":"/ Indicates that the connection should be aborted immediately","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":131707,"byte_end":131770,"line_start":528,"line_end":528,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1303},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":131862,"byte_end":131867,"line_start":532,"line_end":532,"column_start":5,"column_end":10},"name":"Pause","qualname":"::easy::handler::ReadError::Pause","value":"ReadError::Pause","parent":{"krate":0,"index":1300},"children":[],"decl_id":null,"docs":" Indicates that reading should be paused until `unpause` is called.\n","sig":null,"attributes":[{"value":"/ Indicates that reading should be paused until `unpause` is called.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":131787,"byte_end":131857,"line_start":531,"line_end":531,"column_start":5,"column_end":75}}]},{"kind":"Enum","id":{"krate":0,"index":1300},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":131691,"byte_end":131700,"line_start":527,"line_end":527,"column_start":10,"column_end":19},"name":"ReadError","qualname":"::easy::handler::ReadError","value":"ReadError::{Abort, Pause}","parent":null,"children":[{"krate":0,"index":1301},{"krate":0,"index":1303}],"decl_id":null,"docs":" Possible error codes that can be returned from the `read_function` callback.\n","sig":null,"attributes":[{"value":"/ Possible error codes that can be returned from the `read_function` callback.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":131566,"byte_end":131646,"line_start":524,"line_end":524,"column_start":1,"column_end":81}},{"value":"non_exhaustive","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":131647,"byte_end":131664,"line_start":525,"line_end":525,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1308},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":132090,"byte_end":132095,"line_start":540,"line_end":540,"column_start":5,"column_end":10},"name":"Pause","qualname":"::easy::handler::WriteError::Pause","value":"WriteError::Pause","parent":{"krate":0,"index":1307},"children":[],"decl_id":null,"docs":" Indicates that reading should be paused until `unpause` is called.\n","sig":null,"attributes":[{"value":"/ Indicates that reading should be paused until `unpause` is called.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":132015,"byte_end":132085,"line_start":539,"line_end":539,"column_start":5,"column_end":75}}]},{"kind":"Enum","id":{"krate":0,"index":1307},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":131998,"byte_end":132008,"line_start":538,"line_end":538,"column_start":10,"column_end":20},"name":"WriteError","qualname":"::easy::handler::WriteError","value":"WriteError::{Pause}","parent":null,"children":[{"krate":0,"index":1308}],"decl_id":null,"docs":" Possible error codes that can be returned from the `write_function` callback.\n","sig":null,"attributes":[{"value":"/ Possible error codes that can be returned from the `write_function` callback.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":131872,"byte_end":131953,"line_start":535,"line_end":535,"column_start":1,"column_end":82}},{"value":"non_exhaustive","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":131954,"byte_end":131971,"line_start":536,"line_end":536,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1313},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":132284,"byte_end":132291,"line_start":549,"line_end":549,"column_start":5,"column_end":12},"name":"Ignored","qualname":"::easy::handler::NetRc::Ignored","value":"NetRc::Ignored","parent":{"krate":0,"index":1312},"children":[],"decl_id":null,"docs":" Ignoring `.netrc` file and use information from url","sig":null,"attributes":[{"value":"/ Ignoring `.netrc` file and use information from url","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":132185,"byte_end":132240,"line_start":546,"line_end":546,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":132245,"byte_end":132248,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ This option is default","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":132253,"byte_end":132279,"line_start":548,"line_end":548,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1316},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":132678,"byte_end":132686,"line_start":555,"line_end":555,"column_start":5,"column_end":13},"name":"Optional","qualname":"::easy::handler::NetRc::Optional","value":"NetRc::Optional","parent":{"krate":0,"index":1312},"children":[],"decl_id":null,"docs":" The  use of your `~/.netrc` file is optional, and information in the URL is to be\n preferred. The file will be scanned for the host and user name (to find the password only)\n or for the host only, to find the first user name and password after that machine, which\n ever information is not specified in the URL.\n","sig":null,"attributes":[{"value":"/ The  use of your `~/.netrc` file is optional, and information in the URL is to be","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":132338,"byte_end":132423,"line_start":551,"line_end":551,"column_start":5,"column_end":90}},{"value":"/ preferred. The file will be scanned for the host and user name (to find the password only)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":132428,"byte_end":132522,"line_start":552,"line_end":552,"column_start":5,"column_end":99}},{"value":"/ or for the host only, to find the first user name and password after that machine, which","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":132527,"byte_end":132619,"line_start":553,"line_end":553,"column_start":5,"column_end":97}},{"value":"/ ever information is not specified in the URL.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":132624,"byte_end":132673,"line_start":554,"line_end":554,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1319},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":132893,"byte_end":132901,"line_start":559,"line_end":559,"column_start":5,"column_end":13},"name":"Required","qualname":"::easy::handler::NetRc::Required","value":"NetRc::Required","parent":{"krate":0,"index":1312},"children":[],"decl_id":null,"docs":" This value tells the library that use of the file is required, to ignore the information in\n the URL, and to search the file for the host only.\n","sig":null,"attributes":[{"value":"/ This value tells the library that use of the file is required, to ignore the information in","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":132734,"byte_end":132829,"line_start":557,"line_end":557,"column_start":5,"column_end":100}},{"value":"/ the URL, and to search the file for the host only.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":132834,"byte_end":132888,"line_start":558,"line_end":558,"column_start":5,"column_end":59}}]},{"kind":"Enum","id":{"krate":0,"index":1312},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":132173,"byte_end":132178,"line_start":545,"line_end":545,"column_start":10,"column_end":15},"name":"NetRc","qualname":"::easy::handler::NetRc","value":"NetRc::{Ignored, Optional, Required}","parent":null,"children":[{"krate":0,"index":1313},{"krate":0,"index":1316},{"krate":0,"index":1319}],"decl_id":null,"docs":" Options for `.netrc` parsing.\n","sig":null,"attributes":[{"value":"/ Options for `.netrc` parsing.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":132100,"byte_end":132133,"line_start":543,"line_end":543,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1327},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":133085,"byte_end":133089,"line_start":565,"line_end":565,"column_start":12,"column_end":16},"name":"Auth","qualname":"::easy::handler::Auth","value":"Auth {  }","parent":null,"children":[{"krate":0,"index":1328}],"decl_id":null,"docs":" Structure which stores possible authentication methods to get passed to\n `http_auth` and `proxy_auth`.\n","sig":null,"attributes":[{"value":"/ Structure which stores possible authentication methods to get passed to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":132947,"byte_end":133022,"line_start":562,"line_end":562,"column_start":1,"column_end":76}},{"value":"/ `http_auth` and `proxy_auth`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":133023,"byte_end":133056,"line_start":563,"line_end":563,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1331},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":133215,"byte_end":133221,"line_start":571,"line_end":571,"column_start":12,"column_end":18},"name":"SslOpt","qualname":"::easy::handler::SslOpt","value":"SslOpt {  }","parent":null,"children":[{"krate":0,"index":1332}],"decl_id":null,"docs":" Structure which stores possible ssl options to pass to `ssl_options`.\n","sig":null,"attributes":[{"value":"/ Structure which stores possible ssl options to pass to `ssl_options`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":133113,"byte_end":133186,"line_start":569,"line_end":569,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":133656,"byte_end":133659,"line_start":583,"line_end":583,"column_start":12,"column_end":15},"name":"new","qualname":"<Easy2<H>>::new","value":"fn (handler: H) -> Easy2<H>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new \"easy\" handle which is the core of almost all operations\n in libcurl.","sig":null,"attributes":[{"value":"/ Creates a new \"easy\" handle which is the core of almost all operations","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":133277,"byte_end":133351,"line_start":576,"line_end":576,"column_start":5,"column_end":79}},{"value":"/ in libcurl.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":133356,"byte_end":133371,"line_start":577,"line_end":577,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":133376,"byte_end":133379,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ To use a handle, applications typically configure a number of options","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":133384,"byte_end":133457,"line_start":579,"line_end":579,"column_start":5,"column_end":78}},{"value":"/ followed by a call to `perform`. Options are preserved across calls to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":133462,"byte_end":133536,"line_start":580,"line_end":580,"column_start":5,"column_end":79}},{"value":"/ `perform` and need to be reset manually (or via the `reset` method) if","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":133541,"byte_end":133615,"line_start":581,"line_end":581,"column_start":5,"column_end":79}},{"value":"/ this is not desired.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":133620,"byte_end":133644,"line_start":582,"line_end":582,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":134557,"byte_end":134562,"line_start":609,"line_end":609,"column_start":12,"column_end":17},"name":"reset","qualname":"<Easy2<H>>::reset","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Re-initializes this handle to the default values.","sig":null,"attributes":[{"value":"/ Re-initializes this handle to the default values.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":134289,"byte_end":134342,"line_start":604,"line_end":604,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":134347,"byte_end":134350,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ This puts the handle to the same state as it was in when it was just","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":134355,"byte_end":134427,"line_start":606,"line_end":606,"column_start":5,"column_end":77}},{"value":"/ created. This does, however, keep live connections, the session id","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":134432,"byte_end":134502,"line_start":607,"line_end":607,"column_start":5,"column_end":75}},{"value":"/ cache, the dns cache, and cookies.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":134507,"byte_end":134545,"line_start":608,"line_end":608,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":621},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":138353,"byte_end":138360,"line_start":701,"line_end":701,"column_start":12,"column_end":19},"name":"verbose","qualname":"<Easy2<H>>::verbose","value":"fn (&mut self, verbose: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Configures this handle to have verbose output to help debug protocol\n information.","sig":null,"attributes":[{"value":"/ Configures this handle to have verbose output to help debug protocol","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":137982,"byte_end":138054,"line_start":693,"line_end":693,"column_start":5,"column_end":77}},{"value":"/ information.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":138059,"byte_end":138075,"line_start":694,"line_end":694,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":138080,"byte_end":138083,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ By default output goes to stderr, but the `stderr` function on this type","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":138088,"byte_end":138164,"line_start":696,"line_end":696,"column_start":5,"column_end":81}},{"value":"/ can configure that. You can also use the `debug_function` method to get","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":138169,"byte_end":138244,"line_start":697,"line_end":697,"column_start":5,"column_end":80}},{"value":"/ all protocol data sent and received.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":138249,"byte_end":138289,"line_start":698,"line_end":698,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":138294,"byte_end":138297,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ By default, this option is `false`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":138302,"byte_end":138341,"line_start":700,"line_end":700,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":139043,"byte_end":139054,"line_start":717,"line_end":717,"column_start":12,"column_end":23},"name":"show_header","qualname":"<Easy2<H>>::show_header","value":"fn (&mut self, show: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether header information is streamed to the output body of\n this request.","sig":null,"attributes":[{"value":"/ Indicates whether header information is streamed to the output body of","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":138492,"byte_end":138566,"line_start":705,"line_end":705,"column_start":5,"column_end":79}},{"value":"/ this request.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":138571,"byte_end":138588,"line_start":706,"line_end":706,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":138593,"byte_end":138596,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ This option is only relevant for protocols which have header metadata","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":138601,"byte_end":138674,"line_start":708,"line_end":708,"column_start":5,"column_end":78}},{"value":"/ (like http or ftp). It's not generally possible to extract headers","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":138679,"byte_end":138749,"line_start":709,"line_end":709,"column_start":5,"column_end":75}},{"value":"/ from the body if using this method, that use case should be intended for","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":138754,"byte_end":138830,"line_start":710,"line_end":710,"column_start":5,"column_end":81}},{"value":"/ the `header_function` method.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":138835,"byte_end":138868,"line_start":711,"line_end":711,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":138873,"byte_end":138876,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ To set HTTP headers, use the `http_header` method.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":138881,"byte_end":138935,"line_start":713,"line_end":713,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":138940,"byte_end":138943,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ By default, this option is `false` and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":138948,"byte_end":139005,"line_start":715,"line_end":715,"column_start":5,"column_end":62}},{"value":"/ `CURLOPT_HEADER`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":139010,"byte_end":139031,"line_start":716,"line_end":716,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":623},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":139468,"byte_end":139476,"line_start":728,"line_end":728,"column_start":12,"column_end":20},"name":"progress","qualname":"<Easy2<H>>::progress","value":"fn (&mut self, progress: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether a progress meter will be shown for requests done with\n this handle.","sig":null,"attributes":[{"value":"/ Indicates whether a progress meter will be shown for requests done with","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":139179,"byte_end":139254,"line_start":721,"line_end":721,"column_start":5,"column_end":80}},{"value":"/ this handle.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":139259,"byte_end":139275,"line_start":722,"line_end":722,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":139280,"byte_end":139283,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ This will also prevent the `progress_function` from being called.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":139288,"byte_end":139357,"line_start":724,"line_end":724,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":139362,"byte_end":139365,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ By default this option is `false` and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":139370,"byte_end":139426,"line_start":726,"line_end":726,"column_start":5,"column_end":61}},{"value":"/ `CURLOPT_NOPROGRESS`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":139431,"byte_end":139456,"line_start":727,"line_end":727,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":140360,"byte_end":140366,"line_start":745,"line_end":745,"column_start":12,"column_end":18},"name":"signal","qualname":"<Easy2<H>>::signal","value":"fn (&mut self, signal: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Inform libcurl whether or not it should install signal handlers or\n attempt to use signals to perform library functions.","sig":null,"attributes":[{"value":"/ Inform libcurl whether or not it should install signal handlers or","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":139616,"byte_end":139686,"line_start":732,"line_end":732,"column_start":5,"column_end":75}},{"value":"/ attempt to use signals to perform library functions.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":139691,"byte_end":139747,"line_start":733,"line_end":733,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":139752,"byte_end":139755,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ If this option is disabled then timeouts during name resolution will not","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":139760,"byte_end":139836,"line_start":735,"line_end":735,"column_start":5,"column_end":81}},{"value":"/ work unless libcurl is built against c-ares. Note that enabling this","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":139841,"byte_end":139913,"line_start":736,"line_end":736,"column_start":5,"column_end":77}},{"value":"/ option, however, may not cause libcurl to work with multiple threads.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":139918,"byte_end":139991,"line_start":737,"line_end":737,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":139996,"byte_end":139999,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ By default this option is `false` and corresponds to `CURLOPT_NOSIGNAL`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":140004,"byte_end":140080,"line_start":739,"line_end":739,"column_start":5,"column_end":81}},{"value":"/ Note that this default is **different than libcurl** as it is intended","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":140085,"byte_end":140159,"line_start":740,"line_end":740,"column_start":5,"column_end":79}},{"value":"/ that this library is threadsafe by default. See the [libcurl docs] for","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":140164,"byte_end":140238,"line_start":741,"line_end":741,"column_start":5,"column_end":79}},{"value":"/ some more information.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":140243,"byte_end":140269,"line_start":742,"line_end":742,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":140274,"byte_end":140277,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ [libcurl docs]: https://curl.haxx.se/libcurl/c/threadsafe.html","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":140282,"byte_end":140348,"line_start":744,"line_end":744,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":625},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":140790,"byte_end":140804,"line_start":756,"line_end":756,"column_start":12,"column_end":26},"name":"wildcard_match","qualname":"<Easy2<H>>::wildcard_match","value":"fn (&mut self, m: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether multiple files will be transferred based on the file\n name pattern.","sig":null,"attributes":[{"value":"/ Indicates whether multiple files will be transferred based on the file","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":140500,"byte_end":140574,"line_start":749,"line_end":749,"column_start":5,"column_end":79}},{"value":"/ name pattern.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":140579,"byte_end":140596,"line_start":750,"line_end":750,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":140601,"byte_end":140604,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ The last part of a filename uses fnmatch-like pattern matching.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":140609,"byte_end":140676,"line_start":752,"line_end":752,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":140681,"byte_end":140684,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ By default this option is `false` and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":140689,"byte_end":140745,"line_start":754,"line_end":754,"column_start":5,"column_end":61}},{"value":"/ `CURLOPT_WILDCARDMATCH`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":140750,"byte_end":140778,"line_start":755,"line_end":755,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":141348,"byte_end":141359,"line_start":771,"line_end":771,"column_start":12,"column_end":23},"name":"unix_socket","qualname":"<Easy2<H>>::unix_socket","value":"fn (&mut self, unix_domain_socket: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Provides the Unix domain socket which this handle will work with.","sig":null,"attributes":[{"value":"/ Provides the Unix domain socket which this handle will work with.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":140930,"byte_end":140999,"line_start":760,"line_end":760,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":141004,"byte_end":141007,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ The string provided must be a path to a Unix domain socket encoded with","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":141012,"byte_end":141087,"line_start":762,"line_end":762,"column_start":5,"column_end":80}},{"value":"/ the format:","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":141092,"byte_end":141107,"line_start":763,"line_end":763,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":141112,"byte_end":141115,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":141120,"byte_end":141131,"line_start":765,"line_end":765,"column_start":5,"column_end":16}},{"value":"/ /path/file.sock","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":141136,"byte_end":141155,"line_start":766,"line_end":766,"column_start":5,"column_end":24}},{"value":"/ ```","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":141160,"byte_end":141167,"line_start":767,"line_end":767,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":141172,"byte_end":141175,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ By default this option is not set and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":141180,"byte_end":141236,"line_start":769,"line_end":769,"column_start":5,"column_end":61}},{"value":"/ [`CURLOPT_UNIX_SOCKET_PATH`](https://curl.haxx.se/libcurl/c/CURLOPT_UNIX_SOCKET_PATH.html).","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":141241,"byte_end":141336,"line_start":770,"line_end":770,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":142168,"byte_end":142184,"line_start":791,"line_end":791,"column_start":12,"column_end":28},"name":"unix_socket_path","qualname":"<Easy2<H>>::unix_socket_path","value":"fn <P> (&mut self, path: Option<P>) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Provides the Unix domain socket which this handle will work with.","sig":null,"attributes":[{"value":"/ Provides the Unix domain socket which this handle will work with.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":141556,"byte_end":141625,"line_start":776,"line_end":776,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":141630,"byte_end":141633,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ The string provided must be a path to a Unix domain socket encoded with","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":141638,"byte_end":141713,"line_start":778,"line_end":778,"column_start":5,"column_end":80}},{"value":"/ the format:","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":141718,"byte_end":141733,"line_start":779,"line_end":779,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":141738,"byte_end":141741,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":141746,"byte_end":141757,"line_start":781,"line_end":781,"column_start":5,"column_end":16}},{"value":"/ /path/file.sock","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":141762,"byte_end":141781,"line_start":782,"line_end":782,"column_start":5,"column_end":24}},{"value":"/ ```","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":141786,"byte_end":141793,"line_start":783,"line_end":783,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":141798,"byte_end":141801,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/ This function is an alternative to [`Easy2::unix_socket`] that supports","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":141806,"byte_end":141881,"line_start":785,"line_end":785,"column_start":5,"column_end":80}},{"value":"/ non-UTF-8 paths and also supports disabling Unix sockets by setting the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":141886,"byte_end":141961,"line_start":786,"line_end":786,"column_start":5,"column_end":80}},{"value":"/ option to `None`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":141966,"byte_end":141987,"line_start":787,"line_end":787,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":141992,"byte_end":141995,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ By default this option is not set and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":142000,"byte_end":142056,"line_start":789,"line_end":789,"column_start":5,"column_end":61}},{"value":"/ [`CURLOPT_UNIX_SOCKET_PATH`](https://curl.haxx.se/libcurl/c/CURLOPT_UNIX_SOCKET_PATH.html).","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":142061,"byte_end":142156,"line_start":790,"line_end":790,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":142659,"byte_end":142666,"line_start":803,"line_end":803,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Easy2<H>>::get_ref","value":"fn (&self) -> &H","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying handler for events.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying handler for events.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":142585,"byte_end":142647,"line_start":802,"line_end":802,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":142795,"byte_end":142802,"line_start":808,"line_end":808,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Easy2<H>>::get_mut","value":"fn (&mut self) -> &mut H","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying handler for events.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying handler for events.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":142721,"byte_end":142783,"line_start":807,"line_end":807,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":143286,"byte_end":143299,"line_start":823,"line_end":823,"column_start":12,"column_end":25},"name":"fail_on_error","qualname":"<Easy2<H>>::fail_on_error","value":"fn (&mut self, fail: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether this library will fail on HTTP response codes >= 400.","sig":null,"attributes":[{"value":"/ Indicates whether this library will fail on HTTP response codes >= 400.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":143010,"byte_end":143085,"line_start":817,"line_end":817,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":143090,"byte_end":143093,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ This method is not fail-safe especially when authentication is involved.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":143098,"byte_end":143174,"line_start":819,"line_end":819,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":143179,"byte_end":143182,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ By default this option is `false` and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":143187,"byte_end":143243,"line_start":821,"line_end":821,"column_start":5,"column_end":61}},{"value":"/ `CURLOPT_FAILONERROR`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":143248,"byte_end":143274,"line_start":822,"line_end":822,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":143997,"byte_end":144000,"line_start":843,"line_end":843,"column_start":12,"column_end":15},"name":"url","qualname":"<Easy2<H>>::url","value":"fn (&mut self, url: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Provides the URL which this handle will work with.","sig":null,"attributes":[{"value":"/ Provides the URL which this handle will work with.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":143534,"byte_end":143588,"line_start":830,"line_end":830,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":143593,"byte_end":143596,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ The string provided must be URL-encoded with the format:","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":143601,"byte_end":143661,"line_start":832,"line_end":832,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":143666,"byte_end":143669,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":143674,"byte_end":143685,"line_start":834,"line_end":834,"column_start":5,"column_end":16}},{"value":"/ scheme://host:port/path","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":143690,"byte_end":143717,"line_start":835,"line_end":835,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":143722,"byte_end":143729,"line_start":836,"line_end":836,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":143734,"byte_end":143737,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ The syntax is not validated as part of this function and that is","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":143742,"byte_end":143810,"line_start":838,"line_end":838,"column_start":5,"column_end":73}},{"value":"/ deferred until later.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":143815,"byte_end":143840,"line_start":839,"line_end":839,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":143845,"byte_end":143848,"line_start":840,"line_end":840,"column_start":5,"column_end":8}},{"value":"/ By default this option is not set and `perform` will not work until it","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":143853,"byte_end":143927,"line_start":841,"line_end":841,"column_start":5,"column_end":79}},{"value":"/ is set. This option corresponds to `CURLOPT_URL`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":143932,"byte_end":143985,"line_start":842,"line_end":842,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":144285,"byte_end":144289,"line_start":850,"line_end":850,"column_start":12,"column_end":16},"name":"port","qualname":"<Easy2<H>>::port","value":"fn (&mut self, port: u16) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Configures the port number to connect to, instead of the one specified\n in the URL or the default of the protocol.\n","sig":null,"attributes":[{"value":"/ Configures the port number to connect to, instead of the one specified","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":144148,"byte_end":144222,"line_start":848,"line_end":848,"column_start":5,"column_end":79}},{"value":"/ in the URL or the default of the protocol.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":144227,"byte_end":144273,"line_start":849,"line_end":849,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":145023,"byte_end":145033,"line_start":866,"line_end":866,"column_start":12,"column_end":22},"name":"connect_to","qualname":"<Easy2<H>>::connect_to","value":"fn (&mut self, list: List) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Connect to a specific host and port.","sig":null,"attributes":[{"value":"/ Connect to a specific host and port.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":144411,"byte_end":144451,"line_start":854,"line_end":854,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":144456,"byte_end":144459,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ Each single string should be written using the format","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":144464,"byte_end":144521,"line_start":856,"line_end":856,"column_start":5,"column_end":62}},{"value":"/ `HOST:PORT:CONNECT-TO-HOST:CONNECT-TO-PORT` where `HOST` is the host of","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":144526,"byte_end":144601,"line_start":857,"line_end":857,"column_start":5,"column_end":80}},{"value":"/ the request, `PORT` is the port of the request, `CONNECT-TO-HOST` is the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":144606,"byte_end":144682,"line_start":858,"line_end":858,"column_start":5,"column_end":81}},{"value":"/ host name to connect to, and `CONNECT-TO-PORT` is the port to connect","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":144687,"byte_end":144760,"line_start":859,"line_end":859,"column_start":5,"column_end":78}},{"value":"/ to.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":144765,"byte_end":144772,"line_start":860,"line_end":860,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":144777,"byte_end":144780,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ The first string that matches the request's host and port is used.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":144785,"byte_end":144855,"line_start":862,"line_end":862,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":144860,"byte_end":144863,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ By default, this option is empty and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":144868,"byte_end":144923,"line_start":864,"line_end":864,"column_start":5,"column_end":60}},{"value":"/ [`CURLOPT_CONNECT_TO`](https://curl.haxx.se/libcurl/c/CURLOPT_CONNECT_TO.html).","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":144928,"byte_end":145011,"line_start":865,"line_end":865,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":145657,"byte_end":145662,"line_start":882,"line_end":882,"column_start":12,"column_end":17},"name":"proxy","qualname":"<Easy2<H>>::proxy","value":"fn (&mut self, url: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Provide the URL of a proxy to use.","sig":null,"attributes":[{"value":"/ Provide the URL of a proxy to use.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":145521,"byte_end":145559,"line_start":879,"line_end":879,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":145564,"byte_end":145567,"line_start":880,"line_end":880,"column_start":5,"column_end":8}},{"value":"/ By default this option is not set and corresponds to `CURLOPT_PROXY`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":145572,"byte_end":145645,"line_start":881,"line_end":881,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":146022,"byte_end":146032,"line_start":891,"line_end":891,"column_start":12,"column_end":22},"name":"proxy_port","qualname":"<Easy2<H>>::proxy_port","value":"fn (&mut self, port: u16) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Provide port number the proxy is listening on.","sig":null,"attributes":[{"value":"/ Provide port number the proxy is listening on.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":145812,"byte_end":145862,"line_start":887,"line_end":887,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":145867,"byte_end":145870,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ By default this option is not set (the default port for the proxy","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":145875,"byte_end":145944,"line_start":889,"line_end":889,"column_start":5,"column_end":74}},{"value":"/ protocol is used) and corresponds to `CURLOPT_PROXYPORT`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":145949,"byte_end":146010,"line_start":890,"line_end":890,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":637},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":146327,"byte_end":146339,"line_start":899,"line_end":899,"column_start":12,"column_end":24},"name":"proxy_cainfo","qualname":"<Easy2<H>>::proxy_cainfo","value":"fn (&mut self, cainfo: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set CA certificate to verify peer against for proxy.","sig":null,"attributes":[{"value":"/ Set CA certificate to verify peer against for proxy.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":146159,"byte_end":146215,"line_start":895,"line_end":895,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":146220,"byte_end":146223,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ By default this value is not set and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":146228,"byte_end":146283,"line_start":897,"line_end":897,"column_start":5,"column_end":60}},{"value":"/ `CURLOPT_PROXY_CAINFO`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":146288,"byte_end":146315,"line_start":898,"line_end":898,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":638},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":146929,"byte_end":146941,"line_start":913,"line_end":913,"column_start":12,"column_end":24},"name":"proxy_capath","qualname":"<Easy2<H>>::proxy_capath","value":"fn <P> (&mut self, path: P) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Specify a directory holding CA certificates for proxy.","sig":null,"attributes":[{"value":"/ Specify a directory holding CA certificates for proxy.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":146508,"byte_end":146566,"line_start":904,"line_end":904,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":146571,"byte_end":146574,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ The specified directory should hold multiple CA certificates to verify","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":146579,"byte_end":146653,"line_start":906,"line_end":906,"column_start":5,"column_end":79}},{"value":"/ the HTTPS proxy with. If libcurl is built against OpenSSL, the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":146658,"byte_end":146724,"line_start":907,"line_end":907,"column_start":5,"column_end":71}},{"value":"/ certificate directory must be prepared using the OpenSSL `c_rehash`","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":146729,"byte_end":146800,"line_start":908,"line_end":908,"column_start":5,"column_end":76}},{"value":"/ utility.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":146805,"byte_end":146817,"line_start":909,"line_end":909,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":146822,"byte_end":146825,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ By default this value is not set and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":146830,"byte_end":146885,"line_start":911,"line_end":911,"column_start":5,"column_end":60}},{"value":"/ `CURLOPT_PROXY_CAPATH`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":146890,"byte_end":146917,"line_start":912,"line_end":912,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":147234,"byte_end":147247,"line_start":921,"line_end":921,"column_start":12,"column_end":25},"name":"proxy_sslcert","qualname":"<Easy2<H>>::proxy_sslcert","value":"fn (&mut self, sslcert: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set client certificate for proxy.","sig":null,"attributes":[{"value":"/ Set client certificate for proxy.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":147084,"byte_end":147121,"line_start":917,"line_end":917,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":147126,"byte_end":147129,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/ By default this value is not set and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":147134,"byte_end":147189,"line_start":919,"line_end":919,"column_start":5,"column_end":60}},{"value":"/ `CURLOPT_PROXY_SSLCERT`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":147194,"byte_end":147222,"line_start":920,"line_end":920,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":147569,"byte_end":147581,"line_start":930,"line_end":930,"column_start":12,"column_end":24},"name":"proxy_sslkey","qualname":"<Easy2<H>>::proxy_sslkey","value":"fn (&mut self, sslkey: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set private key for HTTPS proxy.","sig":null,"attributes":[{"value":"/ Set private key for HTTPS proxy.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":147421,"byte_end":147457,"line_start":926,"line_end":926,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":147462,"byte_end":147465,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ By default this value is not set and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":147470,"byte_end":147525,"line_start":928,"line_end":928,"column_start":5,"column_end":60}},{"value":"/ `CURLOPT_PROXY_SSLKEY`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":147530,"byte_end":147557,"line_start":929,"line_end":929,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":147913,"byte_end":147923,"line_start":939,"line_end":939,"column_start":12,"column_end":22},"name":"proxy_type","qualname":"<Easy2<H>>::proxy_type","value":"fn (&mut self, kind: ProxyType) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Indicates the type of proxy being used.","sig":null,"attributes":[{"value":"/ Indicates the type of proxy being used.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":147750,"byte_end":147793,"line_start":935,"line_end":935,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":147798,"byte_end":147801,"line_start":936,"line_end":936,"column_start":5,"column_end":8}},{"value":"/ By default this option is `ProxyType::Http` and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":147806,"byte_end":147872,"line_start":937,"line_end":937,"column_start":5,"column_end":71}},{"value":"/ `CURLOPT_PROXYTYPE`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":147877,"byte_end":147901,"line_start":938,"line_end":938,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":643},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":148428,"byte_end":148435,"line_start":951,"line_end":951,"column_start":12,"column_end":19},"name":"noproxy","qualname":"<Easy2<H>>::noproxy","value":"fn (&mut self, skip: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Provide a list of hosts that should not be proxied to.","sig":null,"attributes":[{"value":"/ Provide a list of hosts that should not be proxied to.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":148056,"byte_end":148114,"line_start":943,"line_end":943,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":148119,"byte_end":148122,"line_start":944,"line_end":944,"column_start":5,"column_end":8}},{"value":"/ This string is a comma-separated list of hosts which should not use the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":148127,"byte_end":148202,"line_start":945,"line_end":945,"column_start":5,"column_end":80}},{"value":"/ proxy specified for connections. A single `*` character is also accepted","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":148207,"byte_end":148283,"line_start":946,"line_end":946,"column_start":5,"column_end":81}},{"value":"/ as a wildcard for all hosts.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":148288,"byte_end":148320,"line_start":947,"line_end":947,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":148325,"byte_end":148328,"line_start":948,"line_end":948,"column_start":5,"column_end":8}},{"value":"/ By default this option is not set and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":148333,"byte_end":148389,"line_start":949,"line_end":949,"column_start":5,"column_end":61}},{"value":"/ `CURLOPT_NOPROXY`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":148394,"byte_end":148416,"line_start":950,"line_end":950,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":644},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":148893,"byte_end":148910,"line_start":963,"line_end":963,"column_start":12,"column_end":29},"name":"http_proxy_tunnel","qualname":"<Easy2<H>>::http_proxy_tunnel","value":"fn (&mut self, tunnel: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Inform curl whether it should tunnel all operations through the proxy.","sig":null,"attributes":[{"value":"/ Inform curl whether it should tunnel all operations through the proxy.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":148591,"byte_end":148665,"line_start":956,"line_end":956,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":148670,"byte_end":148673,"line_start":957,"line_end":957,"column_start":5,"column_end":8}},{"value":"/ This essentially means that a `CONNECT` is sent to the proxy for all","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":148678,"byte_end":148750,"line_start":958,"line_end":958,"column_start":5,"column_end":77}},{"value":"/ outbound requests.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":148755,"byte_end":148777,"line_start":959,"line_end":959,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":148782,"byte_end":148785,"line_start":960,"line_end":960,"column_start":5,"column_end":8}},{"value":"/ By default this option is `false` and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":148790,"byte_end":148846,"line_start":961,"line_end":961,"column_start":5,"column_end":61}},{"value":"/ `CURLOPT_HTTPPROXYTUNNEL`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":148851,"byte_end":148881,"line_start":962,"line_end":962,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":645},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":149317,"byte_end":149326,"line_start":973,"line_end":973,"column_start":12,"column_end":21},"name":"interface","qualname":"<Easy2<H>>::interface","value":"fn (&mut self, interface: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Tell curl which interface to bind to for an outgoing network interface.","sig":null,"attributes":[{"value":"/ Tell curl which interface to bind to for an outgoing network interface.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":149048,"byte_end":149123,"line_start":967,"line_end":967,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":149128,"byte_end":149131,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ The interface name, IP address, or host name can be specified here.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":149136,"byte_end":149207,"line_start":969,"line_end":969,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":149212,"byte_end":149215,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ By default this option is not set and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":149220,"byte_end":149276,"line_start":971,"line_end":971,"column_start":5,"column_end":61}},{"value":"/ `CURLOPT_INTERFACE`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":149281,"byte_end":149305,"line_start":972,"line_end":972,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":149674,"byte_end":149688,"line_start":982,"line_end":982,"column_start":12,"column_end":26},"name":"set_local_port","qualname":"<Easy2<H>>::set_local_port","value":"fn (&mut self, port: u16) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Indicate which port should be bound to locally for this connection.","sig":null,"attributes":[{"value":"/ Indicate which port should be bound to locally for this connection.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":149488,"byte_end":149559,"line_start":978,"line_end":978,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":149564,"byte_end":149567,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ By default this option is 0 (any port) and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":149572,"byte_end":149633,"line_start":980,"line_end":980,"column_start":5,"column_end":66}},{"value":"/ `CURLOPT_LOCALPORT`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":149638,"byte_end":149662,"line_start":981,"line_end":981,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":150020,"byte_end":150036,"line_start":991,"line_end":991,"column_start":12,"column_end":28},"name":"local_port_range","qualname":"<Easy2<H>>::local_port_range","value":"fn (&mut self, range: u16) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Indicates the number of attempts libcurl will perform to find a working\n port number.","sig":null,"attributes":[{"value":"/ Indicates the number of attempts libcurl will perform to find a working","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":149815,"byte_end":149890,"line_start":986,"line_end":986,"column_start":5,"column_end":80}},{"value":"/ port number.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":149895,"byte_end":149911,"line_start":987,"line_end":987,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":149916,"byte_end":149919,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ By default this option is 1 and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":149924,"byte_end":149974,"line_start":989,"line_end":989,"column_start":5,"column_end":55}},{"value":"/ `CURLOPT_LOCALPORTRANGE`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":149979,"byte_end":150008,"line_start":990,"line_end":990,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":150548,"byte_end":150559,"line_start":1003,"line_end":1003,"column_start":12,"column_end":23},"name":"dns_servers","qualname":"<Easy2<H>>::dns_servers","value":"fn (&mut self, servers: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Sets the DNS servers that wil be used.","sig":null,"attributes":[{"value":"/ Sets the DNS servers that wil be used.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":150170,"byte_end":150212,"line_start":995,"line_end":995,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":150217,"byte_end":150220,"line_start":996,"line_end":996,"column_start":5,"column_end":8}},{"value":"/ Provide a comma separated list, for example: `8.8.8.8,8.8.4.4`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":150225,"byte_end":150292,"line_start":997,"line_end":997,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":150297,"byte_end":150300,"line_start":998,"line_end":998,"column_start":5,"column_end":8}},{"value":"/ By default this option is not set and the OS's DNS resolver is used.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":150305,"byte_end":150377,"line_start":999,"line_end":999,"column_start":5,"column_end":77}},{"value":"/ This option can only be used if libcurl is linked against","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":150382,"byte_end":150443,"line_start":1000,"line_end":1000,"column_start":5,"column_end":66}},{"value":"/ [c-ares](https://c-ares.haxx.se), otherwise setting it will return","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":150448,"byte_end":150518,"line_start":1001,"line_end":1001,"column_start":5,"column_end":75}},{"value":"/ an error.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":150523,"byte_end":150536,"line_start":1002,"line_end":1002,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":150986,"byte_end":151003,"line_start":1014,"line_end":1014,"column_start":12,"column_end":29},"name":"dns_cache_timeout","qualname":"<Easy2<H>>::dns_cache_timeout","value":"fn (&mut self, dur: Duration) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Sets the timeout of how long name resolves will be kept in memory.","sig":null,"attributes":[{"value":"/ Sets the timeout of how long name resolves will be kept in memory.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":150719,"byte_end":150789,"line_start":1008,"line_end":1008,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":150794,"byte_end":150797,"line_start":1009,"line_end":1009,"column_start":5,"column_end":8}},{"value":"/ This is distinct from DNS TTL options and is entirely speculative.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":150802,"byte_end":150872,"line_start":1010,"line_end":1010,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":150877,"byte_end":150880,"line_start":1011,"line_end":1011,"column_start":5,"column_end":8}},{"value":"/ By default this option is 60s and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":150885,"byte_end":150937,"line_start":1012,"line_end":1012,"column_start":5,"column_end":57}},{"value":"/ `CURLOPT_DNS_CACHE_TIMEOUT`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":150942,"byte_end":150974,"line_start":1013,"line_end":1013,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":650},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":151510,"byte_end":151521,"line_start":1026,"line_end":1026,"column_start":12,"column_end":23},"name":"buffer_size","qualname":"<Easy2<H>>::buffer_size","value":"fn (&mut self, size: usize) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Specify the preferred receive buffer size, in bytes.","sig":null,"attributes":[{"value":"/ Specify the preferred receive buffer size, in bytes.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":151151,"byte_end":151207,"line_start":1018,"line_end":1018,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":151212,"byte_end":151215,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ This is treated as a request, not an order, and the main point of this","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":151220,"byte_end":151294,"line_start":1020,"line_end":1020,"column_start":5,"column_end":79}},{"value":"/ is that the write callback may get called more often with smaller","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":151299,"byte_end":151368,"line_start":1021,"line_end":1021,"column_start":5,"column_end":74}},{"value":"/ chunks.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":151373,"byte_end":151384,"line_start":1022,"line_end":1022,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":151389,"byte_end":151392,"line_start":1023,"line_end":1023,"column_start":5,"column_end":8}},{"value":"/ By default this option is the maximum write size and corresopnds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":151397,"byte_end":151468,"line_start":1024,"line_end":1024,"column_start":5,"column_end":76}},{"value":"/ `CURLOPT_BUFFERSIZE`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":151473,"byte_end":151498,"line_start":1025,"line_end":1025,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":152288,"byte_end":152299,"line_start":1046,"line_end":1046,"column_start":12,"column_end":23},"name":"tcp_nodelay","qualname":"<Easy2<H>>::tcp_nodelay","value":"fn (&mut self, enable: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Configures whether the TCP_NODELAY option is set, or Nagle's algorithm\n is disabled.","sig":null,"attributes":[{"value":"/ Configures whether the TCP_NODELAY option is set, or Nagle's algorithm","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":151895,"byte_end":151969,"line_start":1037,"line_end":1037,"column_start":5,"column_end":79}},{"value":"/ is disabled.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":151974,"byte_end":151990,"line_start":1038,"line_end":1038,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":151995,"byte_end":151998,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ The purpose of Nagle's algorithm is to minimize the number of small","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":152003,"byte_end":152074,"line_start":1040,"line_end":1040,"column_start":5,"column_end":76}},{"value":"/ packet's on the network, and disabling this may be less efficient in","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":152079,"byte_end":152151,"line_start":1041,"line_end":1041,"column_start":5,"column_end":77}},{"value":"/ some situations.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":152156,"byte_end":152176,"line_start":1042,"line_end":1042,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":152181,"byte_end":152184,"line_start":1043,"line_end":1043,"column_start":5,"column_end":8}},{"value":"/ By default this option is `false` and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":152189,"byte_end":152245,"line_start":1044,"line_end":1044,"column_start":5,"column_end":61}},{"value":"/ `CURLOPT_TCP_NODELAY`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":152250,"byte_end":152276,"line_start":1045,"line_end":1045,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":152721,"byte_end":152734,"line_start":1057,"line_end":1057,"column_start":12,"column_end":25},"name":"tcp_keepalive","qualname":"<Easy2<H>>::tcp_keepalive","value":"fn (&mut self, enable: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Configures whether TCP keepalive probes will be sent.","sig":null,"attributes":[{"value":"/ Configures whether TCP keepalive probes will be sent.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":152433,"byte_end":152490,"line_start":1050,"line_end":1050,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":152495,"byte_end":152498,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ The delay and frequency of these probes is controlled by `tcp_keepidle`","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":152503,"byte_end":152578,"line_start":1052,"line_end":1052,"column_start":5,"column_end":80}},{"value":"/ and `tcp_keepintvl`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":152583,"byte_end":152607,"line_start":1053,"line_end":1053,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":152612,"byte_end":152615,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ By default this option is `false` and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":152620,"byte_end":152676,"line_start":1055,"line_end":1055,"column_start":5,"column_end":61}},{"value":"/ `CURLOPT_TCP_KEEPALIVE`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":152681,"byte_end":152709,"line_start":1056,"line_end":1056,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":653},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":153151,"byte_end":153163,"line_start":1067,"line_end":1067,"column_start":12,"column_end":24},"name":"tcp_keepidle","qualname":"<Easy2<H>>::tcp_keepidle","value":"fn (&mut self, amt: Duration) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Configures the TCP keepalive idle time wait.","sig":null,"attributes":[{"value":"/ Configures the TCP keepalive idle time wait.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":152870,"byte_end":152918,"line_start":1061,"line_end":1061,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":152923,"byte_end":152926,"line_start":1062,"line_end":1062,"column_start":5,"column_end":8}},{"value":"/ This is the delay, after which the connection is idle, keepalive probes","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":152931,"byte_end":153006,"line_start":1063,"line_end":1063,"column_start":5,"column_end":80}},{"value":"/ will be sent. Not all operating systems support this.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":153011,"byte_end":153068,"line_start":1064,"line_end":1064,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":153073,"byte_end":153076,"line_start":1065,"line_end":1065,"column_start":5,"column_end":8}},{"value":"/ By default this corresponds to `CURLOPT_TCP_KEEPIDLE`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":153081,"byte_end":153139,"line_start":1066,"line_end":1066,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":153440,"byte_end":153453,"line_start":1074,"line_end":1074,"column_start":12,"column_end":25},"name":"tcp_keepintvl","qualname":"<Easy2<H>>::tcp_keepintvl","value":"fn (&mut self, amt: Duration) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Configures the delay between keepalive probes.","sig":null,"attributes":[{"value":"/ Configures the delay between keepalive probes.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":153306,"byte_end":153356,"line_start":1071,"line_end":1071,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":153361,"byte_end":153364,"line_start":1072,"line_end":1072,"column_start":5,"column_end":8}},{"value":"/ By default this corresponds to `CURLOPT_TCP_KEEPINTVL`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":153369,"byte_end":153428,"line_start":1073,"line_end":1073,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":153849,"byte_end":153862,"line_start":1084,"line_end":1084,"column_start":12,"column_end":25},"name":"address_scope","qualname":"<Easy2<H>>::address_scope","value":"fn (&mut self, scope: u32) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Configures the scope for local IPv6 addresses.","sig":null,"attributes":[{"value":"/ Configures the scope for local IPv6 addresses.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":153597,"byte_end":153647,"line_start":1078,"line_end":1078,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":153652,"byte_end":153655,"line_start":1079,"line_end":1079,"column_start":5,"column_end":8}},{"value":"/ Sets the scope_id value to use when connecting to IPv6 or link-local","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":153660,"byte_end":153732,"line_start":1080,"line_end":1080,"column_start":5,"column_end":77}},{"value":"/ addresses.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":153737,"byte_end":153751,"line_start":1081,"line_end":1081,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":153756,"byte_end":153759,"line_start":1082,"line_end":1082,"column_start":5,"column_end":8}},{"value":"/ By default this value is 0 and corresponds to `CURLOPT_ADDRESS_SCOPE`","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":153764,"byte_end":153837,"line_start":1083,"line_end":1083,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":656},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":154278,"byte_end":154286,"line_start":1094,"line_end":1094,"column_start":12,"column_end":20},"name":"username","qualname":"<Easy2<H>>::username","value":"fn (&mut self, user: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Configures the username to pass as authentication for this connection.","sig":null,"attributes":[{"value":"/ Configures the username to pass as authentication for this connection.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":154104,"byte_end":154178,"line_start":1091,"line_end":1091,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":154183,"byte_end":154186,"line_start":1092,"line_end":1092,"column_start":5,"column_end":8}},{"value":"/ By default this value is not set and corresponds to `CURLOPT_USERNAME`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":154191,"byte_end":154266,"line_start":1093,"line_end":1093,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":657},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":154617,"byte_end":154625,"line_start":1102,"line_end":1102,"column_start":12,"column_end":20},"name":"password","qualname":"<Easy2<H>>::password","value":"fn (&mut self, pass: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Configures the password to pass as authentication for this connection.","sig":null,"attributes":[{"value":"/ Configures the password to pass as authentication for this connection.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":154443,"byte_end":154517,"line_start":1099,"line_end":1099,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":154522,"byte_end":154525,"line_start":1100,"line_end":1100,"column_start":5,"column_end":8}},{"value":"/ By default this value is not set and corresponds to `CURLOPT_PASSWORD`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":154530,"byte_end":154605,"line_start":1101,"line_end":1101,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":658},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":155347,"byte_end":155356,"line_start":1118,"line_end":1118,"column_start":12,"column_end":21},"name":"http_auth","qualname":"<Easy2<H>>::http_auth","value":"fn (&mut self, auth: &Auth) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set HTTP server authentication methods to try","sig":null,"attributes":[{"value":"/ Set HTTP server authentication methods to try","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":154782,"byte_end":154831,"line_start":1107,"line_end":1107,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":154836,"byte_end":154839,"line_start":1108,"line_end":1108,"column_start":5,"column_end":8}},{"value":"/ If more than one method is set, libcurl will first query the site to see","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":154844,"byte_end":154920,"line_start":1109,"line_end":1109,"column_start":5,"column_end":81}},{"value":"/ which authentication methods it supports and then pick the best one you","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":154925,"byte_end":155000,"line_start":1110,"line_end":1110,"column_start":5,"column_end":80}},{"value":"/ allow it to use. For some methods, this will induce an extra network","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":155005,"byte_end":155077,"line_start":1111,"line_end":1111,"column_start":5,"column_end":77}},{"value":"/ round-trip. Set the actual name and password with the `password` and","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":155082,"byte_end":155154,"line_start":1112,"line_end":1112,"column_start":5,"column_end":77}},{"value":"/ `username` methods.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":155159,"byte_end":155182,"line_start":1113,"line_end":1113,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":155187,"byte_end":155190,"line_start":1114,"line_end":1114,"column_start":5,"column_end":8}},{"value":"/ For authentication with a proxy, see `proxy_auth`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":155195,"byte_end":155249,"line_start":1115,"line_end":1115,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":155254,"byte_end":155257,"line_start":1116,"line_end":1116,"column_start":5,"column_end":8}},{"value":"/ By default this value is basic and corresponds to `CURLOPT_HTTPAUTH`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":155262,"byte_end":155335,"line_start":1117,"line_end":1117,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":659},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":155680,"byte_end":155694,"line_start":1127,"line_end":1127,"column_start":12,"column_end":26},"name":"proxy_username","qualname":"<Easy2<H>>::proxy_username","value":"fn (&mut self, user: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Configures the proxy username to pass as authentication for this\n connection.","sig":null,"attributes":[{"value":"/ Configures the proxy username to pass as authentication for this","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":155479,"byte_end":155547,"line_start":1122,"line_end":1122,"column_start":5,"column_end":73}},{"value":"/ connection.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":155552,"byte_end":155567,"line_start":1123,"line_end":1123,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":155572,"byte_end":155575,"line_start":1124,"line_end":1124,"column_start":5,"column_end":8}},{"value":"/ By default this value is not set and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":155580,"byte_end":155635,"line_start":1125,"line_end":1125,"column_start":5,"column_end":60}},{"value":"/ `CURLOPT_PROXYUSERNAME`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":155640,"byte_end":155668,"line_start":1126,"line_end":1126,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":660},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":156057,"byte_end":156071,"line_start":1137,"line_end":1137,"column_start":12,"column_end":26},"name":"proxy_password","qualname":"<Easy2<H>>::proxy_password","value":"fn (&mut self, pass: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Configures the proxy password to pass as authentication for this\n connection.","sig":null,"attributes":[{"value":"/ Configures the proxy password to pass as authentication for this","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":155856,"byte_end":155924,"line_start":1132,"line_end":1132,"column_start":5,"column_end":73}},{"value":"/ connection.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":155929,"byte_end":155944,"line_start":1133,"line_end":1133,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":155949,"byte_end":155952,"line_start":1134,"line_end":1134,"column_start":5,"column_end":8}},{"value":"/ By default this value is not set and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":155957,"byte_end":156012,"line_start":1135,"line_end":1135,"column_start":5,"column_end":60}},{"value":"/ `CURLOPT_PROXYPASSWORD`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":156017,"byte_end":156045,"line_start":1136,"line_end":1136,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":661},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":156743,"byte_end":156753,"line_start":1151,"line_end":1151,"column_start":12,"column_end":22},"name":"proxy_auth","qualname":"<Easy2<H>>::proxy_auth","value":"fn (&mut self, auth: &Auth) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set HTTP proxy authentication methods to try","sig":null,"attributes":[{"value":"/ Set HTTP proxy authentication methods to try","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":156233,"byte_end":156281,"line_start":1142,"line_end":1142,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":156286,"byte_end":156289,"line_start":1143,"line_end":1143,"column_start":5,"column_end":8}},{"value":"/ If more than one method is set, libcurl will first query the site to see","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":156294,"byte_end":156370,"line_start":1144,"line_end":1144,"column_start":5,"column_end":81}},{"value":"/ which authentication methods it supports and then pick the best one you","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":156375,"byte_end":156450,"line_start":1145,"line_end":1145,"column_start":5,"column_end":80}},{"value":"/ allow it to use. For some methods, this will induce an extra network","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":156455,"byte_end":156527,"line_start":1146,"line_end":1146,"column_start":5,"column_end":77}},{"value":"/ round-trip. Set the actual name and password with the `proxy_password`","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":156532,"byte_end":156606,"line_start":1147,"line_end":1147,"column_start":5,"column_end":79}},{"value":"/ and `proxy_username` methods.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":156611,"byte_end":156644,"line_start":1148,"line_end":1148,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":156649,"byte_end":156652,"line_start":1149,"line_end":1149,"column_start":5,"column_end":8}},{"value":"/ By default this value is basic and corresponds to `CURLOPT_PROXYAUTH`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":156657,"byte_end":156731,"line_start":1150,"line_end":1150,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":662},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":157009,"byte_end":157014,"line_start":1158,"line_end":1158,"column_start":12,"column_end":17},"name":"netrc","qualname":"<Easy2<H>>::netrc","value":"fn (&mut self, netrc: NetRc) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Enable .netrc parsing","sig":null,"attributes":[{"value":"/ Enable .netrc parsing","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":156877,"byte_end":156902,"line_start":1155,"line_end":1155,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":156907,"byte_end":156910,"line_start":1156,"line_end":1156,"column_start":5,"column_end":8}},{"value":"/ By default the .netrc file is ignored and corresponds to `CURL_NETRC_IGNORED`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":156915,"byte_end":156997,"line_start":1157,"line_end":1157,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":663},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":157420,"byte_end":157431,"line_start":1169,"line_end":1169,"column_start":12,"column_end":23},"name":"autoreferer","qualname":"<Easy2<H>>::autoreferer","value":"fn (&mut self, enable: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether the referer header is automatically updated","sig":null,"attributes":[{"value":"/ Indicates whether the referer header is automatically updated","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":157243,"byte_end":157308,"line_start":1165,"line_end":1165,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":157313,"byte_end":157316,"line_start":1166,"line_end":1166,"column_start":5,"column_end":8}},{"value":"/ By default this option is `false` and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":157321,"byte_end":157377,"line_start":1167,"line_end":1167,"column_start":5,"column_end":61}},{"value":"/ `CURLOPT_AUTOREFERER`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":157382,"byte_end":157408,"line_start":1168,"line_end":1168,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":158045,"byte_end":158060,"line_start":1183,"line_end":1183,"column_start":12,"column_end":27},"name":"accept_encoding","qualname":"<Easy2<H>>::accept_encoding","value":"fn (&mut self, encoding: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Enables automatic decompression of HTTP downloads.","sig":null,"attributes":[{"value":"/ Enables automatic decompression of HTTP downloads.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":157565,"byte_end":157619,"line_start":1173,"line_end":1173,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":157624,"byte_end":157627,"line_start":1174,"line_end":1174,"column_start":5,"column_end":8}},{"value":"/ Sets the contents of the Accept-Encoding header sent in an HTTP request.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":157632,"byte_end":157708,"line_start":1175,"line_end":1175,"column_start":5,"column_end":81}},{"value":"/ This enables decoding of a response with Content-Encoding.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":157713,"byte_end":157775,"line_start":1176,"line_end":1176,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":157780,"byte_end":157783,"line_start":1177,"line_end":1177,"column_start":5,"column_end":8}},{"value":"/ Currently supported encoding are `identity`, `zlib`, and `gzip`. A","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":157788,"byte_end":157858,"line_start":1178,"line_end":1178,"column_start":5,"column_end":75}},{"value":"/ zero-length string passed in will send all accepted encodings.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":157863,"byte_end":157929,"line_start":1179,"line_end":1179,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":157934,"byte_end":157937,"line_start":1180,"line_end":1180,"column_start":5,"column_end":8}},{"value":"/ By default this option is not set and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":157942,"byte_end":157998,"line_start":1181,"line_end":1181,"column_start":5,"column_end":61}},{"value":"/ `CURLOPT_ACCEPT_ENCODING`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":158003,"byte_end":158033,"line_start":1182,"line_end":1182,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":665},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":158397,"byte_end":158414,"line_start":1192,"line_end":1192,"column_start":12,"column_end":29},"name":"transfer_encoding","qualname":"<Easy2<H>>::transfer_encoding","value":"fn (&mut self, enable: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Request the HTTP Transfer Encoding.","sig":null,"attributes":[{"value":"/ Request the HTTP Transfer Encoding.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":158240,"byte_end":158279,"line_start":1188,"line_end":1188,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":158284,"byte_end":158287,"line_start":1189,"line_end":1189,"column_start":5,"column_end":8}},{"value":"/ By default this option is `false` and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":158292,"byte_end":158348,"line_start":1190,"line_end":1190,"column_start":5,"column_end":61}},{"value":"/ `CURLOPT_TRANSFER_ENCODING`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":158353,"byte_end":158385,"line_start":1191,"line_end":1191,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":666},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":158801,"byte_end":158816,"line_start":1203,"line_end":1203,"column_start":12,"column_end":27},"name":"follow_location","qualname":"<Easy2<H>>::follow_location","value":"fn (&mut self, enable: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Follow HTTP 3xx redirects.","sig":null,"attributes":[{"value":"/ Follow HTTP 3xx redirects.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":158554,"byte_end":158584,"line_start":1196,"line_end":1196,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":158589,"byte_end":158592,"line_start":1197,"line_end":1197,"column_start":5,"column_end":8}},{"value":"/ Indicates whether any `Location` headers in the response should get","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":158597,"byte_end":158668,"line_start":1198,"line_end":1198,"column_start":5,"column_end":76}},{"value":"/ followed.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":158673,"byte_end":158686,"line_start":1199,"line_end":1199,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":158691,"byte_end":158694,"line_start":1200,"line_end":1200,"column_start":5,"column_end":8}},{"value":"/ By default this option is `false` and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":158699,"byte_end":158755,"line_start":1201,"line_end":1201,"column_start":5,"column_end":61}},{"value":"/ `CURLOPT_FOLLOWLOCATION`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":158760,"byte_end":158789,"line_start":1202,"line_end":1202,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":159240,"byte_end":159257,"line_start":1214,"line_end":1214,"column_start":12,"column_end":29},"name":"unrestricted_auth","qualname":"<Easy2<H>>::unrestricted_auth","value":"fn (&mut self, enable: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Send credentials to hosts other than the first as well.","sig":null,"attributes":[{"value":"/ Send credentials to hosts other than the first as well.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":158953,"byte_end":159012,"line_start":1207,"line_end":1207,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":159017,"byte_end":159020,"line_start":1208,"line_end":1208,"column_start":5,"column_end":8}},{"value":"/ Sends username/password credentials even when the host changes as part","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":159025,"byte_end":159099,"line_start":1209,"line_end":1209,"column_start":5,"column_end":79}},{"value":"/ of a redirect.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":159104,"byte_end":159122,"line_start":1210,"line_end":1210,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":159127,"byte_end":159130,"line_start":1211,"line_end":1211,"column_start":5,"column_end":8}},{"value":"/ By default this option is `false` and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":159135,"byte_end":159191,"line_start":1212,"line_end":1212,"column_start":5,"column_end":61}},{"value":"/ `CURLOPT_UNRESTRICTED_AUTH`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":159196,"byte_end":159228,"line_start":1213,"line_end":1213,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":668},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":159619,"byte_end":159635,"line_start":1224,"line_end":1224,"column_start":12,"column_end":28},"name":"max_redirections","qualname":"<Easy2<H>>::max_redirections","value":"fn (&mut self, max: u32) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum number of redirects allowed.","sig":null,"attributes":[{"value":"/ Set the maximum number of redirects allowed.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":159397,"byte_end":159445,"line_start":1218,"line_end":1218,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":159450,"byte_end":159453,"line_start":1219,"line_end":1219,"column_start":5,"column_end":8}},{"value":"/ A value of 0 will refuse any redirect.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":159458,"byte_end":159500,"line_start":1220,"line_end":1220,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":159505,"byte_end":159508,"line_start":1221,"line_end":1221,"column_start":5,"column_end":8}},{"value":"/ By default this option is `-1` (unlimited) and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":159513,"byte_end":159578,"line_start":1222,"line_end":1222,"column_start":5,"column_end":70}},{"value":"/ `CURLOPT_MAXREDIRS`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":159583,"byte_end":159607,"line_start":1223,"line_end":1223,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":669},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":159917,"byte_end":159920,"line_start":1233,"line_end":1233,"column_start":12,"column_end":15},"name":"put","qualname":"<Easy2<H>>::put","value":"fn (&mut self, enable: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Make an HTTP PUT request.","sig":null,"attributes":[{"value":"/ Make an HTTP PUT request.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":159792,"byte_end":159821,"line_start":1230,"line_end":1230,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":159826,"byte_end":159829,"line_start":1231,"line_end":1231,"column_start":5,"column_end":8}},{"value":"/ By default this option is `false` and corresponds to `CURLOPT_PUT`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":159834,"byte_end":159905,"line_start":1232,"line_end":1232,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":160402,"byte_end":160406,"line_start":1246,"line_end":1246,"column_start":12,"column_end":16},"name":"post","qualname":"<Easy2<H>>::post","value":"fn (&mut self, enable: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Make an HTTP POST request.","sig":null,"attributes":[{"value":"/ Make an HTTP POST request.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":160046,"byte_end":160076,"line_start":1237,"line_end":1237,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":160081,"byte_end":160084,"line_start":1238,"line_end":1238,"column_start":5,"column_end":8}},{"value":"/ This will also make the library use the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":160089,"byte_end":160132,"line_start":1239,"line_end":1239,"column_start":5,"column_end":48}},{"value":"/ `Content-Type: application/x-www-form-urlencoded` header.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":160137,"byte_end":160198,"line_start":1240,"line_end":1240,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":160203,"byte_end":160206,"line_start":1241,"line_end":1241,"column_start":5,"column_end":8}},{"value":"/ POST data can be specified through `post_fields` or by specifying a read","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":160211,"byte_end":160287,"line_start":1242,"line_end":1242,"column_start":5,"column_end":81}},{"value":"/ function.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":160292,"byte_end":160305,"line_start":1243,"line_end":1243,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":160310,"byte_end":160313,"line_start":1244,"line_end":1244,"column_start":5,"column_end":8}},{"value":"/ By default this option is `false` and corresponds to `CURLOPT_POST`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":160318,"byte_end":160390,"line_start":1245,"line_end":1245,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":671},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":160853,"byte_end":160869,"line_start":1257,"line_end":1257,"column_start":12,"column_end":28},"name":"post_fields_copy","qualname":"<Easy2<H>>::post_fields_copy","value":"fn (&mut self, data: &[u8]) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Configures the data that will be uploaded as part of a POST.","sig":null,"attributes":[{"value":"/ Configures the data that will be uploaded as part of a POST.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":160533,"byte_end":160597,"line_start":1250,"line_end":1250,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":160602,"byte_end":160605,"line_start":1251,"line_end":1251,"column_start":5,"column_end":8}},{"value":"/ Note that the data is copied into this handle and if that's not desired","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":160610,"byte_end":160685,"line_start":1252,"line_end":1252,"column_start":5,"column_end":80}},{"value":"/ then the read callbacks can be used instead.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":160690,"byte_end":160738,"line_start":1253,"line_end":1253,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":160743,"byte_end":160746,"line_start":1254,"line_end":1254,"column_start":5,"column_end":8}},{"value":"/ By default this option is not set and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":160751,"byte_end":160807,"line_start":1255,"line_end":1255,"column_start":5,"column_end":61}},{"value":"/ `CURLOPT_COPYPOSTFIELDS`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":160812,"byte_end":160841,"line_start":1256,"line_end":1256,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":161546,"byte_end":161561,"line_start":1272,"line_end":1272,"column_start":12,"column_end":27},"name":"post_field_size","qualname":"<Easy2<H>>::post_field_size","value":"fn (&mut self, size: u64) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Configures the size of data that's going to be uploaded as part of a\n POST operation.","sig":null,"attributes":[{"value":"/ Configures the size of data that's going to be uploaded as part of a","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":161142,"byte_end":161214,"line_start":1263,"line_end":1263,"column_start":5,"column_end":77}},{"value":"/ POST operation.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":161219,"byte_end":161238,"line_start":1264,"line_end":1264,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":161243,"byte_end":161246,"line_start":1265,"line_end":1265,"column_start":5,"column_end":8}},{"value":"/ This is called automatically as part of `post_fields` and should only","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":161251,"byte_end":161324,"line_start":1266,"line_end":1266,"column_start":5,"column_end":78}},{"value":"/ be called if data is being provided in a read callback (and even then","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":161329,"byte_end":161402,"line_start":1267,"line_end":1267,"column_start":5,"column_end":78}},{"value":"/ it's optional).","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":161407,"byte_end":161426,"line_start":1268,"line_end":1268,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":161431,"byte_end":161434,"line_start":1269,"line_end":1269,"column_start":5,"column_end":8}},{"value":"/ By default this option is not set and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":161439,"byte_end":161495,"line_start":1270,"line_end":1270,"column_start":5,"column_end":61}},{"value":"/ `CURLOPT_POSTFIELDSIZE_LARGE`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":161500,"byte_end":161534,"line_start":1271,"line_end":1271,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":162157,"byte_end":162165,"line_start":1286,"line_end":1286,"column_start":12,"column_end":20},"name":"httppost","qualname":"<Easy2<H>>::httppost","value":"fn (&mut self, form: Form) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Tells libcurl you want a multipart/formdata HTTP POST to be made and you\n instruct what data to pass on to the server in the `form` argument.","sig":null,"attributes":[{"value":"/ Tells libcurl you want a multipart/formdata HTTP POST to be made and you","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":161892,"byte_end":161968,"line_start":1281,"line_end":1281,"column_start":5,"column_end":81}},{"value":"/ instruct what data to pass on to the server in the `form` argument.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":161973,"byte_end":162044,"line_start":1282,"line_end":1282,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":162049,"byte_end":162052,"line_start":1283,"line_end":1283,"column_start":5,"column_end":8}},{"value":"/ By default this option is set to null and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":162057,"byte_end":162117,"line_start":1284,"line_end":1284,"column_start":5,"column_end":65}},{"value":"/ `CURLOPT_HTTPPOST`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":162122,"byte_end":162145,"line_start":1285,"line_end":1285,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":674},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":162492,"byte_end":162499,"line_start":1295,"line_end":1295,"column_start":12,"column_end":19},"name":"referer","qualname":"<Easy2<H>>::referer","value":"fn (&mut self, referer: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Sets the HTTP referer header","sig":null,"attributes":[{"value":"/ Sets the HTTP referer header","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":162360,"byte_end":162392,"line_start":1292,"line_end":1292,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":162397,"byte_end":162400,"line_start":1293,"line_end":1293,"column_start":5,"column_end":8}},{"value":"/ By default this option is not set and corresponds to `CURLOPT_REFERER`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":162405,"byte_end":162480,"line_start":1294,"line_end":1294,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":162812,"byte_end":162821,"line_start":1304,"line_end":1304,"column_start":12,"column_end":21},"name":"useragent","qualname":"<Easy2<H>>::useragent","value":"fn (&mut self, useragent: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Sets the HTTP user-agent header","sig":null,"attributes":[{"value":"/ Sets the HTTP user-agent header","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":162667,"byte_end":162702,"line_start":1300,"line_end":1300,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":162707,"byte_end":162710,"line_start":1301,"line_end":1301,"column_start":5,"column_end":8}},{"value":"/ By default this option is not set and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":162715,"byte_end":162771,"line_start":1302,"line_end":1302,"column_start":5,"column_end":61}},{"value":"/ `CURLOPT_USERAGENT`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":162776,"byte_end":162800,"line_start":1303,"line_end":1303,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":164006,"byte_end":164018,"line_start":1336,"line_end":1336,"column_start":12,"column_end":24},"name":"http_headers","qualname":"<Easy2<H>>::http_headers","value":"fn (&mut self, list: List) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Add some headers to this HTTP request.","sig":null,"attributes":[{"value":"/ Add some headers to this HTTP request.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":162999,"byte_end":163041,"line_start":1309,"line_end":1309,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":163046,"byte_end":163049,"line_start":1310,"line_end":1310,"column_start":5,"column_end":8}},{"value":"/ If you add a header that is otherwise used internally, the value here","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":163054,"byte_end":163127,"line_start":1311,"line_end":1311,"column_start":5,"column_end":78}},{"value":"/ takes precedence. If a header is added with no content (like `Accept:`)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":163132,"byte_end":163207,"line_start":1312,"line_end":1312,"column_start":5,"column_end":80}},{"value":"/ the internally the header will get disabled. To add a header with no","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":163212,"byte_end":163284,"line_start":1313,"line_end":1313,"column_start":5,"column_end":77}},{"value":"/ content, use the form `MyHeader;` (not the trailing semicolon).","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":163289,"byte_end":163356,"line_start":1314,"line_end":1314,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":163361,"byte_end":163364,"line_start":1315,"line_end":1315,"column_start":5,"column_end":8}},{"value":"/ Headers must not be CRLF terminated. Many replaced headers have common","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":163369,"byte_end":163443,"line_start":1316,"line_end":1316,"column_start":5,"column_end":79}},{"value":"/ shortcuts which should be prefered.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":163448,"byte_end":163487,"line_start":1317,"line_end":1317,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":163492,"byte_end":163495,"line_start":1318,"line_end":1318,"column_start":5,"column_end":8}},{"value":"/ By default this option is not set and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":163500,"byte_end":163556,"line_start":1319,"line_end":1319,"column_start":5,"column_end":61}},{"value":"/ `CURLOPT_HTTPHEADER`","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":163561,"byte_end":163585,"line_start":1320,"line_end":1320,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":163590,"byte_end":163593,"line_start":1321,"line_end":1321,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":163598,"byte_end":163612,"line_start":1322,"line_end":1322,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":163617,"byte_end":163620,"line_start":1323,"line_end":1323,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":163625,"byte_end":163632,"line_start":1324,"line_end":1324,"column_start":5,"column_end":12}},{"value":"/ use curl::easy::{Easy, List};","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":163637,"byte_end":163670,"line_start":1325,"line_end":1325,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":163675,"byte_end":163678,"line_start":1326,"line_end":1326,"column_start":5,"column_end":8}},{"value":"/ let mut list = List::new();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":163683,"byte_end":163714,"line_start":1327,"line_end":1327,"column_start":5,"column_end":36}},{"value":"/ list.append(\"Foo: bar\").unwrap();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":163719,"byte_end":163756,"line_start":1328,"line_end":1328,"column_start":5,"column_end":42}},{"value":"/ list.append(\"Bar: baz\").unwrap();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":163761,"byte_end":163798,"line_start":1329,"line_end":1329,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":163803,"byte_end":163806,"line_start":1330,"line_end":1330,"column_start":5,"column_end":8}},{"value":"/ let mut handle = Easy::new();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":163811,"byte_end":163844,"line_start":1331,"line_end":1331,"column_start":5,"column_end":38}},{"value":"/ handle.url(\"https://www.rust-lang.org/\").unwrap();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":163849,"byte_end":163903,"line_start":1332,"line_end":1332,"column_start":5,"column_end":59}},{"value":"/ handle.http_headers(list).unwrap();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":163908,"byte_end":163947,"line_start":1333,"line_end":1333,"column_start":5,"column_end":44}},{"value":"/ handle.perform().unwrap();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":163952,"byte_end":163982,"line_start":1334,"line_end":1334,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":163987,"byte_end":163994,"line_start":1335,"line_end":1335,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":165139,"byte_end":165145,"line_start":1362,"line_end":1362,"column_start":12,"column_end":18},"name":"cookie","qualname":"<Easy2<H>>::cookie","value":"fn (&mut self, cookie: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set the contents of the HTTP Cookie header.","sig":null,"attributes":[{"value":"/ Set the contents of the HTTP Cookie header.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":164638,"byte_end":164685,"line_start":1352,"line_end":1352,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":164690,"byte_end":164693,"line_start":1353,"line_end":1353,"column_start":5,"column_end":8}},{"value":"/ Pass a string of the form `name=contents` for one cookie value or","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":164698,"byte_end":164767,"line_start":1354,"line_end":1354,"column_start":5,"column_end":74}},{"value":"/ `name1=val1; name2=val2` for multiple values.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":164772,"byte_end":164821,"line_start":1355,"line_end":1355,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":164826,"byte_end":164829,"line_start":1356,"line_end":1356,"column_start":5,"column_end":8}},{"value":"/ Using this option multiple times will only make the latest string","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":164834,"byte_end":164903,"line_start":1357,"line_end":1357,"column_start":5,"column_end":74}},{"value":"/ override the previous ones. This option will not enable the cookie","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":164908,"byte_end":164978,"line_start":1358,"line_end":1358,"column_start":5,"column_end":75}},{"value":"/ engine, use `cookie_file` or `cookie_jar` to do that.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":164983,"byte_end":165040,"line_start":1359,"line_end":1359,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":165045,"byte_end":165048,"line_start":1360,"line_end":1360,"column_start":5,"column_end":8}},{"value":"/ By default this option is not set and corresponds to `CURLOPT_COOKIE`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":165053,"byte_end":165127,"line_start":1361,"line_end":1361,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":166097,"byte_end":166108,"line_start":1384,"line_end":1384,"column_start":12,"column_end":23},"name":"cookie_file","qualname":"<Easy2<H>>::cookie_file","value":"fn <P> (&mut self, file: P) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set the file name to read cookies from.","sig":null,"attributes":[{"value":"/ Set the file name to read cookies from.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":165308,"byte_end":165351,"line_start":1367,"line_end":1367,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":165356,"byte_end":165359,"line_start":1368,"line_end":1368,"column_start":5,"column_end":8}},{"value":"/ The cookie data can be in either the old Netscape / Mozilla cookie data","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":165364,"byte_end":165439,"line_start":1369,"line_end":1369,"column_start":5,"column_end":80}},{"value":"/ format or just regular HTTP headers (Set-Cookie style) dumped to a file.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":165444,"byte_end":165520,"line_start":1370,"line_end":1370,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":165525,"byte_end":165528,"line_start":1371,"line_end":1371,"column_start":5,"column_end":8}},{"value":"/ This also enables the cookie engine, making libcurl parse and send","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":165533,"byte_end":165603,"line_start":1372,"line_end":1372,"column_start":5,"column_end":75}},{"value":"/ cookies on subsequent requests with this handle.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":165608,"byte_end":165660,"line_start":1373,"line_end":1373,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":165665,"byte_end":165668,"line_start":1374,"line_end":1374,"column_start":5,"column_end":8}},{"value":"/ Given an empty or non-existing file or by passing the empty string (\"\")","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":165673,"byte_end":165748,"line_start":1375,"line_end":1375,"column_start":5,"column_end":80}},{"value":"/ to this option, you can enable the cookie engine without reading any","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":165753,"byte_end":165825,"line_start":1376,"line_end":1376,"column_start":5,"column_end":77}},{"value":"/ initial cookies.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":165830,"byte_end":165850,"line_start":1377,"line_end":1377,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":165855,"byte_end":165858,"line_start":1378,"line_end":1378,"column_start":5,"column_end":8}},{"value":"/ If you use this option multiple times, you just add more files to read.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":165863,"byte_end":165938,"line_start":1379,"line_end":1379,"column_start":5,"column_end":80}},{"value":"/ Subsequent files will add more cookies.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":165943,"byte_end":165986,"line_start":1380,"line_end":1380,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":165991,"byte_end":165994,"line_start":1381,"line_end":1381,"column_start":5,"column_end":8}},{"value":"/ By default this option is not set and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":165999,"byte_end":166055,"line_start":1382,"line_end":1382,"column_start":5,"column_end":61}},{"value":"/ `CURLOPT_COOKIEFILE`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":166060,"byte_end":166085,"line_start":1383,"line_end":1383,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":166974,"byte_end":166984,"line_start":1402,"line_end":1402,"column_start":12,"column_end":22},"name":"cookie_jar","qualname":"<Easy2<H>>::cookie_jar","value":"fn <P> (&mut self, file: P) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set the file name to store cookies to.","sig":null,"attributes":[{"value":"/ Set the file name to store cookies to.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":166249,"byte_end":166291,"line_start":1388,"line_end":1388,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":166296,"byte_end":166299,"line_start":1389,"line_end":1389,"column_start":5,"column_end":8}},{"value":"/ This will make libcurl write all internally known cookies to the file","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":166304,"byte_end":166377,"line_start":1390,"line_end":1390,"column_start":5,"column_end":78}},{"value":"/ when this handle is dropped. If no cookies are known, no file will be","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":166382,"byte_end":166455,"line_start":1391,"line_end":1391,"column_start":5,"column_end":78}},{"value":"/ created. Specify \"-\" as filename to instead have the cookies written to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":166460,"byte_end":166535,"line_start":1392,"line_end":1392,"column_start":5,"column_end":80}},{"value":"/ stdout. Using this option also enables cookies for this session, so if","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":166540,"byte_end":166614,"line_start":1393,"line_end":1393,"column_start":5,"column_end":79}},{"value":"/ you for example follow a location it will make matching cookies get sent","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":166619,"byte_end":166695,"line_start":1394,"line_end":1394,"column_start":5,"column_end":81}},{"value":"/ accordingly.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":166700,"byte_end":166716,"line_start":1395,"line_end":1395,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":166721,"byte_end":166724,"line_start":1396,"line_end":1396,"column_start":5,"column_end":8}},{"value":"/ Note that libcurl doesn't read any cookies from the cookie jar. If you","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":166729,"byte_end":166803,"line_start":1397,"line_end":1397,"column_start":5,"column_end":79}},{"value":"/ want to read cookies from a file, use `cookie_file`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":166808,"byte_end":166864,"line_start":1398,"line_end":1398,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":166869,"byte_end":166872,"line_start":1399,"line_end":1399,"column_start":5,"column_end":8}},{"value":"/ By default this option is not set and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":166877,"byte_end":166933,"line_start":1400,"line_end":1400,"column_start":5,"column_end":61}},{"value":"/ `CURLOPT_COOKIEJAR`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":166938,"byte_end":166962,"line_start":1401,"line_end":1401,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":167702,"byte_end":167716,"line_start":1417,"line_end":1417,"column_start":12,"column_end":26},"name":"cookie_session","qualname":"<Easy2<H>>::cookie_session","value":"fn (&mut self, session: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Start a new cookie session","sig":null,"attributes":[{"value":"/ Start a new cookie session","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":167124,"byte_end":167154,"line_start":1406,"line_end":1406,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":167159,"byte_end":167162,"line_start":1407,"line_end":1407,"column_start":5,"column_end":8}},{"value":"/ Marks this as a new cookie \"session\". It will force libcurl to ignore","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":167167,"byte_end":167240,"line_start":1408,"line_end":1408,"column_start":5,"column_end":78}},{"value":"/ all cookies it is about to load that are \"session cookies\" from the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":167245,"byte_end":167316,"line_start":1409,"line_end":1409,"column_start":5,"column_end":76}},{"value":"/ previous session. By default, libcurl always stores and loads all","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":167321,"byte_end":167390,"line_start":1410,"line_end":1410,"column_start":5,"column_end":74}},{"value":"/ cookies, independent if they are session cookies or not. Session cookies","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":167395,"byte_end":167471,"line_start":1411,"line_end":1411,"column_start":5,"column_end":81}},{"value":"/ are cookies without expiry date and they are meant to be alive and","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":167476,"byte_end":167546,"line_start":1412,"line_end":1412,"column_start":5,"column_end":75}},{"value":"/ existing for this \"session\" only.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":167551,"byte_end":167588,"line_start":1413,"line_end":1413,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":167593,"byte_end":167596,"line_start":1414,"line_end":1414,"column_start":5,"column_end":8}},{"value":"/ By default this option is `false` and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":167601,"byte_end":167657,"line_start":1415,"line_end":1415,"column_start":5,"column_end":61}},{"value":"/ `CURLOPT_COOKIESESSION`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":167662,"byte_end":167690,"line_start":1416,"line_end":1416,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":169213,"byte_end":169224,"line_start":1446,"line_end":1446,"column_start":12,"column_end":23},"name":"cookie_list","qualname":"<Easy2<H>>::cookie_list","value":"fn (&mut self, cookie: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Add to or manipulate cookies held in memory.","sig":null,"attributes":[{"value":"/ Add to or manipulate cookies held in memory.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":167854,"byte_end":167902,"line_start":1421,"line_end":1421,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":167907,"byte_end":167910,"line_start":1422,"line_end":1422,"column_start":5,"column_end":8}},{"value":"/ Such a cookie can be either a single line in Netscape / Mozilla format","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":167915,"byte_end":167989,"line_start":1423,"line_end":1423,"column_start":5,"column_end":79}},{"value":"/ or just regular HTTP-style header (Set-Cookie: ...) format. This will","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":167994,"byte_end":168067,"line_start":1424,"line_end":1424,"column_start":5,"column_end":78}},{"value":"/ also enable the cookie engine. This adds that single cookie to the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":168072,"byte_end":168142,"line_start":1425,"line_end":1425,"column_start":5,"column_end":75}},{"value":"/ internal cookie store.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":168147,"byte_end":168173,"line_start":1426,"line_end":1426,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":168178,"byte_end":168181,"line_start":1427,"line_end":1427,"column_start":5,"column_end":8}},{"value":"/ Exercise caution if you are using this option and multiple transfers may","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":168186,"byte_end":168262,"line_start":1428,"line_end":1428,"column_start":5,"column_end":81}},{"value":"/ occur. If you use the Set-Cookie format and don't specify a domain then","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":168267,"byte_end":168342,"line_start":1429,"line_end":1429,"column_start":5,"column_end":80}},{"value":"/ the cookie is sent for any domain (even after redirects are followed)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":168347,"byte_end":168420,"line_start":1430,"line_end":1430,"column_start":5,"column_end":78}},{"value":"/ and cannot be modified by a server-set cookie. If a server sets a cookie","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":168425,"byte_end":168501,"line_start":1431,"line_end":1431,"column_start":5,"column_end":81}},{"value":"/ of the same name (or maybe you've imported one) then both will be sent","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":168506,"byte_end":168580,"line_start":1432,"line_end":1432,"column_start":5,"column_end":79}},{"value":"/ on a future transfer to that server, likely not what you intended.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":168585,"byte_end":168655,"line_start":1433,"line_end":1433,"column_start":5,"column_end":75}},{"value":"/ address these issues set a domain in Set-Cookie or use the Netscape","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":168660,"byte_end":168731,"line_start":1434,"line_end":1434,"column_start":5,"column_end":76}},{"value":"/ format.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":168736,"byte_end":168747,"line_start":1435,"line_end":1435,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":168752,"byte_end":168755,"line_start":1436,"line_end":1436,"column_start":5,"column_end":8}},{"value":"/ Additionally, there are commands available that perform actions if you","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":168760,"byte_end":168834,"line_start":1437,"line_end":1437,"column_start":5,"column_end":79}},{"value":"/ pass in these exact strings:","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":168839,"byte_end":168871,"line_start":1438,"line_end":1438,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":168876,"byte_end":168879,"line_start":1439,"line_end":1439,"column_start":5,"column_end":8}},{"value":"/ * \"ALL\" - erases all cookies held in memory","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":168884,"byte_end":168931,"line_start":1440,"line_end":1440,"column_start":5,"column_end":52}},{"value":"/ * \"SESS\" - erases all session cookies held in memory","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":168936,"byte_end":168992,"line_start":1441,"line_end":1441,"column_start":5,"column_end":61}},{"value":"/ * \"FLUSH\" - write all known cookies to the specified cookie jar","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":168997,"byte_end":169064,"line_start":1442,"line_end":1442,"column_start":5,"column_end":72}},{"value":"/ * \"RELOAD\" - reread all cookies from the cookie file","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":169069,"byte_end":169125,"line_start":1443,"line_end":1443,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":169130,"byte_end":169133,"line_start":1444,"line_end":1444,"column_start":5,"column_end":8}},{"value":"/ By default this options corresponds to `CURLOPT_COOKIELIST`","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":169138,"byte_end":169201,"line_start":1445,"line_end":1445,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":169522,"byte_end":169525,"line_start":1454,"line_end":1454,"column_start":12,"column_end":15},"name":"get","qualname":"<Easy2<H>>::get","value":"fn (&mut self, enable: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Ask for a HTTP GET request.","sig":null,"attributes":[{"value":"/ Ask for a HTTP GET request.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":169391,"byte_end":169422,"line_start":1451,"line_end":1451,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":169427,"byte_end":169430,"line_start":1452,"line_end":1452,"column_start":5,"column_end":8}},{"value":"/ By default this option is `false` and corresponds to `CURLOPT_HTTPGET`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":169435,"byte_end":169510,"line_start":1453,"line_end":1453,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":170103,"byte_end":170124,"line_start":1469,"line_end":1469,"column_start":12,"column_end":33},"name":"ignore_content_length","qualname":"<Easy2<H>>::ignore_content_length","value":"fn (&mut self, ignore: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Ignore the content-length header.","sig":null,"attributes":[{"value":"/ Ignore the content-length header.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":169944,"byte_end":169981,"line_start":1465,"line_end":1465,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":169986,"byte_end":169989,"line_start":1466,"line_end":1466,"column_start":5,"column_end":8}},{"value":"/ By default this option is `false` and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":169994,"byte_end":170050,"line_start":1467,"line_end":1467,"column_start":5,"column_end":61}},{"value":"/ `CURLOPT_IGNORE_CONTENT_LENGTH`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":170055,"byte_end":170091,"line_start":1468,"line_end":1468,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":170433,"byte_end":170454,"line_start":1477,"line_end":1477,"column_start":12,"column_end":33},"name":"http_content_decoding","qualname":"<Easy2<H>>::http_content_decoding","value":"fn (&mut self, enable: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Enable or disable HTTP content decoding.","sig":null,"attributes":[{"value":"/ Enable or disable HTTP content decoding.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":170268,"byte_end":170312,"line_start":1473,"line_end":1473,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":170317,"byte_end":170320,"line_start":1474,"line_end":1474,"column_start":5,"column_end":8}},{"value":"/ By default this option is `true` and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":170325,"byte_end":170380,"line_start":1475,"line_end":1475,"column_start":5,"column_end":60}},{"value":"/ `CURLOPT_HTTP_CONTENT_DECODING`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":170385,"byte_end":170421,"line_start":1476,"line_end":1476,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":687},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":170765,"byte_end":170787,"line_start":1485,"line_end":1485,"column_start":12,"column_end":34},"name":"http_transfer_decoding","qualname":"<Easy2<H>>::http_transfer_decoding","value":"fn (&mut self, enable: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Enable or disable HTTP transfer decoding.","sig":null,"attributes":[{"value":"/ Enable or disable HTTP transfer decoding.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":170598,"byte_end":170643,"line_start":1481,"line_end":1481,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":170648,"byte_end":170651,"line_start":1482,"line_end":1482,"column_start":5,"column_end":8}},{"value":"/ By default this option is `true` and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":170656,"byte_end":170711,"line_start":1483,"line_end":1483,"column_start":5,"column_end":60}},{"value":"/ `CURLOPT_HTTP_TRANSFER_DECODING`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":170716,"byte_end":170753,"line_start":1484,"line_end":1484,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":173270,"byte_end":173275,"line_start":1535,"line_end":1535,"column_start":12,"column_end":17},"name":"range","qualname":"<Easy2<H>>::range","value":"fn (&mut self, range: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Indicates the range that this request should retrieve.","sig":null,"attributes":[{"value":"/ Indicates the range that this request should retrieve.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":172919,"byte_end":172977,"line_start":1528,"line_end":1528,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":172982,"byte_end":172985,"line_start":1529,"line_end":1529,"column_start":5,"column_end":8}},{"value":"/ The string provided should be of the form `N-M` where either `N` or `M`","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":172990,"byte_end":173065,"line_start":1530,"line_end":1530,"column_start":5,"column_end":80}},{"value":"/ can be left out. For HTTP transfers multiple ranges separated by commas","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":173070,"byte_end":173145,"line_start":1531,"line_end":1531,"column_start":5,"column_end":80}},{"value":"/ are also accepted.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":173150,"byte_end":173172,"line_start":1532,"line_end":1532,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":173177,"byte_end":173180,"line_start":1533,"line_end":1533,"column_start":5,"column_end":8}},{"value":"/ By default this option is not set and corresponds to `CURLOPT_RANGE`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":173185,"byte_end":173258,"line_start":1534,"line_end":1534,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":173665,"byte_end":173676,"line_start":1546,"line_end":1546,"column_start":12,"column_end":23},"name":"resume_from","qualname":"<Easy2<H>>::resume_from","value":"fn (&mut self, from: u64) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set a point to resume transfer from","sig":null,"attributes":[{"value":"/ Set a point to resume transfer from","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":173433,"byte_end":173472,"line_start":1540,"line_end":1540,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":173477,"byte_end":173480,"line_start":1541,"line_end":1541,"column_start":5,"column_end":8}},{"value":"/ Specify the offset in bytes you want the transfer to start from.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":173485,"byte_end":173553,"line_start":1542,"line_end":1542,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":173558,"byte_end":173561,"line_start":1543,"line_end":1543,"column_start":5,"column_end":8}},{"value":"/ By default this option is 0 and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":173566,"byte_end":173616,"line_start":1544,"line_end":1544,"column_start":5,"column_end":55}},{"value":"/ `CURLOPT_RESUME_FROM_LARGE`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":173621,"byte_end":173653,"line_start":1545,"line_end":1545,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":174210,"byte_end":174224,"line_start":1561,"line_end":1561,"column_start":12,"column_end":26},"name":"custom_request","qualname":"<Easy2<H>>::custom_request","value":"fn (&mut self, request: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set a custom request string","sig":null,"attributes":[{"value":"/ Set a custom request string","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":173861,"byte_end":173892,"line_start":1553,"line_end":1553,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":173897,"byte_end":173900,"line_start":1554,"line_end":1554,"column_start":5,"column_end":8}},{"value":"/ Specifies that a custom request will be made (e.g. a custom HTTP","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":173905,"byte_end":173973,"line_start":1555,"line_end":1555,"column_start":5,"column_end":73}},{"value":"/ method). This does not change how libcurl performs internally, just","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":173978,"byte_end":174049,"line_start":1556,"line_end":1556,"column_start":5,"column_end":76}},{"value":"/ changes the string sent to the server.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":174054,"byte_end":174096,"line_start":1557,"line_end":1557,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":174101,"byte_end":174104,"line_start":1558,"line_end":1558,"column_start":5,"column_end":8}},{"value":"/ By default this option is not set and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":174109,"byte_end":174165,"line_start":1559,"line_end":1559,"column_start":5,"column_end":61}},{"value":"/ `CURLOPT_CUSTOMREQUEST`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":174170,"byte_end":174198,"line_start":1560,"line_end":1560,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":174882,"byte_end":174896,"line_start":1575,"line_end":1575,"column_start":12,"column_end":26},"name":"fetch_filetime","qualname":"<Easy2<H>>::fetch_filetime","value":"fn (&mut self, fetch: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Get the modification time of the remote resource","sig":null,"attributes":[{"value":"/ Get the modification time of the remote resource","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":174398,"byte_end":174450,"line_start":1566,"line_end":1566,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":174455,"byte_end":174458,"line_start":1567,"line_end":1567,"column_start":5,"column_end":8}},{"value":"/ If true, libcurl will attempt to get the modification time of the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":174463,"byte_end":174532,"line_start":1568,"line_end":1568,"column_start":5,"column_end":74}},{"value":"/ remote document in this operation. This requires that the remote server","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":174537,"byte_end":174612,"line_start":1569,"line_end":1569,"column_start":5,"column_end":80}},{"value":"/ sends the time or replies to a time querying command. The `filetime`","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":174617,"byte_end":174689,"line_start":1570,"line_end":1570,"column_start":5,"column_end":77}},{"value":"/ function can be used after a transfer to extract the received time (if","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":174694,"byte_end":174768,"line_start":1571,"line_end":1571,"column_start":5,"column_end":79}},{"value":"/ any).","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":174773,"byte_end":174782,"line_start":1572,"line_end":1572,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":174787,"byte_end":174790,"line_start":1573,"line_end":1573,"column_start":5,"column_end":8}},{"value":"/ By default this option is `false` and corresponds to `CURLOPT_FILETIME`","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":174795,"byte_end":174870,"line_start":1574,"line_end":1574,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":692},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":175264,"byte_end":175270,"line_start":1584,"line_end":1584,"column_start":12,"column_end":18},"name":"nobody","qualname":"<Easy2<H>>::nobody","value":"fn (&mut self, enable: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Indicate whether to download the request without getting the body","sig":null,"attributes":[{"value":"/ Indicate whether to download the request without getting the body","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":175025,"byte_end":175094,"line_start":1579,"line_end":1579,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":175099,"byte_end":175102,"line_start":1580,"line_end":1580,"column_start":5,"column_end":8}},{"value":"/ This is useful, for example, for doing a HEAD request.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":175107,"byte_end":175165,"line_start":1581,"line_end":1581,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":175170,"byte_end":175173,"line_start":1582,"line_end":1582,"column_start":5,"column_end":8}},{"value":"/ By default this option is `false` and corresponds to `CURLOPT_NOBODY`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":175178,"byte_end":175252,"line_start":1583,"line_end":1583,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":175563,"byte_end":175574,"line_start":1592,"line_end":1592,"column_start":12,"column_end":23},"name":"in_filesize","qualname":"<Easy2<H>>::in_filesize","value":"fn (&mut self, size: u64) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set the size of the input file to send off.","sig":null,"attributes":[{"value":"/ Set the size of the input file to send off.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":175399,"byte_end":175446,"line_start":1588,"line_end":1588,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":175451,"byte_end":175454,"line_start":1589,"line_end":1589,"column_start":5,"column_end":8}},{"value":"/ By default this option is not set and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":175459,"byte_end":175515,"line_start":1590,"line_end":1590,"column_start":5,"column_end":61}},{"value":"/ `CURLOPT_INFILESIZE_LARGE`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":175520,"byte_end":175551,"line_start":1591,"line_end":1591,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":176069,"byte_end":176075,"line_start":1606,"line_end":1606,"column_start":12,"column_end":18},"name":"upload","qualname":"<Easy2<H>>::upload","value":"fn (&mut self, enable: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Enable or disable data upload.","sig":null,"attributes":[{"value":"/ Enable or disable data upload.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":175758,"byte_end":175792,"line_start":1599,"line_end":1599,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":175797,"byte_end":175800,"line_start":1600,"line_end":1600,"column_start":5,"column_end":8}},{"value":"/ This means that a PUT request will be made for HTTP and probably wants","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":175805,"byte_end":175879,"line_start":1601,"line_end":1601,"column_start":5,"column_end":79}},{"value":"/ to be combined with the read callback as well as the `in_filesize`","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":175884,"byte_end":175954,"line_start":1602,"line_end":1602,"column_start":5,"column_end":75}},{"value":"/ method.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":175959,"byte_end":175970,"line_start":1603,"line_end":1603,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":175975,"byte_end":175978,"line_start":1604,"line_end":1604,"column_start":5,"column_end":8}},{"value":"/ By default this option is `false` and corresponds to `CURLOPT_UPLOAD`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":175983,"byte_end":176057,"line_start":1605,"line_end":1605,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":176370,"byte_end":176382,"line_start":1614,"line_end":1614,"column_start":12,"column_end":24},"name":"max_filesize","qualname":"<Easy2<H>>::max_filesize","value":"fn (&mut self, size: u64) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Configure the maximum file size to download.","sig":null,"attributes":[{"value":"/ Configure the maximum file size to download.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":176204,"byte_end":176252,"line_start":1610,"line_end":1610,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":176257,"byte_end":176260,"line_start":1611,"line_end":1611,"column_start":5,"column_end":8}},{"value":"/ By default this option is not set and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":176265,"byte_end":176321,"line_start":1612,"line_end":1612,"column_start":5,"column_end":61}},{"value":"/ `CURLOPT_MAXFILESIZE_LARGE`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":176326,"byte_end":176358,"line_start":1613,"line_end":1613,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":696},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":176805,"byte_end":176819,"line_start":1627,"line_end":1627,"column_start":12,"column_end":26},"name":"time_condition","qualname":"<Easy2<H>>::time_condition","value":"fn (&mut self, cond: TimeCondition) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Selects a condition for a time request.","sig":null,"attributes":[{"value":"/ Selects a condition for a time request.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":176567,"byte_end":176610,"line_start":1621,"line_end":1621,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":176615,"byte_end":176618,"line_start":1622,"line_end":1622,"column_start":5,"column_end":8}},{"value":"/ This value indicates how the `time_value` option is interpreted.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":176623,"byte_end":176691,"line_start":1623,"line_end":1623,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":176696,"byte_end":176699,"line_start":1624,"line_end":1624,"column_start":5,"column_end":8}},{"value":"/ By default this option is not set and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":176704,"byte_end":176760,"line_start":1625,"line_end":1625,"column_start":5,"column_end":61}},{"value":"/ `CURLOPT_TIMECONDITION`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":176765,"byte_end":176793,"line_start":1626,"line_end":1626,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":177281,"byte_end":177291,"line_start":1638,"line_end":1638,"column_start":12,"column_end":22},"name":"time_value","qualname":"<Easy2<H>>::time_value","value":"fn (&mut self, val: i64) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Sets the time value for a conditional request.","sig":null,"attributes":[{"value":"/ Sets the time value for a conditional request.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":176960,"byte_end":177010,"line_start":1631,"line_end":1631,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":177015,"byte_end":177018,"line_start":1632,"line_end":1632,"column_start":5,"column_end":8}},{"value":"/ The value here should be the number of seconds elapsed since January 1,","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":177023,"byte_end":177098,"line_start":1633,"line_end":1633,"column_start":5,"column_end":80}},{"value":"/ 1970. To pass how to interpret this value, use `time_condition`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":177103,"byte_end":177171,"line_start":1634,"line_end":1634,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":177176,"byte_end":177179,"line_start":1635,"line_end":1635,"column_start":5,"column_end":8}},{"value":"/ By default this option is not set and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":177184,"byte_end":177240,"line_start":1636,"line_end":1636,"column_start":5,"column_end":61}},{"value":"/ `CURLOPT_TIMEVALUE`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":177245,"byte_end":177269,"line_start":1637,"line_end":1637,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":698},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":178516,"byte_end":178523,"line_start":1666,"line_end":1666,"column_start":12,"column_end":19},"name":"timeout","qualname":"<Easy2<H>>::timeout","value":"fn (&mut self, timeout: Duration) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set maximum time the request is allowed to take.","sig":null,"attributes":[{"value":"/ Set maximum time the request is allowed to take.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":177524,"byte_end":177576,"line_start":1645,"line_end":1645,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":177581,"byte_end":177584,"line_start":1646,"line_end":1646,"column_start":5,"column_end":8}},{"value":"/ Normally, name lookups can take a considerable time and limiting","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":177589,"byte_end":177657,"line_start":1647,"line_end":1647,"column_start":5,"column_end":73}},{"value":"/ operations to less than a few minutes risk aborting perfectly normal","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":177662,"byte_end":177734,"line_start":1648,"line_end":1648,"column_start":5,"column_end":77}},{"value":"/ operations.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":177739,"byte_end":177754,"line_start":1649,"line_end":1649,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":177759,"byte_end":177762,"line_start":1650,"line_end":1650,"column_start":5,"column_end":8}},{"value":"/ If libcurl is built to use the standard system name resolver, that","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":177767,"byte_end":177837,"line_start":1651,"line_end":1651,"column_start":5,"column_end":75}},{"value":"/ portion of the transfer will still use full-second resolution for","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":177842,"byte_end":177911,"line_start":1652,"line_end":1652,"column_start":5,"column_end":74}},{"value":"/ timeouts with a minimum timeout allowed of one second.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":177916,"byte_end":177974,"line_start":1653,"line_end":1653,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":177979,"byte_end":177982,"line_start":1654,"line_end":1654,"column_start":5,"column_end":8}},{"value":"/ In unix-like systems, this might cause signals to be used unless","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":177987,"byte_end":178055,"line_start":1655,"line_end":1655,"column_start":5,"column_end":73}},{"value":"/ `nosignal` is set.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":178060,"byte_end":178082,"line_start":1656,"line_end":1656,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":178087,"byte_end":178090,"line_start":1657,"line_end":1657,"column_start":5,"column_end":8}},{"value":"/ Since this puts a hard limit for how long a request is allowed to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":178095,"byte_end":178164,"line_start":1658,"line_end":1658,"column_start":5,"column_end":74}},{"value":"/ take, it has limited use in dynamic use cases with varying transfer","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":178169,"byte_end":178240,"line_start":1659,"line_end":1659,"column_start":5,"column_end":76}},{"value":"/ times. You are then advised to explore `low_speed_limit`,","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":178245,"byte_end":178306,"line_start":1660,"line_end":1660,"column_start":5,"column_end":66}},{"value":"/ `low_speed_time` or using `progress_function` to implement your own","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":178311,"byte_end":178382,"line_start":1661,"line_end":1661,"column_start":5,"column_end":76}},{"value":"/ timeout logic.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":178387,"byte_end":178405,"line_start":1662,"line_end":1662,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":178410,"byte_end":178413,"line_start":1663,"line_end":1663,"column_start":5,"column_end":8}},{"value":"/ By default this option is not set and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":178418,"byte_end":178474,"line_start":1664,"line_end":1664,"column_start":5,"column_end":61}},{"value":"/ `CURLOPT_TIMEOUT_MS`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":178479,"byte_end":178504,"line_start":1665,"line_end":1665,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":179226,"byte_end":179241,"line_start":1681,"line_end":1681,"column_start":12,"column_end":27},"name":"low_speed_limit","qualname":"<Easy2<H>>::low_speed_limit","value":"fn (&mut self, limit: u32) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set the low speed limit in bytes per second.","sig":null,"attributes":[{"value":"/ Set the low speed limit in bytes per second.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":178857,"byte_end":178905,"line_start":1673,"line_end":1673,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":178910,"byte_end":178913,"line_start":1674,"line_end":1674,"column_start":5,"column_end":8}},{"value":"/ This specifies the average transfer speed in bytes per second that the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":178918,"byte_end":178992,"line_start":1675,"line_end":1675,"column_start":5,"column_end":79}},{"value":"/ transfer should be below during `low_speed_time` for libcurl to consider","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":178997,"byte_end":179073,"line_start":1676,"line_end":1676,"column_start":5,"column_end":81}},{"value":"/ it to be too slow and abort.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":179078,"byte_end":179110,"line_start":1677,"line_end":1677,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":179115,"byte_end":179118,"line_start":1678,"line_end":1678,"column_start":5,"column_end":8}},{"value":"/ By default this option is not set and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":179123,"byte_end":179179,"line_start":1679,"line_end":1679,"column_start":5,"column_end":61}},{"value":"/ `CURLOPT_LOW_SPEED_LIMIT`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":179184,"byte_end":179214,"line_start":1680,"line_end":1680,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":700},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":179665,"byte_end":179679,"line_start":1692,"line_end":1692,"column_start":12,"column_end":26},"name":"low_speed_time","qualname":"<Easy2<H>>::low_speed_time","value":"fn (&mut self, dur: Duration) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set the low speed time period.","sig":null,"attributes":[{"value":"/ Set the low speed time period.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":179376,"byte_end":179410,"line_start":1685,"line_end":1685,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":179415,"byte_end":179418,"line_start":1686,"line_end":1686,"column_start":5,"column_end":8}},{"value":"/ Specifies the window of time for which if the transfer rate is below","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":179423,"byte_end":179495,"line_start":1687,"line_end":1687,"column_start":5,"column_end":77}},{"value":"/ `low_speed_limit` the request will be aborted.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":179500,"byte_end":179550,"line_start":1688,"line_end":1688,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":179555,"byte_end":179558,"line_start":1689,"line_end":1689,"column_start":5,"column_end":8}},{"value":"/ By default this option is not set and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":179563,"byte_end":179619,"line_start":1690,"line_end":1690,"column_start":5,"column_end":61}},{"value":"/ `CURLOPT_LOW_SPEED_TIME`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":179624,"byte_end":179653,"line_start":1691,"line_end":1691,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":701},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":180224,"byte_end":180238,"line_start":1704,"line_end":1704,"column_start":12,"column_end":26},"name":"max_send_speed","qualname":"<Easy2<H>>::max_send_speed","value":"fn (&mut self, speed: u64) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Rate limit data upload speed","sig":null,"attributes":[{"value":"/ Rate limit data upload speed","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":179824,"byte_end":179856,"line_start":1696,"line_end":1696,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":179861,"byte_end":179864,"line_start":1697,"line_end":1697,"column_start":5,"column_end":8}},{"value":"/ If an upload exceeds this speed (counted in bytes per second) on","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":179869,"byte_end":179937,"line_start":1698,"line_end":1698,"column_start":5,"column_end":73}},{"value":"/ cumulative average during the transfer, the transfer will pause to keep","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":179942,"byte_end":180017,"line_start":1699,"line_end":1699,"column_start":5,"column_end":80}},{"value":"/ the average rate less than or equal to the parameter value.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":180022,"byte_end":180085,"line_start":1700,"line_end":1700,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":180090,"byte_end":180093,"line_start":1701,"line_end":1701,"column_start":5,"column_end":8}},{"value":"/ By default this option is not set (unlimited speed) and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":180098,"byte_end":180172,"line_start":1702,"line_end":1702,"column_start":5,"column_end":79}},{"value":"/ `CURLOPT_MAX_SEND_SPEED_LARGE`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":180177,"byte_end":180212,"line_start":1703,"line_end":1703,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":180831,"byte_end":180845,"line_start":1719,"line_end":1719,"column_start":12,"column_end":26},"name":"max_recv_speed","qualname":"<Easy2<H>>::max_recv_speed","value":"fn (&mut self, speed: u64) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Rate limit data download speed","sig":null,"attributes":[{"value":"/ Rate limit data download speed","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":180428,"byte_end":180462,"line_start":1711,"line_end":1711,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":180467,"byte_end":180470,"line_start":1712,"line_end":1712,"column_start":5,"column_end":8}},{"value":"/ If a download exceeds this speed (counted in bytes per second) on","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":180475,"byte_end":180544,"line_start":1713,"line_end":1713,"column_start":5,"column_end":74}},{"value":"/ cumulative average during the transfer, the transfer will pause to keep","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":180549,"byte_end":180624,"line_start":1714,"line_end":1714,"column_start":5,"column_end":80}},{"value":"/ the average rate less than or equal to the parameter value.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":180629,"byte_end":180692,"line_start":1715,"line_end":1715,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":180697,"byte_end":180700,"line_start":1716,"line_end":1716,"column_start":5,"column_end":8}},{"value":"/ By default this option is not set (unlimited speed) and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":180705,"byte_end":180779,"line_start":1717,"line_end":1717,"column_start":5,"column_end":79}},{"value":"/ `CURLOPT_MAX_RECV_SPEED_LARGE`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":180784,"byte_end":180819,"line_start":1718,"line_end":1718,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":181788,"byte_end":181800,"line_start":1740,"line_end":1740,"column_start":12,"column_end":24},"name":"max_connects","qualname":"<Easy2<H>>::max_connects","value":"fn (&mut self, max: u32) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum connection cache size.","sig":null,"attributes":[{"value":"/ Set the maximum connection cache size.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":181035,"byte_end":181077,"line_start":1726,"line_end":1726,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":181082,"byte_end":181085,"line_start":1727,"line_end":1727,"column_start":5,"column_end":8}},{"value":"/ The set amount will be the maximum number of simultaneously open","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":181090,"byte_end":181158,"line_start":1728,"line_end":1728,"column_start":5,"column_end":73}},{"value":"/ persistent connections that libcurl may cache in the pool associated","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":181163,"byte_end":181235,"line_start":1729,"line_end":1729,"column_start":5,"column_end":77}},{"value":"/ with this handle. The default is 5, and there isn't much point in","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":181240,"byte_end":181309,"line_start":1730,"line_end":1730,"column_start":5,"column_end":74}},{"value":"/ changing this value unless you are perfectly aware of how this works and","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":181314,"byte_end":181390,"line_start":1731,"line_end":1731,"column_start":5,"column_end":81}},{"value":"/ changes libcurl's behaviour. This concerns connections using any of the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":181395,"byte_end":181470,"line_start":1732,"line_end":1732,"column_start":5,"column_end":80}},{"value":"/ protocols that support persistent connections.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":181475,"byte_end":181525,"line_start":1733,"line_end":1733,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":181530,"byte_end":181533,"line_start":1734,"line_end":1734,"column_start":5,"column_end":8}},{"value":"/ When reaching the maximum limit, curl closes the oldest one in the cache","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":181538,"byte_end":181614,"line_start":1735,"line_end":1735,"column_start":5,"column_end":81}},{"value":"/ to prevent increasing the number of open connections.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":181619,"byte_end":181676,"line_start":1736,"line_end":1736,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":181681,"byte_end":181684,"line_start":1737,"line_end":1737,"column_start":5,"column_end":8}},{"value":"/ By default this option is set to 5 and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":181689,"byte_end":181746,"line_start":1738,"line_end":1738,"column_start":5,"column_end":62}},{"value":"/ `CURLOPT_MAXCONNECTS`","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":181751,"byte_end":181776,"line_start":1739,"line_end":1739,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":182273,"byte_end":182284,"line_start":1751,"line_end":1751,"column_start":12,"column_end":23},"name":"maxage_conn","qualname":"<Easy2<H>>::maxage_conn","value":"fn (&mut self, max_age: Duration) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum idle time allowed for a connection.","sig":null,"attributes":[{"value":"/ Set the maximum idle time allowed for a connection.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":181927,"byte_end":181982,"line_start":1744,"line_end":1744,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":181987,"byte_end":181990,"line_start":1745,"line_end":1745,"column_start":5,"column_end":8}},{"value":"/ This configuration sets the maximum time that a connection inside of the connection cache","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":181995,"byte_end":182088,"line_start":1746,"line_end":1746,"column_start":5,"column_end":98}},{"value":"/ can be reused. Any connection older than this value will be considered stale and will","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":182093,"byte_end":182182,"line_start":1747,"line_end":1747,"column_start":5,"column_end":94}},{"value":"/ be closed.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":182187,"byte_end":182201,"line_start":1748,"line_end":1748,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":182206,"byte_end":182209,"line_start":1749,"line_end":1749,"column_start":5,"column_end":8}},{"value":"/ By default, a value of 118 seconds is used.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":182214,"byte_end":182261,"line_start":1750,"line_end":1750,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":182853,"byte_end":182866,"line_start":1764,"line_end":1764,"column_start":12,"column_end":25},"name":"fresh_connect","qualname":"<Easy2<H>>::fresh_connect","value":"fn (&mut self, enable: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Force a new connection to be used.","sig":null,"attributes":[{"value":"/ Force a new connection to be used.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":182434,"byte_end":182472,"line_start":1755,"line_end":1755,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":182477,"byte_end":182480,"line_start":1756,"line_end":1756,"column_start":5,"column_end":8}},{"value":"/ Makes the next transfer use a new (fresh) connection by force instead of","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":182485,"byte_end":182561,"line_start":1757,"line_end":1757,"column_start":5,"column_end":81}},{"value":"/ trying to re-use an existing one. This option should be used with","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":182566,"byte_end":182635,"line_start":1758,"line_end":1758,"column_start":5,"column_end":74}},{"value":"/ caution and only if you understand what it does as it may seriously","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":182640,"byte_end":182711,"line_start":1759,"line_end":1759,"column_start":5,"column_end":76}},{"value":"/ impact performance.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":182716,"byte_end":182739,"line_start":1760,"line_end":1760,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":182744,"byte_end":182747,"line_start":1761,"line_end":1761,"column_start":5,"column_end":8}},{"value":"/ By default this option is `false` and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":182752,"byte_end":182808,"line_start":1762,"line_end":1762,"column_start":5,"column_end":61}},{"value":"/ `CURLOPT_FRESH_CONNECT`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":182813,"byte_end":182841,"line_start":1763,"line_end":1763,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":183536,"byte_end":183548,"line_start":1778,"line_end":1778,"column_start":12,"column_end":24},"name":"forbid_reuse","qualname":"<Easy2<H>>::forbid_reuse","value":"fn (&mut self, enable: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Make connection get closed at once after use.","sig":null,"attributes":[{"value":"/ Make connection get closed at once after use.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":183002,"byte_end":183051,"line_start":1768,"line_end":1768,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":183056,"byte_end":183059,"line_start":1769,"line_end":1769,"column_start":5,"column_end":8}},{"value":"/ Makes libcurl explicitly close the connection when done with the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":183064,"byte_end":183132,"line_start":1770,"line_end":1770,"column_start":5,"column_end":73}},{"value":"/ transfer. Normally, libcurl keeps all connections alive when done with","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":183137,"byte_end":183211,"line_start":1771,"line_end":1771,"column_start":5,"column_end":79}},{"value":"/ one transfer in case a succeeding one follows that can re-use them.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":183216,"byte_end":183287,"line_start":1772,"line_end":1772,"column_start":5,"column_end":76}},{"value":"/ This option should be used with caution and only if you understand what","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":183292,"byte_end":183367,"line_start":1773,"line_end":1773,"column_start":5,"column_end":80}},{"value":"/ it does as it can seriously impact performance.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":183372,"byte_end":183423,"line_start":1774,"line_end":1774,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":183428,"byte_end":183431,"line_start":1775,"line_end":1775,"column_start":5,"column_end":8}},{"value":"/ By default this option is `false` and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":183436,"byte_end":183492,"line_start":1776,"line_end":1776,"column_start":5,"column_end":61}},{"value":"/ `CURLOPT_FORBID_REUSE`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":183497,"byte_end":183524,"line_start":1777,"line_end":1777,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":184032,"byte_end":184047,"line_start":1790,"line_end":1790,"column_start":12,"column_end":27},"name":"connect_timeout","qualname":"<Easy2<H>>::connect_timeout","value":"fn (&mut self, timeout: Duration) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Timeout for the connect phase","sig":null,"attributes":[{"value":"/ Timeout for the connect phase","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":183683,"byte_end":183716,"line_start":1782,"line_end":1782,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":183721,"byte_end":183724,"line_start":1783,"line_end":1783,"column_start":5,"column_end":8}},{"value":"/ This is the maximum time that you allow the connection phase to the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":183729,"byte_end":183800,"line_start":1784,"line_end":1784,"column_start":5,"column_end":76}},{"value":"/ server to take. This only limits the connection phase, it has no impact","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":183805,"byte_end":183880,"line_start":1785,"line_end":1785,"column_start":5,"column_end":80}},{"value":"/ once it has connected.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":183885,"byte_end":183911,"line_start":1786,"line_end":1786,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":183916,"byte_end":183919,"line_start":1787,"line_end":1787,"column_start":5,"column_end":8}},{"value":"/ By default this value is 300 seconds and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":183924,"byte_end":183983,"line_start":1788,"line_end":1788,"column_start":5,"column_end":64}},{"value":"/ `CURLOPT_CONNECTTIMEOUT_MS`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":183988,"byte_end":184020,"line_start":1789,"line_end":1789,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":184649,"byte_end":184659,"line_start":1802,"line_end":1802,"column_start":12,"column_end":22},"name":"ip_resolve","qualname":"<Easy2<H>>::ip_resolve","value":"fn (&mut self, resolve: IpResolve) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Specify which IP protocol version to use","sig":null,"attributes":[{"value":"/ Specify which IP protocol version to use","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":184277,"byte_end":184321,"line_start":1795,"line_end":1795,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":184326,"byte_end":184329,"line_start":1796,"line_end":1796,"column_start":5,"column_end":8}},{"value":"/ Allows an application to select what kind of IP addresses to use when","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":184334,"byte_end":184407,"line_start":1797,"line_end":1797,"column_start":5,"column_end":78}},{"value":"/ resolving host names. This is only interesting when using host names","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":184412,"byte_end":184484,"line_start":1798,"line_end":1798,"column_start":5,"column_end":77}},{"value":"/ that resolve addresses using more than one version of IP.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":184489,"byte_end":184550,"line_start":1799,"line_end":1799,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":184555,"byte_end":184558,"line_start":1800,"line_end":1800,"column_start":5,"column_end":8}},{"value":"/ By default this value is \"any\" and corresponds to `CURLOPT_IPRESOLVE`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":184563,"byte_end":184637,"line_start":1801,"line_end":1801,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":185366,"byte_end":185373,"line_start":1824,"line_end":1824,"column_start":12,"column_end":19},"name":"resolve","qualname":"<Easy2<H>>::resolve","value":"fn (&mut self, list: List) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Specify custom host name to IP address resolves.","sig":null,"attributes":[{"value":"/ Specify custom host name to IP address resolves.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":184798,"byte_end":184850,"line_start":1806,"line_end":1806,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":184855,"byte_end":184858,"line_start":1807,"line_end":1807,"column_start":5,"column_end":8}},{"value":"/ Allows specifying hostname to IP mappins to use before trying the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":184863,"byte_end":184932,"line_start":1808,"line_end":1808,"column_start":5,"column_end":74}},{"value":"/ system resolver.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":184937,"byte_end":184957,"line_start":1809,"line_end":1809,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":184962,"byte_end":184965,"line_start":1810,"line_end":1810,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":184970,"byte_end":184984,"line_start":1811,"line_end":1811,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":184989,"byte_end":184992,"line_start":1812,"line_end":1812,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":184997,"byte_end":185010,"line_start":1813,"line_end":1813,"column_start":5,"column_end":18}},{"value":"/ use curl::easy::{Easy, List};","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":185015,"byte_end":185048,"line_start":1814,"line_end":1814,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":185053,"byte_end":185056,"line_start":1815,"line_end":1815,"column_start":5,"column_end":8}},{"value":"/ let mut list = List::new();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":185061,"byte_end":185092,"line_start":1816,"line_end":1816,"column_start":5,"column_end":36}},{"value":"/ list.append(\"www.rust-lang.org:443:185.199.108.153\").unwrap();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":185097,"byte_end":185163,"line_start":1817,"line_end":1817,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":185168,"byte_end":185171,"line_start":1818,"line_end":1818,"column_start":5,"column_end":8}},{"value":"/ let mut handle = Easy::new();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":185176,"byte_end":185209,"line_start":1819,"line_end":1819,"column_start":5,"column_end":38}},{"value":"/ handle.url(\"https://www.rust-lang.org/\").unwrap();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":185214,"byte_end":185268,"line_start":1820,"line_end":1820,"column_start":5,"column_end":59}},{"value":"/ handle.resolve(list).unwrap();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":185273,"byte_end":185307,"line_start":1821,"line_end":1821,"column_start":5,"column_end":39}},{"value":"/ handle.perform().unwrap();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":185312,"byte_end":185342,"line_start":1822,"line_end":1822,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":185347,"byte_end":185354,"line_start":1823,"line_end":1823,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":186010,"byte_end":186022,"line_start":1840,"line_end":1840,"column_start":12,"column_end":24},"name":"connect_only","qualname":"<Easy2<H>>::connect_only","value":"fn (&mut self, enable: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Configure whether to stop when connected to target server","sig":null,"attributes":[{"value":"/ Configure whether to stop when connected to target server","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":185581,"byte_end":185642,"line_start":1830,"line_end":1830,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":185647,"byte_end":185650,"line_start":1831,"line_end":1831,"column_start":5,"column_end":8}},{"value":"/ When enabled it tells the library to perform all the required proxy","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":185655,"byte_end":185726,"line_start":1832,"line_end":1832,"column_start":5,"column_end":76}},{"value":"/ authentication and connection setup, but no data transfer, and then","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":185731,"byte_end":185802,"line_start":1833,"line_end":1833,"column_start":5,"column_end":76}},{"value":"/ return.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":185807,"byte_end":185818,"line_start":1834,"line_end":1834,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":185823,"byte_end":185826,"line_start":1835,"line_end":1835,"column_start":5,"column_end":8}},{"value":"/ The option can be used to simply test a connection to a server.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":185831,"byte_end":185898,"line_start":1836,"line_end":1836,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":185903,"byte_end":185906,"line_start":1837,"line_end":1837,"column_start":5,"column_end":8}},{"value":"/ By default this value is `false` and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":185911,"byte_end":185966,"line_start":1838,"line_end":1838,"column_start":5,"column_end":60}},{"value":"/ `CURLOPT_CONNECT_ONLY`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":185971,"byte_end":185998,"line_start":1839,"line_end":1839,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":189288,"byte_end":189296,"line_start":1917,"line_end":1917,"column_start":12,"column_end":20},"name":"ssl_cert","qualname":"<Easy2<H>>::ssl_cert","value":"fn <P> (&mut self, cert: P) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Sets the SSL client certificate.","sig":null,"attributes":[{"value":"/ Sets the SSL client certificate.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":188483,"byte_end":188519,"line_start":1901,"line_end":1901,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":188524,"byte_end":188527,"line_start":1902,"line_end":1902,"column_start":5,"column_end":8}},{"value":"/ The string should be the file name of your client certificate. The","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":188532,"byte_end":188602,"line_start":1903,"line_end":1903,"column_start":5,"column_end":75}},{"value":"/ default format is \"P12\" on Secure Transport and \"PEM\" on other engines,","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":188607,"byte_end":188682,"line_start":1904,"line_end":1904,"column_start":5,"column_end":80}},{"value":"/ and can be changed with `ssl_cert_type`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":188687,"byte_end":188731,"line_start":1905,"line_end":1905,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":188736,"byte_end":188739,"line_start":1906,"line_end":1906,"column_start":5,"column_end":8}},{"value":"/ With NSS or Secure Transport, this can also be the nickname of the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":188744,"byte_end":188814,"line_start":1907,"line_end":1907,"column_start":5,"column_end":75}},{"value":"/ certificate you wish to authenticate with as it is named in the security","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":188819,"byte_end":188895,"line_start":1908,"line_end":1908,"column_start":5,"column_end":81}},{"value":"/ database. If you want to use a file from the current directory, please","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":188900,"byte_end":188974,"line_start":1909,"line_end":1909,"column_start":5,"column_end":79}},{"value":"/ precede it with \"./\" prefix, in order to avoid confusion with a","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":188979,"byte_end":189046,"line_start":1910,"line_end":1910,"column_start":5,"column_end":72}},{"value":"/ nickname.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":189051,"byte_end":189064,"line_start":1911,"line_end":1911,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":189069,"byte_end":189072,"line_start":1912,"line_end":1912,"column_start":5,"column_end":8}},{"value":"/ When using a client certificate, you most likely also need to provide a","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":189077,"byte_end":189152,"line_start":1913,"line_end":1913,"column_start":5,"column_end":80}},{"value":"/ private key with `ssl_key`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":189157,"byte_end":189188,"line_start":1914,"line_end":1914,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":189193,"byte_end":189196,"line_start":1915,"line_end":1915,"column_start":5,"column_end":8}},{"value":"/ By default this option is not set and corresponds to `CURLOPT_SSLCERT`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":189201,"byte_end":189276,"line_start":1916,"line_end":1916,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":189898,"byte_end":189911,"line_start":1930,"line_end":1930,"column_start":12,"column_end":25},"name":"ssl_cert_type","qualname":"<Easy2<H>>::ssl_cert_type","value":"fn (&mut self, kind: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Specify type of the client SSL certificate.","sig":null,"attributes":[{"value":"/ Specify type of the client SSL certificate.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":189434,"byte_end":189481,"line_start":1921,"line_end":1921,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":189486,"byte_end":189489,"line_start":1922,"line_end":1922,"column_start":5,"column_end":8}},{"value":"/ The string should be the format of your certificate. Supported formats","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":189494,"byte_end":189568,"line_start":1923,"line_end":1923,"column_start":5,"column_end":79}},{"value":"/ are \"PEM\" and \"DER\", except with Secure Transport. OpenSSL (versions","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":189573,"byte_end":189645,"line_start":1924,"line_end":1924,"column_start":5,"column_end":77}},{"value":"/ 0.9.3 and later) and Secure Transport (on iOS 5 or later, or OS X 10.7","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":189650,"byte_end":189724,"line_start":1925,"line_end":1925,"column_start":5,"column_end":79}},{"value":"/ or later) also support \"P12\" for PKCS#12-encoded files.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":189729,"byte_end":189788,"line_start":1926,"line_end":1926,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":189793,"byte_end":189796,"line_start":1927,"line_end":1927,"column_start":5,"column_end":8}},{"value":"/ By default this option is \"PEM\" and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":189801,"byte_end":189855,"line_start":1928,"line_end":1928,"column_start":5,"column_end":59}},{"value":"/ `CURLOPT_SSLCERTTYPE`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":189860,"byte_end":189886,"line_start":1929,"line_end":1929,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":714},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":190620,"byte_end":190627,"line_start":1945,"line_end":1945,"column_start":12,"column_end":19},"name":"ssl_key","qualname":"<Easy2<H>>::ssl_key","value":"fn <P> (&mut self, key: P) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Specify private keyfile for TLS and SSL client cert.","sig":null,"attributes":[{"value":"/ Specify private keyfile for TLS and SSL client cert.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":190071,"byte_end":190127,"line_start":1935,"line_end":1935,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":190132,"byte_end":190135,"line_start":1936,"line_end":1936,"column_start":5,"column_end":8}},{"value":"/ The string should be the file name of your private key. The default","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":190140,"byte_end":190211,"line_start":1937,"line_end":1937,"column_start":5,"column_end":76}},{"value":"/ format is \"PEM\" and can be changed with `ssl_key_type`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":190216,"byte_end":190275,"line_start":1938,"line_end":1938,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":190280,"byte_end":190283,"line_start":1939,"line_end":1939,"column_start":5,"column_end":8}},{"value":"/ (iOS and Mac OS X only) This option is ignored if curl was built against","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":190288,"byte_end":190364,"line_start":1940,"line_end":1940,"column_start":5,"column_end":81}},{"value":"/ Secure Transport. Secure Transport expects the private key to be already","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":190369,"byte_end":190445,"line_start":1941,"line_end":1941,"column_start":5,"column_end":81}},{"value":"/ present in the keychain or PKCS#12 file containing the certificate.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":190450,"byte_end":190521,"line_start":1942,"line_end":1942,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":190526,"byte_end":190529,"line_start":1943,"line_end":1943,"column_start":5,"column_end":8}},{"value":"/ By default this option is not set and corresponds to `CURLOPT_SSLKEY`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":190534,"byte_end":190608,"line_start":1944,"line_end":1944,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":716},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":191352,"byte_end":191364,"line_start":1962,"line_end":1962,"column_start":12,"column_end":24},"name":"ssl_key_type","qualname":"<Easy2<H>>::ssl_key_type","value":"fn (&mut self, kind: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set type of the private key file.","sig":null,"attributes":[{"value":"/ Set type of the private key file.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":190762,"byte_end":190799,"line_start":1949,"line_end":1949,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":190804,"byte_end":190807,"line_start":1950,"line_end":1950,"column_start":5,"column_end":8}},{"value":"/ The string should be the format of your private key. Supported formats","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":190812,"byte_end":190886,"line_start":1951,"line_end":1951,"column_start":5,"column_end":79}},{"value":"/ are \"PEM\", \"DER\" and \"ENG\".","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":190891,"byte_end":190922,"line_start":1952,"line_end":1952,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":190927,"byte_end":190930,"line_start":1953,"line_end":1953,"column_start":5,"column_end":8}},{"value":"/ The format \"ENG\" enables you to load the private key from a crypto","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":190935,"byte_end":191005,"line_start":1954,"line_end":1954,"column_start":5,"column_end":75}},{"value":"/ engine. In this case `ssl_key` is used as an identifier passed to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":191010,"byte_end":191079,"line_start":1955,"line_end":1955,"column_start":5,"column_end":74}},{"value":"/ the engine. You have to set the crypto engine with `ssl_engine`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":191084,"byte_end":191152,"line_start":1956,"line_end":1956,"column_start":5,"column_end":73}},{"value":"/ \"DER\" format key file currently does not work because of a bug in","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":191157,"byte_end":191226,"line_start":1957,"line_end":1957,"column_start":5,"column_end":74}},{"value":"/ OpenSSL.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":191231,"byte_end":191243,"line_start":1958,"line_end":1958,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":191248,"byte_end":191251,"line_start":1959,"line_end":1959,"column_start":5,"column_end":8}},{"value":"/ By default this option is \"PEM\" and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":191256,"byte_end":191310,"line_start":1960,"line_end":1960,"column_start":5,"column_end":59}},{"value":"/ `CURLOPT_SSLKEYTYPE`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":191315,"byte_end":191340,"line_start":1961,"line_end":1961,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":191860,"byte_end":191872,"line_start":1975,"line_end":1975,"column_start":12,"column_end":24},"name":"key_password","qualname":"<Easy2<H>>::key_password","value":"fn (&mut self, password: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set passphrase to private key.","sig":null,"attributes":[{"value":"/ Set passphrase to private key.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":191523,"byte_end":191557,"line_start":1967,"line_end":1967,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":191562,"byte_end":191565,"line_start":1968,"line_end":1968,"column_start":5,"column_end":8}},{"value":"/ This will be used as the password required to use the `ssl_key`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":191570,"byte_end":191638,"line_start":1969,"line_end":1969,"column_start":5,"column_end":73}},{"value":"/ You never needed a pass phrase to load a certificate but you need one to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":191643,"byte_end":191719,"line_start":1970,"line_end":1970,"column_start":5,"column_end":81}},{"value":"/ load your private key.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":191724,"byte_end":191750,"line_start":1971,"line_end":1971,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":191755,"byte_end":191758,"line_start":1972,"line_end":1972,"column_start":5,"column_end":8}},{"value":"/ By default this option is not set and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":191763,"byte_end":191819,"line_start":1973,"line_end":1973,"column_start":5,"column_end":61}},{"value":"/ `CURLOPT_KEYPASSWD`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":191824,"byte_end":191848,"line_start":1974,"line_end":1974,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":192310,"byte_end":192320,"line_start":1987,"line_end":1987,"column_start":12,"column_end":22},"name":"ssl_engine","qualname":"<Easy2<H>>::ssl_engine","value":"fn (&mut self, engine: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set the SSL engine identifier.","sig":null,"attributes":[{"value":"/ Set the SSL engine identifier.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":192046,"byte_end":192080,"line_start":1980,"line_end":1980,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":192085,"byte_end":192088,"line_start":1981,"line_end":1981,"column_start":5,"column_end":8}},{"value":"/ This will be used as the identifier for the crypto engine you want to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":192093,"byte_end":192166,"line_start":1982,"line_end":1982,"column_start":5,"column_end":78}},{"value":"/ use for your private key.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":192171,"byte_end":192200,"line_start":1983,"line_end":1983,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":192205,"byte_end":192208,"line_start":1984,"line_end":1984,"column_start":5,"column_end":8}},{"value":"/ By default this option is not set and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":192213,"byte_end":192269,"line_start":1985,"line_end":1985,"column_start":5,"column_end":61}},{"value":"/ `CURLOPT_SSLENGINE`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":192274,"byte_end":192298,"line_start":1986,"line_end":1986,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":192650,"byte_end":192668,"line_start":1996,"line_end":1996,"column_start":12,"column_end":30},"name":"ssl_engine_default","qualname":"<Easy2<H>>::ssl_engine_default","value":"fn (&mut self, enable: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Make this handle's SSL engine the default.","sig":null,"attributes":[{"value":"/ Make this handle's SSL engine the default.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":192486,"byte_end":192532,"line_start":1992,"line_end":1992,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":192537,"byte_end":192540,"line_start":1993,"line_end":1993,"column_start":5,"column_end":8}},{"value":"/ By default this option is not set and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":192545,"byte_end":192601,"line_start":1994,"line_end":1994,"column_start":5,"column_end":61}},{"value":"/ `CURLOPT_SSLENGINE_DEFAULT`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":192606,"byte_end":192638,"line_start":1995,"line_end":1995,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":193598,"byte_end":193610,"line_start":2017,"line_end":2017,"column_start":12,"column_end":24},"name":"http_version","qualname":"<Easy2<H>>::http_version","value":"fn (&mut self, version: HttpVersion) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set preferred HTTP version.","sig":null,"attributes":[{"value":"/ Set preferred HTTP version.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":193454,"byte_end":193485,"line_start":2013,"line_end":2013,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":193490,"byte_end":193493,"line_start":2014,"line_end":2014,"column_start":5,"column_end":8}},{"value":"/ By default this option is not set and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":193498,"byte_end":193554,"line_start":2015,"line_end":2015,"column_start":5,"column_end":61}},{"value":"/ `CURLOPT_HTTP_VERSION`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":193559,"byte_end":193586,"line_start":2016,"line_end":2016,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":721},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":193899,"byte_end":193910,"line_start":2025,"line_end":2025,"column_start":12,"column_end":23},"name":"ssl_version","qualname":"<Easy2<H>>::ssl_version","value":"fn (&mut self, version: SslVersion) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set preferred TLS/SSL version.","sig":null,"attributes":[{"value":"/ Set preferred TLS/SSL version.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":193754,"byte_end":193788,"line_start":2021,"line_end":2021,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":193793,"byte_end":193796,"line_start":2022,"line_end":2022,"column_start":5,"column_end":8}},{"value":"/ By default this option is not set and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":193801,"byte_end":193857,"line_start":2023,"line_end":2023,"column_start":5,"column_end":61}},{"value":"/ `CURLOPT_SSLVERSION`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":193862,"byte_end":193887,"line_start":2024,"line_end":2024,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":194237,"byte_end":194256,"line_start":2033,"line_end":2033,"column_start":12,"column_end":31},"name":"ssl_min_max_version","qualname":"<Easy2<H>>::ssl_min_max_version","value":"fn (&mut self, min_version: SslVersion, max_version: SslVersion) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set preferred TLS/SSL version with minimum version and maximum version.","sig":null,"attributes":[{"value":"/ Set preferred TLS/SSL version with minimum version and maximum version.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":194051,"byte_end":194126,"line_start":2029,"line_end":2029,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":194131,"byte_end":194134,"line_start":2030,"line_end":2030,"column_start":5,"column_end":8}},{"value":"/ By default this option is not set and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":194139,"byte_end":194195,"line_start":2031,"line_end":2031,"column_start":5,"column_end":61}},{"value":"/ `CURLOPT_SSLVERSION`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":194200,"byte_end":194225,"line_start":2032,"line_end":2032,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":723},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":194834,"byte_end":194849,"line_start":2049,"line_end":2049,"column_start":12,"column_end":27},"name":"ssl_verify_host","qualname":"<Easy2<H>>::ssl_verify_host","value":"fn (&mut self, verify: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Verify the certificate's name against host.","sig":null,"attributes":[{"value":"/ Verify the certificate's name against host.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":194528,"byte_end":194575,"line_start":2042,"line_end":2042,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":194580,"byte_end":194583,"line_start":2043,"line_end":2043,"column_start":5,"column_end":8}},{"value":"/ This should be disabled with great caution! It basically disables the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":194588,"byte_end":194661,"line_start":2044,"line_end":2044,"column_start":5,"column_end":78}},{"value":"/ security features of SSL if it is disabled.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":194666,"byte_end":194713,"line_start":2045,"line_end":2045,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":194718,"byte_end":194721,"line_start":2046,"line_end":2046,"column_start":5,"column_end":8}},{"value":"/ By default this option is set to `true` and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":194726,"byte_end":194788,"line_start":2047,"line_end":2047,"column_start":5,"column_end":67}},{"value":"/ `CURLOPT_SSL_VERIFYHOST`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":194793,"byte_end":194822,"line_start":2048,"line_end":2048,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":195316,"byte_end":195331,"line_start":2061,"line_end":2061,"column_start":12,"column_end":27},"name":"ssl_verify_peer","qualname":"<Easy2<H>>::ssl_verify_peer","value":"fn (&mut self, verify: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Verify the peer's SSL certificate.","sig":null,"attributes":[{"value":"/ Verify the peer's SSL certificate.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":195019,"byte_end":195057,"line_start":2054,"line_end":2054,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":195062,"byte_end":195065,"line_start":2055,"line_end":2055,"column_start":5,"column_end":8}},{"value":"/ This should be disabled with great caution! It basically disables the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":195070,"byte_end":195143,"line_start":2056,"line_end":2056,"column_start":5,"column_end":78}},{"value":"/ security features of SSL if it is disabled.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":195148,"byte_end":195195,"line_start":2057,"line_end":2057,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":195200,"byte_end":195203,"line_start":2058,"line_end":2058,"column_start":5,"column_end":8}},{"value":"/ By default this option is set to `true` and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":195208,"byte_end":195270,"line_start":2059,"line_end":2059,"column_start":5,"column_end":67}},{"value":"/ `CURLOPT_SSL_VERIFYPEER`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":195275,"byte_end":195304,"line_start":2060,"line_end":2060,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":196611,"byte_end":196617,"line_start":2090,"line_end":2090,"column_start":12,"column_end":18},"name":"cainfo","qualname":"<Easy2<H>>::cainfo","value":"fn <P> (&mut self, path: P) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Specify the path to Certificate Authority (CA) bundle","sig":null,"attributes":[{"value":"/ Specify the path to Certificate Authority (CA) bundle","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":196002,"byte_end":196059,"line_start":2077,"line_end":2077,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":196064,"byte_end":196067,"line_start":2078,"line_end":2078,"column_start":5,"column_end":8}},{"value":"/ The file referenced should hold one or more certificates to verify the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":196072,"byte_end":196146,"line_start":2079,"line_end":2079,"column_start":5,"column_end":79}},{"value":"/ peer with.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":196151,"byte_end":196165,"line_start":2080,"line_end":2080,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":196170,"byte_end":196173,"line_start":2081,"line_end":2081,"column_start":5,"column_end":8}},{"value":"/ This option is by default set to the system path where libcurl's cacert","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":196178,"byte_end":196253,"line_start":2082,"line_end":2082,"column_start":5,"column_end":80}},{"value":"/ bundle is assumed to be stored, as established at build time.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":196258,"byte_end":196323,"line_start":2083,"line_end":2083,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":196328,"byte_end":196331,"line_start":2084,"line_end":2084,"column_start":5,"column_end":8}},{"value":"/ If curl is built against the NSS SSL library, the NSS PEM PKCS#11 module","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":196336,"byte_end":196412,"line_start":2085,"line_end":2085,"column_start":5,"column_end":81}},{"value":"/ (libnsspem.so) needs to be available for this option to work properly.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":196417,"byte_end":196491,"line_start":2086,"line_end":2086,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":196496,"byte_end":196499,"line_start":2087,"line_end":2087,"column_start":5,"column_end":8}},{"value":"/ By default this option is the system defaults, and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":196504,"byte_end":196573,"line_start":2088,"line_end":2088,"column_start":5,"column_end":74}},{"value":"/ `CURLOPT_CAINFO`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":196578,"byte_end":196599,"line_start":2089,"line_end":2089,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":197529,"byte_end":197540,"line_start":2109,"line_end":2109,"column_start":12,"column_end":23},"name":"issuer_cert","qualname":"<Easy2<H>>::issuer_cert","value":"fn <P> (&mut self, path: P) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set the issuer SSL certificate filename","sig":null,"attributes":[{"value":"/ Set the issuer SSL certificate filename","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":196754,"byte_end":196797,"line_start":2094,"line_end":2094,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":196802,"byte_end":196805,"line_start":2095,"line_end":2095,"column_start":5,"column_end":8}},{"value":"/ Specifies a file holding a CA certificate in PEM format. If the option","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":196810,"byte_end":196884,"line_start":2096,"line_end":2096,"column_start":5,"column_end":79}},{"value":"/ is set, an additional check against the peer certificate is performed to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":196889,"byte_end":196965,"line_start":2097,"line_end":2097,"column_start":5,"column_end":81}},{"value":"/ verify the issuer is indeed the one associated with the certificate","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":196970,"byte_end":197041,"line_start":2098,"line_end":2098,"column_start":5,"column_end":76}},{"value":"/ provided by the option. This additional check is useful in multi-level","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":197046,"byte_end":197120,"line_start":2099,"line_end":2099,"column_start":5,"column_end":79}},{"value":"/ PKI where one needs to enforce that the peer certificate is from a","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":197125,"byte_end":197195,"line_start":2100,"line_end":2100,"column_start":5,"column_end":75}},{"value":"/ specific branch of the tree.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":197200,"byte_end":197232,"line_start":2101,"line_end":2101,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":197237,"byte_end":197240,"line_start":2102,"line_end":2102,"column_start":5,"column_end":8}},{"value":"/ This option makes sense only when used in combination with the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":197245,"byte_end":197311,"line_start":2103,"line_end":2103,"column_start":5,"column_end":71}},{"value":"/ `ssl_verify_peer` option. Otherwise, the result of the check is not","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":197316,"byte_end":197387,"line_start":2104,"line_end":2104,"column_start":5,"column_end":76}},{"value":"/ considered as failure.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":197392,"byte_end":197418,"line_start":2105,"line_end":2105,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":197423,"byte_end":197426,"line_start":2106,"line_end":2106,"column_start":5,"column_end":8}},{"value":"/ By default this option is not set and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":197431,"byte_end":197487,"line_start":2107,"line_end":2107,"column_start":5,"column_end":61}},{"value":"/ `CURLOPT_ISSUERCERT`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":197492,"byte_end":197517,"line_start":2108,"line_end":2108,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":729},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":198139,"byte_end":198145,"line_start":2121,"line_end":2121,"column_start":12,"column_end":18},"name":"capath","qualname":"<Easy2<H>>::capath","value":"fn <P> (&mut self, path: P) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Specify directory holding CA certificates","sig":null,"attributes":[{"value":"/ Specify directory holding CA certificates","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":197681,"byte_end":197726,"line_start":2113,"line_end":2113,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":197731,"byte_end":197734,"line_start":2114,"line_end":2114,"column_start":5,"column_end":8}},{"value":"/ Names a directory holding multiple CA certificates to verify the peer","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":197739,"byte_end":197812,"line_start":2115,"line_end":2115,"column_start":5,"column_end":78}},{"value":"/ with. If libcurl is built against OpenSSL, the certificate directory","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":197817,"byte_end":197889,"line_start":2116,"line_end":2116,"column_start":5,"column_end":77}},{"value":"/ must be prepared using the openssl c_rehash utility. This makes sense","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":197894,"byte_end":197967,"line_start":2117,"line_end":2117,"column_start":5,"column_end":78}},{"value":"/ only when used in combination with the `ssl_verify_peer` option.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":197972,"byte_end":198040,"line_start":2118,"line_end":2118,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":198045,"byte_end":198048,"line_start":2119,"line_end":2119,"column_start":5,"column_end":8}},{"value":"/ By default this option is not set and corresponds to `CURLOPT_CAPATH`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":198053,"byte_end":198127,"line_start":2120,"line_end":2120,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":731},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":199408,"byte_end":199415,"line_start":2146,"line_end":2146,"column_start":12,"column_end":19},"name":"crlfile","qualname":"<Easy2<H>>::crlfile","value":"fn <P> (&mut self, path: P) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Specify a Certificate Revocation List file","sig":null,"attributes":[{"value":"/ Specify a Certificate Revocation List file","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":198282,"byte_end":198328,"line_start":2125,"line_end":2125,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":198333,"byte_end":198336,"line_start":2126,"line_end":2126,"column_start":5,"column_end":8}},{"value":"/ Names a file with the concatenation of CRL (in PEM format) to use in the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":198341,"byte_end":198417,"line_start":2127,"line_end":2127,"column_start":5,"column_end":81}},{"value":"/ certificate validation that occurs during the SSL exchange.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":198422,"byte_end":198485,"line_start":2128,"line_end":2128,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":198490,"byte_end":198493,"line_start":2129,"line_end":2129,"column_start":5,"column_end":8}},{"value":"/ When curl is built to use NSS or GnuTLS, there is no way to influence","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":198498,"byte_end":198571,"line_start":2130,"line_end":2130,"column_start":5,"column_end":78}},{"value":"/ the use of CRL passed to help in the verification process. When libcurl","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":198576,"byte_end":198651,"line_start":2131,"line_end":2131,"column_start":5,"column_end":80}},{"value":"/ is built with OpenSSL support, X509_V_FLAG_CRL_CHECK and","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":198656,"byte_end":198716,"line_start":2132,"line_end":2132,"column_start":5,"column_end":65}},{"value":"/ X509_V_FLAG_CRL_CHECK_ALL are both set, requiring CRL check against all","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":198721,"byte_end":198796,"line_start":2133,"line_end":2133,"column_start":5,"column_end":80}},{"value":"/ the elements of the certificate chain if a CRL file is passed.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":198801,"byte_end":198867,"line_start":2134,"line_end":2134,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":198872,"byte_end":198875,"line_start":2135,"line_end":2135,"column_start":5,"column_end":8}},{"value":"/ This option makes sense only when used in combination with the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":198880,"byte_end":198946,"line_start":2136,"line_end":2136,"column_start":5,"column_end":71}},{"value":"/ `ssl_verify_peer` option.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":198951,"byte_end":198980,"line_start":2137,"line_end":2137,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":198985,"byte_end":198988,"line_start":2138,"line_end":2138,"column_start":5,"column_end":8}},{"value":"/ A specific error code (`is_ssl_crl_badfile`) is defined with the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":198993,"byte_end":199061,"line_start":2139,"line_end":2139,"column_start":5,"column_end":73}},{"value":"/ option. It is returned when the SSL exchange fails because the CRL file","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":199066,"byte_end":199141,"line_start":2140,"line_end":2140,"column_start":5,"column_end":80}},{"value":"/ cannot be loaded. A failure in certificate verification due to a","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":199146,"byte_end":199214,"line_start":2141,"line_end":2141,"column_start":5,"column_end":73}},{"value":"/ revocation information found in the CRL does not trigger this specific","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":199219,"byte_end":199293,"line_start":2142,"line_end":2142,"column_start":5,"column_end":79}},{"value":"/ error.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":199298,"byte_end":199308,"line_start":2143,"line_end":2143,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":199313,"byte_end":199316,"line_start":2144,"line_end":2144,"column_start":5,"column_end":8}},{"value":"/ By default this option is not set and corresponds to `CURLOPT_CRLFILE`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":199321,"byte_end":199396,"line_start":2145,"line_end":2145,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":733},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":199928,"byte_end":199936,"line_start":2158,"line_end":2158,"column_start":12,"column_end":20},"name":"certinfo","qualname":"<Easy2<H>>::certinfo","value":"fn (&mut self, enable: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Request SSL certificate information","sig":null,"attributes":[{"value":"/ Request SSL certificate information","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":199553,"byte_end":199592,"line_start":2150,"line_end":2150,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":199597,"byte_end":199600,"line_start":2151,"line_end":2151,"column_start":5,"column_end":8}},{"value":"/ Enable libcurl's certificate chain info gatherer. With this enabled,","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":199605,"byte_end":199677,"line_start":2152,"line_end":2152,"column_start":5,"column_end":77}},{"value":"/ libcurl will extract lots of information and data about the certificates","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":199682,"byte_end":199758,"line_start":2153,"line_end":2153,"column_start":5,"column_end":81}},{"value":"/ in the certificate chain used in the SSL connection.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":199763,"byte_end":199819,"line_start":2154,"line_end":2154,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":199824,"byte_end":199827,"line_start":2155,"line_end":2155,"column_start":5,"column_end":8}},{"value":"/ By default this option is `false` and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":199832,"byte_end":199888,"line_start":2156,"line_end":2156,"column_start":5,"column_end":61}},{"value":"/ `CURLOPT_CERTINFO`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":199893,"byte_end":199916,"line_start":2157,"line_end":2157,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":201297,"byte_end":201308,"line_start":2187,"line_end":2187,"column_start":12,"column_end":23},"name":"random_file","qualname":"<Easy2<H>>::random_file","value":"fn <P> (&mut self, p: P) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Specify a source for random data","sig":null,"attributes":[{"value":"/ Specify a source for random data","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":201046,"byte_end":201082,"line_start":2180,"line_end":2180,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":201087,"byte_end":201090,"line_start":2181,"line_end":2181,"column_start":5,"column_end":8}},{"value":"/ The file will be used to read from to seed the random engine for SSL and","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":201095,"byte_end":201171,"line_start":2182,"line_end":2182,"column_start":5,"column_end":81}},{"value":"/ more.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":201176,"byte_end":201185,"line_start":2183,"line_end":2183,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":201190,"byte_end":201193,"line_start":2184,"line_end":2184,"column_start":5,"column_end":8}},{"value":"/ By default this option is not set and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":201198,"byte_end":201254,"line_start":2185,"line_end":2185,"column_start":5,"column_end":61}},{"value":"/ `CURLOPT_RANDOM_FILE`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":201259,"byte_end":201285,"line_start":2186,"line_end":2186,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":201721,"byte_end":201731,"line_start":2198,"line_end":2198,"column_start":12,"column_end":22},"name":"egd_socket","qualname":"<Easy2<H>>::egd_socket","value":"fn <P> (&mut self, p: P) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Specify EGD socket path.","sig":null,"attributes":[{"value":"/ Specify EGD socket path.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":201444,"byte_end":201472,"line_start":2191,"line_end":2191,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":201477,"byte_end":201480,"line_start":2192,"line_end":2192,"column_start":5,"column_end":8}},{"value":"/ Indicates the path name to the Entropy Gathering Daemon socket. It will","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":201485,"byte_end":201560,"line_start":2193,"line_end":2193,"column_start":5,"column_end":80}},{"value":"/ be used to seed the random engine for SSL.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":201565,"byte_end":201611,"line_start":2194,"line_end":2194,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":201616,"byte_end":201619,"line_start":2195,"line_end":2195,"column_start":5,"column_end":8}},{"value":"/ By default this option is not set and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":201624,"byte_end":201680,"line_start":2196,"line_end":2196,"column_start":5,"column_end":61}},{"value":"/ `CURLOPT_EGDSOCKET`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":201685,"byte_end":201709,"line_start":2197,"line_end":2197,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":738},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":203115,"byte_end":203130,"line_start":2228,"line_end":2228,"column_start":12,"column_end":27},"name":"ssl_cipher_list","qualname":"<Easy2<H>>::ssl_cipher_list","value":"fn (&mut self, ciphers: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Specify ciphers to use for TLS.","sig":null,"attributes":[{"value":"/ Specify ciphers to use for TLS.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":201865,"byte_end":201900,"line_start":2202,"line_end":2202,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":201905,"byte_end":201908,"line_start":2203,"line_end":2203,"column_start":5,"column_end":8}},{"value":"/ Holds the list of ciphers to use for the SSL connection. The list must","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":201913,"byte_end":201987,"line_start":2204,"line_end":2204,"column_start":5,"column_end":79}},{"value":"/ be syntactically correct, it consists of one or more cipher strings","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":201992,"byte_end":202063,"line_start":2205,"line_end":2205,"column_start":5,"column_end":76}},{"value":"/ separated by colons. Commas or spaces are also acceptable separators","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":202068,"byte_end":202140,"line_start":2206,"line_end":2206,"column_start":5,"column_end":77}},{"value":"/ but colons are normally used, !, - and + can be used as operators.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":202145,"byte_end":202215,"line_start":2207,"line_end":2207,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":202220,"byte_end":202223,"line_start":2208,"line_end":2208,"column_start":5,"column_end":8}},{"value":"/ For OpenSSL and GnuTLS valid examples of cipher lists include 'RC4-SHA',","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":202228,"byte_end":202304,"line_start":2209,"line_end":2209,"column_start":5,"column_end":81}},{"value":"/ ´SHA1+DES´, 'TLSv1' and 'DEFAULT'. The default list is normally set when","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":202309,"byte_end":202387,"line_start":2210,"line_end":2210,"column_start":5,"column_end":81}},{"value":"/ you compile OpenSSL.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":202392,"byte_end":202416,"line_start":2211,"line_end":2211,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":202421,"byte_end":202424,"line_start":2212,"line_end":2212,"column_start":5,"column_end":8}},{"value":"/ You'll find more details about cipher lists on this URL:","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":202429,"byte_end":202489,"line_start":2213,"line_end":2213,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":202494,"byte_end":202497,"line_start":2214,"line_end":2214,"column_start":5,"column_end":8}},{"value":"/ https://www.openssl.org/docs/apps/ciphers.html","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":202502,"byte_end":202552,"line_start":2215,"line_end":2215,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":202557,"byte_end":202560,"line_start":2216,"line_end":2216,"column_start":5,"column_end":8}},{"value":"/ For NSS, valid examples of cipher lists include 'rsa_rc4_128_md5',","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":202565,"byte_end":202635,"line_start":2217,"line_end":2217,"column_start":5,"column_end":75}},{"value":"/ ´rsa_aes_128_sha´, etc. With NSS you don't add/remove ciphers. If one","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":202640,"byte_end":202715,"line_start":2218,"line_end":2218,"column_start":5,"column_end":78}},{"value":"/ uses this option then all known ciphers are disabled and only those","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":202720,"byte_end":202791,"line_start":2219,"line_end":2219,"column_start":5,"column_end":76}},{"value":"/ passed in are enabled.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":202796,"byte_end":202822,"line_start":2220,"line_end":2220,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":202827,"byte_end":202830,"line_start":2221,"line_end":2221,"column_start":5,"column_end":8}},{"value":"/ You'll find more details about the NSS cipher lists on this URL:","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":202835,"byte_end":202903,"line_start":2222,"line_end":2222,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":202908,"byte_end":202911,"line_start":2223,"line_end":2223,"column_start":5,"column_end":8}},{"value":"/ http://git.fedorahosted.org/cgit/mod_nss.git/plain/docs/mod_nss.html#Directives","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":202916,"byte_end":202999,"line_start":2224,"line_end":2224,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":203004,"byte_end":203007,"line_start":2225,"line_end":2225,"column_start":5,"column_end":8}},{"value":"/ By default this option is not set and corresponds to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":203012,"byte_end":203068,"line_start":2226,"line_end":2226,"column_start":5,"column_end":61}},{"value":"/ `CURLOPT_SSL_CIPHER_LIST`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":203073,"byte_end":203103,"line_start":2227,"line_end":2227,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":739},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":203758,"byte_end":203777,"line_start":2241,"line_end":2241,"column_start":12,"column_end":31},"name":"ssl_sessionid_cache","qualname":"<Easy2<H>>::ssl_sessionid_cache","value":"fn (&mut self, enable: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Enable or disable use of the SSL session-ID cache","sig":null,"attributes":[{"value":"/ Enable or disable use of the SSL session-ID cache","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":203306,"byte_end":203359,"line_start":2233,"line_end":2233,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":203364,"byte_end":203367,"line_start":2234,"line_end":2234,"column_start":5,"column_end":8}},{"value":"/ By default all transfers are done using the cache enabled. While nothing","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":203372,"byte_end":203448,"line_start":2235,"line_end":2235,"column_start":5,"column_end":81}},{"value":"/ ever should get hurt by attempting to reuse SSL session-IDs, there seem","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":203453,"byte_end":203528,"line_start":2236,"line_end":2236,"column_start":5,"column_end":80}},{"value":"/ to be or have been broken SSL implementations in the wild that may","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":203533,"byte_end":203603,"line_start":2237,"line_end":2237,"column_start":5,"column_end":75}},{"value":"/ require you to disable this in order for you to succeed.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":203608,"byte_end":203668,"line_start":2238,"line_end":2238,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":203673,"byte_end":203676,"line_start":2239,"line_end":2239,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the `CURLOPT_SSL_SESSIONID_CACHE` option.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":203681,"byte_end":203746,"line_start":2240,"line_end":2240,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":740},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":204090,"byte_end":204101,"line_start":2250,"line_end":2250,"column_start":12,"column_end":23},"name":"ssl_options","qualname":"<Easy2<H>>::ssl_options","value":"fn (&mut self, bits: &SslOpt) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set SSL behavior options","sig":null,"attributes":[{"value":"/ Set SSL behavior options","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":203919,"byte_end":203947,"line_start":2245,"line_end":2245,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":203952,"byte_end":203955,"line_start":2246,"line_end":2246,"column_start":5,"column_end":8}},{"value":"/ Inform libcurl about SSL specific behaviors.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":203960,"byte_end":204008,"line_start":2247,"line_end":2247,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":204013,"byte_end":204016,"line_start":2248,"line_end":2248,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the `CURLOPT_SSL_OPTIONS` option.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":204021,"byte_end":204078,"line_start":2249,"line_end":2249,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":741},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":205681,"byte_end":205701,"line_start":2288,"line_end":2288,"column_start":12,"column_end":32},"name":"time_condition_unmet","qualname":"<Easy2<H>>::time_condition_unmet","value":"fn (&mut self) -> Result<bool, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get info on unmet time conditional","sig":null,"attributes":[{"value":"/ Get info on unmet time conditional","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":205417,"byte_end":205455,"line_start":2282,"line_end":2282,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":205460,"byte_end":205463,"line_start":2283,"line_end":2283,"column_start":5,"column_end":8}},{"value":"/ Returns if the condition provided in the previous request didn't match","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":205468,"byte_end":205542,"line_start":2284,"line_end":2284,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":205547,"byte_end":205550,"line_start":2285,"line_end":2285,"column_start":5,"column_end":8}},{"value":"/ option is not supported","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":205642,"byte_end":205669,"line_start":2287,"line_end":2287,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":743},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":206373,"byte_end":206386,"line_start":2309,"line_end":2309,"column_start":12,"column_end":25},"name":"effective_url","qualname":"<Easy2<H>>::effective_url","value":"fn (&mut self) -> Result<Option<&str>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get the last used URL","sig":null,"attributes":[{"value":"/ Get the last used URL","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":205980,"byte_end":206005,"line_start":2300,"line_end":2300,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":206010,"byte_end":206013,"line_start":2301,"line_end":2301,"column_start":5,"column_end":8}},{"value":"/ In cases when you've asked libcurl to follow redirects, it may","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":206018,"byte_end":206084,"line_start":2302,"line_end":2302,"column_start":5,"column_end":71}},{"value":"/ not be the same value you set with `url`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":206089,"byte_end":206134,"line_start":2303,"line_end":2303,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":206139,"byte_end":206142,"line_start":2304,"line_end":2304,"column_start":5,"column_end":8}},{"value":"/ This methods corresponds to the `CURLINFO_EFFECTIVE_URL` option.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":206147,"byte_end":206215,"line_start":2305,"line_end":2305,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":206220,"byte_end":206223,"line_start":2306,"line_end":2306,"column_start":5,"column_end":8}},{"value":"/ Returns `Ok(None)` if no effective url is listed or `Err` if an error","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":206228,"byte_end":206301,"line_start":2307,"line_end":2307,"column_start":5,"column_end":78}},{"value":"/ happens or the underlying bytes aren't valid utf-8.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":206306,"byte_end":206361,"line_start":2308,"line_end":2308,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":206903,"byte_end":206922,"line_start":2322,"line_end":2322,"column_start":12,"column_end":31},"name":"effective_url_bytes","qualname":"<Easy2<H>>::effective_url_bytes","value":"fn (&mut self) -> Result<Option<&[u8]>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get the last used URL, in bytes","sig":null,"attributes":[{"value":"/ Get the last used URL, in bytes","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":206500,"byte_end":206535,"line_start":2313,"line_end":2313,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":206540,"byte_end":206543,"line_start":2314,"line_end":2314,"column_start":5,"column_end":8}},{"value":"/ In cases when you've asked libcurl to follow redirects, it may","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":206548,"byte_end":206614,"line_start":2315,"line_end":2315,"column_start":5,"column_end":71}},{"value":"/ not be the same value you set with `url`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":206619,"byte_end":206664,"line_start":2316,"line_end":2316,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":206669,"byte_end":206672,"line_start":2317,"line_end":2317,"column_start":5,"column_end":8}},{"value":"/ This methods corresponds to the `CURLINFO_EFFECTIVE_URL` option.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":206677,"byte_end":206745,"line_start":2318,"line_end":2318,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":206750,"byte_end":206753,"line_start":2319,"line_end":2319,"column_start":5,"column_end":8}},{"value":"/ Returns `Ok(None)` if no effective url is listed or `Err` if an error","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":206758,"byte_end":206831,"line_start":2320,"line_end":2320,"column_start":5,"column_end":78}},{"value":"/ happens or the underlying bytes aren't valid utf-8.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":206836,"byte_end":206891,"line_start":2321,"line_end":2321,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":207397,"byte_end":207410,"line_start":2334,"line_end":2334,"column_start":12,"column_end":25},"name":"response_code","qualname":"<Easy2<H>>::response_code","value":"fn (&mut self) -> Result<u32, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get the last response code","sig":null,"attributes":[{"value":"/ Get the last response code","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":207039,"byte_end":207069,"line_start":2326,"line_end":2326,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":207074,"byte_end":207077,"line_start":2327,"line_end":2327,"column_start":5,"column_end":8}},{"value":"/ The stored value will be zero if no server response code has been","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":207082,"byte_end":207151,"line_start":2328,"line_end":2328,"column_start":5,"column_end":74}},{"value":"/ received. Note that a proxy's CONNECT response should be read with","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":207156,"byte_end":207226,"line_start":2329,"line_end":2329,"column_start":5,"column_end":75}},{"value":"/ `http_connectcode` and not this.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":207231,"byte_end":207267,"line_start":2330,"line_end":2330,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":207272,"byte_end":207275,"line_start":2331,"line_end":2331,"column_start":5,"column_end":8}},{"value":"/ Corresponds to `CURLINFO_RESPONSE_CODE` and returns an error if this","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":207280,"byte_end":207352,"line_start":2332,"line_end":2332,"column_start":5,"column_end":77}},{"value":"/ option is not supported.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":207357,"byte_end":207385,"line_start":2333,"line_end":2333,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":747},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":207882,"byte_end":207898,"line_start":2346,"line_end":2346,"column_start":12,"column_end":28},"name":"http_connectcode","qualname":"<Easy2<H>>::http_connectcode","value":"fn (&mut self) -> Result<u32, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get the CONNECT response code","sig":null,"attributes":[{"value":"/ Get the CONNECT response code","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":207547,"byte_end":207580,"line_start":2339,"line_end":2339,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":207585,"byte_end":207588,"line_start":2340,"line_end":2340,"column_start":5,"column_end":8}},{"value":"/ Returns the last received HTTP proxy response code to a CONNECT request.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":207593,"byte_end":207669,"line_start":2341,"line_end":2341,"column_start":5,"column_end":81}},{"value":"/ The returned value will be zero if no such response code was available.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":207674,"byte_end":207749,"line_start":2342,"line_end":2342,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":207754,"byte_end":207757,"line_start":2343,"line_end":2343,"column_start":5,"column_end":8}},{"value":"/ Corresponds to `CURLINFO_HTTP_CONNECTCODE` and returns an error if this","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":207762,"byte_end":207837,"line_start":2344,"line_end":2344,"column_start":5,"column_end":80}},{"value":"/ option is not supported.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":207842,"byte_end":207870,"line_start":2345,"line_end":2345,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":749},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":208800,"byte_end":208808,"line_start":2365,"line_end":2365,"column_start":12,"column_end":20},"name":"filetime","qualname":"<Easy2<H>>::filetime","value":"fn (&mut self) -> Result<Option<i64>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get the remote time of the retrieved document","sig":null,"attributes":[{"value":"/ Get the remote time of the retrieved document","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":208038,"byte_end":208087,"line_start":2351,"line_end":2351,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":208092,"byte_end":208095,"line_start":2352,"line_end":2352,"column_start":5,"column_end":8}},{"value":"/ Returns the remote time of the retrieved document (in number of seconds","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":208100,"byte_end":208175,"line_start":2353,"line_end":2353,"column_start":5,"column_end":80}},{"value":"/ since 1 Jan 1970 in the GMT/UTC time zone). If you get `None`, it can be","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":208180,"byte_end":208256,"line_start":2354,"line_end":2354,"column_start":5,"column_end":81}},{"value":"/ because of many reasons (it might be unknown, the server might hide it","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":208261,"byte_end":208335,"line_start":2355,"line_end":2355,"column_start":5,"column_end":79}},{"value":"/ or the server doesn't support the command that tells document time etc)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":208340,"byte_end":208415,"line_start":2356,"line_end":2356,"column_start":5,"column_end":80}},{"value":"/ and the time of the document is unknown.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":208420,"byte_end":208464,"line_start":2357,"line_end":2357,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":208469,"byte_end":208472,"line_start":2358,"line_end":2358,"column_start":5,"column_end":8}},{"value":"/ Note that you must tell the server to collect this information before","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":208477,"byte_end":208550,"line_start":2359,"line_end":2359,"column_start":5,"column_end":78}},{"value":"/ the transfer is made, by using the `filetime` method to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":208555,"byte_end":208614,"line_start":2360,"line_end":2360,"column_start":5,"column_end":64}},{"value":"/ or you will unconditionally get a `None` back.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":208619,"byte_end":208669,"line_start":2361,"line_end":2361,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":208674,"byte_end":208677,"line_start":2362,"line_end":2362,"column_start":5,"column_end":8}},{"value":"/ This corresponds to `CURLINFO_FILETIME` and may return an error if the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":208682,"byte_end":208756,"line_start":2363,"line_end":2363,"column_start":5,"column_end":79}},{"value":"/ option is not supported","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":208761,"byte_end":208788,"line_start":2364,"line_end":2364,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":209555,"byte_end":209568,"line_start":2384,"line_end":2384,"column_start":12,"column_end":25},"name":"download_size","qualname":"<Easy2<H>>::download_size","value":"fn (&mut self) -> Result<f64, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get the number of downloaded bytes","sig":null,"attributes":[{"value":"/ Get the number of downloaded bytes","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":209050,"byte_end":209088,"line_start":2375,"line_end":2375,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":209093,"byte_end":209096,"line_start":2376,"line_end":2376,"column_start":5,"column_end":8}},{"value":"/ Returns the total amount of bytes that were downloaded.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":209101,"byte_end":209160,"line_start":2377,"line_end":2377,"column_start":5,"column_end":64}},{"value":"/ The amount is only for the latest transfer and will be reset again for each new transfer.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":209165,"byte_end":209258,"line_start":2378,"line_end":2378,"column_start":5,"column_end":98}},{"value":"/ This counts actual payload data, what's also commonly called body.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":209263,"byte_end":209333,"line_start":2379,"line_end":2379,"column_start":5,"column_end":75}},{"value":"/ All meta and header data are excluded and will not be counted in this number.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":209338,"byte_end":209419,"line_start":2380,"line_end":2380,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":209424,"byte_end":209427,"line_start":2381,"line_end":2381,"column_start":5,"column_end":8}},{"value":"/ This corresponds to `CURLINFO_SIZE_DOWNLOAD` and may return an error if the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":209432,"byte_end":209511,"line_start":2382,"line_end":2382,"column_start":5,"column_end":84}},{"value":"/ option is not supported","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":209516,"byte_end":209543,"line_start":2383,"line_end":2383,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":210017,"byte_end":210040,"line_start":2396,"line_end":2396,"column_start":12,"column_end":35},"name":"content_length_download","qualname":"<Easy2<H>>::content_length_download","value":"fn (&mut self) -> Result<f64, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get the content-length of the download","sig":null,"attributes":[{"value":"/ Get the content-length of the download","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":209707,"byte_end":209749,"line_start":2389,"line_end":2389,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":209754,"byte_end":209757,"line_start":2390,"line_end":2390,"column_start":5,"column_end":8}},{"value":"/ Returns the content-length of the download.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":209762,"byte_end":209809,"line_start":2391,"line_end":2391,"column_start":5,"column_end":52}},{"value":"/ This is the value read from the Content-Length: field","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":209814,"byte_end":209871,"line_start":2392,"line_end":2392,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":209876,"byte_end":209879,"line_start":2393,"line_end":2393,"column_start":5,"column_end":8}},{"value":"/ This corresponds to `CURLINFO_CONTENT_LENGTH_DOWNLOAD` and may return an error if the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":209884,"byte_end":209973,"line_start":2394,"line_end":2394,"column_start":5,"column_end":94}},{"value":"/ option is not supported","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":209978,"byte_end":210005,"line_start":2395,"line_end":2395,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":755},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":210473,"byte_end":210483,"line_start":2408,"line_end":2408,"column_start":12,"column_end":22},"name":"total_time","qualname":"<Easy2<H>>::total_time","value":"fn (&mut self) -> Result<Duration, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get total time of previous transfer","sig":null,"attributes":[{"value":"/ Get total time of previous transfer","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":210189,"byte_end":210228,"line_start":2401,"line_end":2401,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":210233,"byte_end":210236,"line_start":2402,"line_end":2402,"column_start":5,"column_end":8}},{"value":"/ Returns the total time for the previous transfer,","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":210241,"byte_end":210294,"line_start":2403,"line_end":2403,"column_start":5,"column_end":58}},{"value":"/ including name resolving, TCP connect etc.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":210299,"byte_end":210345,"line_start":2404,"line_end":2404,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":210350,"byte_end":210353,"line_start":2405,"line_end":2405,"column_start":5,"column_end":8}},{"value":"/ Corresponds to `CURLINFO_TOTAL_TIME` and may return an error if the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":210358,"byte_end":210429,"line_start":2406,"line_end":2406,"column_start":5,"column_end":76}},{"value":"/ option isn't supported.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":210434,"byte_end":210461,"line_start":2407,"line_end":2407,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":756},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":210901,"byte_end":210916,"line_start":2420,"line_end":2420,"column_start":12,"column_end":27},"name":"namelookup_time","qualname":"<Easy2<H>>::namelookup_time","value":"fn (&mut self) -> Result<Duration, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get the name lookup time","sig":null,"attributes":[{"value":"/ Get the name lookup time","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":210638,"byte_end":210666,"line_start":2413,"line_end":2413,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":210671,"byte_end":210674,"line_start":2414,"line_end":2414,"column_start":5,"column_end":8}},{"value":"/ Returns the total time from the start","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":210679,"byte_end":210720,"line_start":2415,"line_end":2415,"column_start":5,"column_end":46}},{"value":"/ until the name resolving was completed.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":210725,"byte_end":210768,"line_start":2416,"line_end":2416,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":210773,"byte_end":210776,"line_start":2417,"line_end":2417,"column_start":5,"column_end":8}},{"value":"/ Corresponds to `CURLINFO_NAMELOOKUP_TIME` and may return an error if the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":210781,"byte_end":210857,"line_start":2418,"line_end":2418,"column_start":5,"column_end":81}},{"value":"/ option isn't supported.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":210862,"byte_end":210889,"line_start":2419,"line_end":2419,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":757},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":211364,"byte_end":211376,"line_start":2432,"line_end":2432,"column_start":12,"column_end":24},"name":"connect_time","qualname":"<Easy2<H>>::connect_time","value":"fn (&mut self) -> Result<Duration, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get the time until connect","sig":null,"attributes":[{"value":"/ Get the time until connect","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":211076,"byte_end":211106,"line_start":2425,"line_end":2425,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":211111,"byte_end":211114,"line_start":2426,"line_end":2426,"column_start":5,"column_end":8}},{"value":"/ Returns the total time from the start","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":211119,"byte_end":211160,"line_start":2427,"line_end":2427,"column_start":5,"column_end":46}},{"value":"/ until the connection to the remote host (or proxy) was completed.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":211165,"byte_end":211234,"line_start":2428,"line_end":2428,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":211239,"byte_end":211242,"line_start":2429,"line_end":2429,"column_start":5,"column_end":8}},{"value":"/ Corresponds to `CURLINFO_CONNECT_TIME` and may return an error if the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":211247,"byte_end":211320,"line_start":2430,"line_end":2430,"column_start":5,"column_end":78}},{"value":"/ option isn't supported.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":211325,"byte_end":211352,"line_start":2431,"line_end":2431,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":758},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":212084,"byte_end":212099,"line_start":2447,"line_end":2447,"column_start":12,"column_end":27},"name":"appconnect_time","qualname":"<Easy2<H>>::appconnect_time","value":"fn (&mut self) -> Result<Duration, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get the time until the SSL/SSH handshake is completed","sig":null,"attributes":[{"value":"/ Get the time until the SSL/SSH handshake is completed","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":211533,"byte_end":211590,"line_start":2437,"line_end":2437,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":211595,"byte_end":211598,"line_start":2438,"line_end":2438,"column_start":5,"column_end":8}},{"value":"/ Returns the total time it took from the start until the SSL/SSH","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":211603,"byte_end":211670,"line_start":2439,"line_end":2439,"column_start":5,"column_end":72}},{"value":"/ connect/handshake to the remote host was completed. This time is most often","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":211675,"byte_end":211754,"line_start":2440,"line_end":2440,"column_start":5,"column_end":84}},{"value":"/ very near to the `pretransfer_time` time, except for cases such as","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":211759,"byte_end":211829,"line_start":2441,"line_end":2441,"column_start":5,"column_end":75}},{"value":"/ HTTP pipelining where the pretransfer time can be delayed due to waits in","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":211834,"byte_end":211911,"line_start":2442,"line_end":2442,"column_start":5,"column_end":82}},{"value":"/ line for the pipeline and more.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":211916,"byte_end":211951,"line_start":2443,"line_end":2443,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":211956,"byte_end":211959,"line_start":2444,"line_end":2444,"column_start":5,"column_end":8}},{"value":"/ Corresponds to `CURLINFO_APPCONNECT_TIME` and may return an error if the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":211964,"byte_end":212040,"line_start":2445,"line_end":2445,"column_start":5,"column_end":81}},{"value":"/ option isn't supported.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":212045,"byte_end":212072,"line_start":2446,"line_end":2446,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":212788,"byte_end":212804,"line_start":2462,"line_end":2462,"column_start":12,"column_end":28},"name":"pretransfer_time","qualname":"<Easy2<H>>::pretransfer_time","value":"fn (&mut self) -> Result<Duration, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get the time until the file transfer start","sig":null,"attributes":[{"value":"/ Get the time until the file transfer start","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":212259,"byte_end":212305,"line_start":2452,"line_end":2452,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":212310,"byte_end":212313,"line_start":2453,"line_end":2453,"column_start":5,"column_end":8}},{"value":"/ Returns the total time it took from the start until the file","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":212318,"byte_end":212382,"line_start":2454,"line_end":2454,"column_start":5,"column_end":69}},{"value":"/ transfer is just about to begin. This includes all pre-transfer commands","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":212387,"byte_end":212463,"line_start":2455,"line_end":2455,"column_start":5,"column_end":81}},{"value":"/ and negotiations that are specific to the particular protocol(s) involved.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":212468,"byte_end":212546,"line_start":2456,"line_end":2456,"column_start":5,"column_end":83}},{"value":"/ It does not involve the sending of the protocol- specific request that","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":212551,"byte_end":212625,"line_start":2457,"line_end":2457,"column_start":5,"column_end":79}},{"value":"/ triggers a transfer.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":212630,"byte_end":212654,"line_start":2458,"line_end":2458,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":212659,"byte_end":212662,"line_start":2459,"line_end":2459,"column_start":5,"column_end":8}},{"value":"/ Corresponds to `CURLINFO_PRETRANSFER_TIME` and may return an error if the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":212667,"byte_end":212744,"line_start":2460,"line_end":2460,"column_start":5,"column_end":82}},{"value":"/ option isn't supported.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":212749,"byte_end":212776,"line_start":2461,"line_end":2461,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":760},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":213366,"byte_end":213384,"line_start":2475,"line_end":2475,"column_start":12,"column_end":30},"name":"starttransfer_time","qualname":"<Easy2<H>>::starttransfer_time","value":"fn (&mut self) -> Result<Duration, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get the time until the first byte is received","sig":null,"attributes":[{"value":"/ Get the time until the first byte is received","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":212965,"byte_end":213014,"line_start":2467,"line_end":2467,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":213019,"byte_end":213022,"line_start":2468,"line_end":2468,"column_start":5,"column_end":8}},{"value":"/ Returns the total time it took from the start until the first","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":213027,"byte_end":213092,"line_start":2469,"line_end":2469,"column_start":5,"column_end":70}},{"value":"/ byte is received by libcurl. This includes `pretransfer_time` and","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":213097,"byte_end":213166,"line_start":2470,"line_end":2470,"column_start":5,"column_end":74}},{"value":"/ also the time the server needs to calculate the result.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":213171,"byte_end":213230,"line_start":2471,"line_end":2471,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":213235,"byte_end":213238,"line_start":2472,"line_end":2472,"column_start":5,"column_end":8}},{"value":"/ Corresponds to `CURLINFO_STARTTRANSFER_TIME` and may return an error if the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":213243,"byte_end":213322,"line_start":2473,"line_end":2473,"column_start":5,"column_end":84}},{"value":"/ option isn't supported.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":213327,"byte_end":213354,"line_start":2474,"line_end":2474,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":761},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":213990,"byte_end":214003,"line_start":2489,"line_end":2489,"column_start":12,"column_end":25},"name":"redirect_time","qualname":"<Easy2<H>>::redirect_time","value":"fn (&mut self) -> Result<Duration, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get the time for all redirection steps","sig":null,"attributes":[{"value":"/ Get the time for all redirection steps","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":213547,"byte_end":213589,"line_start":2480,"line_end":2480,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":213594,"byte_end":213597,"line_start":2481,"line_end":2481,"column_start":5,"column_end":8}},{"value":"/ Returns the total time it took for all redirection steps","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":213602,"byte_end":213662,"line_start":2482,"line_end":2482,"column_start":5,"column_end":65}},{"value":"/ include name lookup, connect, pretransfer and transfer before final","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":213667,"byte_end":213738,"line_start":2483,"line_end":2483,"column_start":5,"column_end":76}},{"value":"/ transaction was started. `redirect_time` contains the complete","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":213743,"byte_end":213809,"line_start":2484,"line_end":2484,"column_start":5,"column_end":71}},{"value":"/ execution time for multiple redirections.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":213814,"byte_end":213859,"line_start":2485,"line_end":2485,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":213864,"byte_end":213867,"line_start":2486,"line_end":2486,"column_start":5,"column_end":8}},{"value":"/ Corresponds to `CURLINFO_REDIRECT_TIME` and may return an error if the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":213872,"byte_end":213946,"line_start":2487,"line_end":2487,"column_start":5,"column_end":79}},{"value":"/ option isn't supported.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":213951,"byte_end":213978,"line_start":2488,"line_end":2488,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":762},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":214324,"byte_end":214338,"line_start":2498,"line_end":2498,"column_start":12,"column_end":26},"name":"redirect_count","qualname":"<Easy2<H>>::redirect_count","value":"fn (&mut self) -> Result<u32, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get the number of redirects","sig":null,"attributes":[{"value":"/ Get the number of redirects","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":214161,"byte_end":214192,"line_start":2494,"line_end":2494,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":214197,"byte_end":214200,"line_start":2495,"line_end":2495,"column_start":5,"column_end":8}},{"value":"/ Corresponds to `CURLINFO_REDIRECT_COUNT` and may return an error if the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":214205,"byte_end":214280,"line_start":2496,"line_end":2496,"column_start":5,"column_end":80}},{"value":"/ option isn't supported.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":214285,"byte_end":214312,"line_start":2497,"line_end":2497,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":214993,"byte_end":215005,"line_start":2513,"line_end":2513,"column_start":12,"column_end":24},"name":"redirect_url","qualname":"<Easy2<H>>::redirect_url","value":"fn (&mut self) -> Result<Option<&str>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get the URL a redirect would go to","sig":null,"attributes":[{"value":"/ Get the URL a redirect would go to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":214476,"byte_end":214514,"line_start":2503,"line_end":2503,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":214519,"byte_end":214522,"line_start":2504,"line_end":2504,"column_start":5,"column_end":8}},{"value":"/ Returns the URL a redirect would take you to if you would enable","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":214527,"byte_end":214595,"line_start":2505,"line_end":2505,"column_start":5,"column_end":73}},{"value":"/ `follow_location`. This can come very handy if you think using the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":214600,"byte_end":214670,"line_start":2506,"line_end":2506,"column_start":5,"column_end":75}},{"value":"/ built-in libcurl redirect logic isn't good enough for you but you would","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":214675,"byte_end":214750,"line_start":2507,"line_end":2507,"column_start":5,"column_end":80}},{"value":"/ still prefer to avoid implementing all the magic of figuring out the new","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":214755,"byte_end":214831,"line_start":2508,"line_end":2508,"column_start":5,"column_end":81}},{"value":"/ URL.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":214836,"byte_end":214844,"line_start":2509,"line_end":2509,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":214849,"byte_end":214852,"line_start":2510,"line_end":2510,"column_start":5,"column_end":8}},{"value":"/ Corresponds to `CURLINFO_REDIRECT_URL` and may return an error if the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":214857,"byte_end":214930,"line_start":2511,"line_end":2511,"column_start":5,"column_end":78}},{"value":"/ url isn't valid utf-8 or an error happens.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":214935,"byte_end":214981,"line_start":2512,"line_end":2512,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":765},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":215588,"byte_end":215606,"line_start":2526,"line_end":2526,"column_start":12,"column_end":30},"name":"redirect_url_bytes","qualname":"<Easy2<H>>::redirect_url_bytes","value":"fn (&mut self) -> Result<Option<&[u8]>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get the URL a redirect would go to, in bytes","sig":null,"attributes":[{"value":"/ Get the URL a redirect would go to, in bytes","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":215118,"byte_end":215166,"line_start":2517,"line_end":2517,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":215171,"byte_end":215174,"line_start":2518,"line_end":2518,"column_start":5,"column_end":8}},{"value":"/ Returns the URL a redirect would take you to if you would enable","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":215179,"byte_end":215247,"line_start":2519,"line_end":2519,"column_start":5,"column_end":73}},{"value":"/ `follow_location`. This can come very handy if you think using the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":215252,"byte_end":215322,"line_start":2520,"line_end":2520,"column_start":5,"column_end":75}},{"value":"/ built-in libcurl redirect logic isn't good enough for you but you would","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":215327,"byte_end":215402,"line_start":2521,"line_end":2521,"column_start":5,"column_end":80}},{"value":"/ still prefer to avoid implementing all the magic of figuring out the new","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":215407,"byte_end":215483,"line_start":2522,"line_end":2522,"column_start":5,"column_end":81}},{"value":"/ URL.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":215488,"byte_end":215496,"line_start":2523,"line_end":2523,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":215501,"byte_end":215504,"line_start":2524,"line_end":2524,"column_start":5,"column_end":8}},{"value":"/ Corresponds to `CURLINFO_REDIRECT_URL` and may return an error.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":215509,"byte_end":215576,"line_start":2525,"line_end":2525,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":766},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":215884,"byte_end":215895,"line_start":2534,"line_end":2534,"column_start":12,"column_end":23},"name":"header_size","qualname":"<Easy2<H>>::header_size","value":"fn (&mut self) -> Result<u64, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get size of retrieved headers","sig":null,"attributes":[{"value":"/ Get size of retrieved headers","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":215722,"byte_end":215755,"line_start":2530,"line_end":2530,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":215760,"byte_end":215763,"line_start":2531,"line_end":2531,"column_start":5,"column_end":8}},{"value":"/ Corresponds to `CURLINFO_HEADER_SIZE` and may return an error if the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":215768,"byte_end":215840,"line_start":2532,"line_end":2532,"column_start":5,"column_end":77}},{"value":"/ option isn't supported.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":215845,"byte_end":215872,"line_start":2533,"line_end":2533,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":768},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":216189,"byte_end":216201,"line_start":2543,"line_end":2543,"column_start":12,"column_end":24},"name":"request_size","qualname":"<Easy2<H>>::request_size","value":"fn (&mut self) -> Result<u64, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get size of sent request.","sig":null,"attributes":[{"value":"/ Get size of sent request.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":216030,"byte_end":216059,"line_start":2539,"line_end":2539,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":216064,"byte_end":216067,"line_start":2540,"line_end":2540,"column_start":5,"column_end":8}},{"value":"/ Corresponds to `CURLINFO_REQUEST_SIZE` and may return an error if the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":216072,"byte_end":216145,"line_start":2541,"line_end":2541,"column_start":5,"column_end":78}},{"value":"/ option isn't supported.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":216150,"byte_end":216177,"line_start":2542,"line_end":2542,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":770},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":216764,"byte_end":216776,"line_start":2557,"line_end":2557,"column_start":12,"column_end":24},"name":"content_type","qualname":"<Easy2<H>>::content_type","value":"fn (&mut self) -> Result<Option<&str>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get Content-Type","sig":null,"attributes":[{"value":"/ Get Content-Type","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":216337,"byte_end":216357,"line_start":2548,"line_end":2548,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":216362,"byte_end":216365,"line_start":2549,"line_end":2549,"column_start":5,"column_end":8}},{"value":"/ Returns the content-type of the downloaded object. This is the value","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":216370,"byte_end":216442,"line_start":2550,"line_end":2550,"column_start":5,"column_end":77}},{"value":"/ read from the Content-Type: field.  If you get `None`, it means that the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":216447,"byte_end":216523,"line_start":2551,"line_end":2551,"column_start":5,"column_end":81}},{"value":"/ server didn't send a valid Content-Type header or that the protocol","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":216528,"byte_end":216599,"line_start":2552,"line_end":2552,"column_start":5,"column_end":76}},{"value":"/ used doesn't support this.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":216604,"byte_end":216634,"line_start":2553,"line_end":2553,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":216639,"byte_end":216642,"line_start":2554,"line_end":2554,"column_start":5,"column_end":8}},{"value":"/ Corresponds to `CURLINFO_CONTENT_TYPE` and may return an error if the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":216647,"byte_end":216720,"line_start":2555,"line_end":2555,"column_start":5,"column_end":78}},{"value":"/ option isn't supported.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":216725,"byte_end":216752,"line_start":2556,"line_end":2556,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":771},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":217326,"byte_end":217344,"line_start":2570,"line_end":2570,"column_start":12,"column_end":30},"name":"content_type_bytes","qualname":"<Easy2<H>>::content_type_bytes","value":"fn (&mut self) -> Result<Option<&[u8]>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get Content-Type, in bytes","sig":null,"attributes":[{"value":"/ Get Content-Type, in bytes","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":216889,"byte_end":216919,"line_start":2561,"line_end":2561,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":216924,"byte_end":216927,"line_start":2562,"line_end":2562,"column_start":5,"column_end":8}},{"value":"/ Returns the content-type of the downloaded object. This is the value","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":216932,"byte_end":217004,"line_start":2563,"line_end":2563,"column_start":5,"column_end":77}},{"value":"/ read from the Content-Type: field.  If you get `None`, it means that the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":217009,"byte_end":217085,"line_start":2564,"line_end":2564,"column_start":5,"column_end":81}},{"value":"/ server didn't send a valid Content-Type header or that the protocol","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":217090,"byte_end":217161,"line_start":2565,"line_end":2565,"column_start":5,"column_end":76}},{"value":"/ used doesn't support this.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":217166,"byte_end":217196,"line_start":2566,"line_end":2566,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":217201,"byte_end":217204,"line_start":2567,"line_end":2567,"column_start":5,"column_end":8}},{"value":"/ Corresponds to `CURLINFO_CONTENT_TYPE` and may return an error if the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":217209,"byte_end":217282,"line_start":2568,"line_end":2568,"column_start":5,"column_end":78}},{"value":"/ option isn't supported.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":217287,"byte_end":217314,"line_start":2569,"line_end":2569,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":772},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":217784,"byte_end":217792,"line_start":2581,"line_end":2581,"column_start":12,"column_end":20},"name":"os_errno","qualname":"<Easy2<H>>::os_errno","value":"fn (&mut self) -> Result<i32, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get errno number from last connect failure.","sig":null,"attributes":[{"value":"/ Get errno number from last connect failure.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":217460,"byte_end":217507,"line_start":2574,"line_end":2574,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":217512,"byte_end":217515,"line_start":2575,"line_end":2575,"column_start":5,"column_end":8}},{"value":"/ Note that the value is only set on failure, it is not reset upon a","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":217520,"byte_end":217590,"line_start":2576,"line_end":2576,"column_start":5,"column_end":75}},{"value":"/ successful operation. The number is OS and system specific.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":217595,"byte_end":217658,"line_start":2577,"line_end":2577,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":217663,"byte_end":217666,"line_start":2578,"line_end":2578,"column_start":5,"column_end":8}},{"value":"/ Corresponds to `CURLINFO_OS_ERRNO` and may return an error if the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":217671,"byte_end":217740,"line_start":2579,"line_end":2579,"column_start":5,"column_end":74}},{"value":"/ option isn't supported.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":217745,"byte_end":217772,"line_start":2580,"line_end":2580,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":774},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":218266,"byte_end":218276,"line_start":2594,"line_end":2594,"column_start":12,"column_end":22},"name":"primary_ip","qualname":"<Easy2<H>>::primary_ip","value":"fn (&mut self) -> Result<Option<&str>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get IP address of last connection.","sig":null,"attributes":[{"value":"/ Get IP address of last connection.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":217924,"byte_end":217962,"line_start":2586,"line_end":2586,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":217967,"byte_end":217970,"line_start":2587,"line_end":2587,"column_start":5,"column_end":8}},{"value":"/ Returns a string holding the IP address of the most recent connection","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":217975,"byte_end":218048,"line_start":2588,"line_end":2588,"column_start":5,"column_end":78}},{"value":"/ done with this curl handle. This string may be IPv6 when that is","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":218053,"byte_end":218121,"line_start":2589,"line_end":2589,"column_start":5,"column_end":73}},{"value":"/ enabled.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":218126,"byte_end":218138,"line_start":2590,"line_end":2590,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":218143,"byte_end":218146,"line_start":2591,"line_end":2591,"column_start":5,"column_end":8}},{"value":"/ Corresponds to `CURLINFO_PRIMARY_IP` and may return an error if the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":218151,"byte_end":218222,"line_start":2592,"line_end":2592,"column_start":5,"column_end":76}},{"value":"/ option isn't supported.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":218227,"byte_end":218254,"line_start":2593,"line_end":2593,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":775},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":218559,"byte_end":218571,"line_start":2602,"line_end":2602,"column_start":12,"column_end":24},"name":"primary_port","qualname":"<Easy2<H>>::primary_port","value":"fn (&mut self) -> Result<u16, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get the latest destination port number","sig":null,"attributes":[{"value":"/ Get the latest destination port number","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":218387,"byte_end":218429,"line_start":2598,"line_end":2598,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":218434,"byte_end":218437,"line_start":2599,"line_end":2599,"column_start":5,"column_end":8}},{"value":"/ Corresponds to `CURLINFO_PRIMARY_PORT` and may return an error if the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":218442,"byte_end":218515,"line_start":2600,"line_end":2600,"column_start":5,"column_end":78}},{"value":"/ option isn't supported.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":218520,"byte_end":218547,"line_start":2601,"line_end":2601,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":777},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":219065,"byte_end":219073,"line_start":2615,"line_end":2615,"column_start":12,"column_end":20},"name":"local_ip","qualname":"<Easy2<H>>::local_ip","value":"fn (&mut self) -> Result<Option<&str>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get local IP address of last connection","sig":null,"attributes":[{"value":"/ Get local IP address of last connection","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":218707,"byte_end":218750,"line_start":2607,"line_end":2607,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":218755,"byte_end":218758,"line_start":2608,"line_end":2608,"column_start":5,"column_end":8}},{"value":"/ Returns a string holding the IP address of the local end of most recent","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":218763,"byte_end":218838,"line_start":2609,"line_end":2609,"column_start":5,"column_end":80}},{"value":"/ connection done with this curl handle. This string may be IPv6 when that","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":218843,"byte_end":218919,"line_start":2610,"line_end":2610,"column_start":5,"column_end":81}},{"value":"/ is enabled.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":218924,"byte_end":218939,"line_start":2611,"line_end":2611,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":218944,"byte_end":218947,"line_start":2612,"line_end":2612,"column_start":5,"column_end":8}},{"value":"/ Corresponds to `CURLINFO_LOCAL_IP` and may return an error if the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":218952,"byte_end":219021,"line_start":2613,"line_end":2613,"column_start":5,"column_end":74}},{"value":"/ option isn't supported.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":219026,"byte_end":219053,"line_start":2614,"line_end":2614,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":778},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":219346,"byte_end":219356,"line_start":2623,"line_end":2623,"column_start":12,"column_end":22},"name":"local_port","qualname":"<Easy2<H>>::local_port","value":"fn (&mut self) -> Result<u16, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get the latest local port number","sig":null,"attributes":[{"value":"/ Get the latest local port number","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":219182,"byte_end":219218,"line_start":2619,"line_end":2619,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":219223,"byte_end":219226,"line_start":2620,"line_end":2620,"column_start":5,"column_end":8}},{"value":"/ Corresponds to `CURLINFO_LOCAL_PORT` and may return an error if the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":219231,"byte_end":219302,"line_start":2621,"line_end":2621,"column_start":5,"column_end":76}},{"value":"/ option isn't supported.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":219307,"byte_end":219334,"line_start":2622,"line_end":2622,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":780},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":219739,"byte_end":219746,"line_start":2634,"line_end":2634,"column_start":12,"column_end":19},"name":"cookies","qualname":"<Easy2<H>>::cookies","value":"fn (&mut self) -> Result<List, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get all known cookies","sig":null,"attributes":[{"value":"/ Get all known cookies","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":219490,"byte_end":219515,"line_start":2628,"line_end":2628,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":219520,"byte_end":219523,"line_start":2629,"line_end":2629,"column_start":5,"column_end":8}},{"value":"/ Returns a linked-list of all cookies cURL knows (expired ones, too).","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":219528,"byte_end":219600,"line_start":2630,"line_end":2630,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":219605,"byte_end":219608,"line_start":2631,"line_end":2631,"column_start":5,"column_end":8}},{"value":"/ Corresponds to the `CURLINFO_COOKIELIST` option and may return an error","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":219613,"byte_end":219688,"line_start":2632,"line_end":2632,"column_start":5,"column_end":80}},{"value":"/ if the option isn't supported.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":219693,"byte_end":219727,"line_start":2633,"line_end":2633,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":781},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":221568,"byte_end":221576,"line_start":2674,"line_end":2674,"column_start":12,"column_end":20},"name":"pipewait","qualname":"<Easy2<H>>::pipewait","value":"fn (&mut self, wait: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Wait for pipelining/multiplexing","sig":null,"attributes":[{"value":"/ Wait for pipelining/multiplexing","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":220103,"byte_end":220139,"line_start":2647,"line_end":2647,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":220144,"byte_end":220147,"line_start":2648,"line_end":2648,"column_start":5,"column_end":8}},{"value":"/ Set wait to `true` to tell libcurl to prefer to wait for a connection to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":220152,"byte_end":220228,"line_start":2649,"line_end":2649,"column_start":5,"column_end":81}},{"value":"/ confirm or deny that it can do pipelining or multiplexing before","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":220233,"byte_end":220301,"line_start":2650,"line_end":2650,"column_start":5,"column_end":73}},{"value":"/ continuing.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":220306,"byte_end":220321,"line_start":2651,"line_end":2651,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":220326,"byte_end":220329,"line_start":2652,"line_end":2652,"column_start":5,"column_end":8}},{"value":"/ When about to perform a new transfer that allows pipelining or","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":220334,"byte_end":220400,"line_start":2653,"line_end":2653,"column_start":5,"column_end":71}},{"value":"/ multiplexing, libcurl will check for existing connections to re-use and","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":220405,"byte_end":220480,"line_start":2654,"line_end":2654,"column_start":5,"column_end":80}},{"value":"/ pipeline on. If no such connection exists it will immediately continue","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":220485,"byte_end":220559,"line_start":2655,"line_end":2655,"column_start":5,"column_end":79}},{"value":"/ and create a fresh new connection to use.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":220564,"byte_end":220609,"line_start":2656,"line_end":2656,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":220614,"byte_end":220617,"line_start":2657,"line_end":2657,"column_start":5,"column_end":8}},{"value":"/ By setting this option to `true` - and having `pipelining(true, true)`","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":220622,"byte_end":220696,"line_start":2658,"line_end":2658,"column_start":5,"column_end":79}},{"value":"/ enabled for the multi handle this transfer is associated with - libcurl","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":220701,"byte_end":220776,"line_start":2659,"line_end":2659,"column_start":5,"column_end":80}},{"value":"/ will instead wait for the connection to reveal if it is possible to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":220781,"byte_end":220852,"line_start":2660,"line_end":2660,"column_start":5,"column_end":76}},{"value":"/ pipeline/multiplex on before it continues. This enables libcurl to much","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":220857,"byte_end":220932,"line_start":2661,"line_end":2661,"column_start":5,"column_end":80}},{"value":"/ better keep the number of connections to a minimum when using pipelining","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":220937,"byte_end":221013,"line_start":2662,"line_end":2662,"column_start":5,"column_end":81}},{"value":"/ or multiplexing protocols.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":221018,"byte_end":221048,"line_start":2663,"line_end":2663,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":221053,"byte_end":221056,"line_start":2664,"line_end":2664,"column_start":5,"column_end":8}},{"value":"/ The effect thus becomes that with this option set, libcurl prefers to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":221061,"byte_end":221134,"line_start":2665,"line_end":2665,"column_start":5,"column_end":78}},{"value":"/ wait and re-use an existing connection for pipelining rather than the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":221139,"byte_end":221212,"line_start":2666,"line_end":2666,"column_start":5,"column_end":78}},{"value":"/ opposite: prefer to open a new connection rather than waiting.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":221217,"byte_end":221283,"line_start":2667,"line_end":2667,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":221288,"byte_end":221291,"line_start":2668,"line_end":2668,"column_start":5,"column_end":8}},{"value":"/ The waiting time is as long as it takes for the connection to get up and","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":221296,"byte_end":221372,"line_start":2669,"line_end":2669,"column_start":5,"column_end":81}},{"value":"/ for libcurl to get the necessary response back that informs it about its","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":221377,"byte_end":221453,"line_start":2670,"line_end":2670,"column_start":5,"column_end":81}},{"value":"/ protocol and support level.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":221458,"byte_end":221489,"line_start":2671,"line_end":2671,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":221494,"byte_end":221497,"line_start":2672,"line_end":2672,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the `CURLOPT_PIPEWAIT` option.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":221502,"byte_end":221556,"line_start":2673,"line_end":2673,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":782},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":222609,"byte_end":222616,"line_start":2696,"line_end":2696,"column_start":12,"column_end":19},"name":"perform","qualname":"<Easy2<H>>::perform","value":"fn (&self) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" After options have been set, this will perform the transfer described by\n the options.","sig":null,"attributes":[{"value":"/ After options have been set, this will perform the transfer described by","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":221806,"byte_end":221882,"line_start":2681,"line_end":2681,"column_start":5,"column_end":81}},{"value":"/ the options.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":221887,"byte_end":221903,"line_start":2682,"line_end":2682,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":221908,"byte_end":221911,"line_start":2683,"line_end":2683,"column_start":5,"column_end":8}},{"value":"/ This performs the request in a synchronous fashion. This can be used","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":221916,"byte_end":221988,"line_start":2684,"line_end":2684,"column_start":5,"column_end":77}},{"value":"/ multiple times for one easy handle and libcurl will attempt to re-use","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":221993,"byte_end":222066,"line_start":2685,"line_end":2685,"column_start":5,"column_end":78}},{"value":"/ the same connection for all transfers.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":222071,"byte_end":222113,"line_start":2686,"line_end":2686,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":222118,"byte_end":222121,"line_start":2687,"line_end":2687,"column_start":5,"column_end":8}},{"value":"/ This method will preserve all options configured in this handle for the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":222126,"byte_end":222201,"line_start":2688,"line_end":2688,"column_start":5,"column_end":80}},{"value":"/ next request, and if that is not desired then the options can be","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":222206,"byte_end":222274,"line_start":2689,"line_end":2689,"column_start":5,"column_end":73}},{"value":"/ manually reset or the `reset` method can be called.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":222279,"byte_end":222334,"line_start":2690,"line_end":2690,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":222339,"byte_end":222342,"line_start":2691,"line_end":2691,"column_start":5,"column_end":8}},{"value":"/ Note that this method takes `&self`, which is quite important! This","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":222347,"byte_end":222418,"line_start":2692,"line_end":2692,"column_start":5,"column_end":76}},{"value":"/ allows applications to close over the handle in various callbacks to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":222423,"byte_end":222495,"line_start":2693,"line_end":2693,"column_start":5,"column_end":77}},{"value":"/ call methods like `unpause_write` and `unpause_read` while a transfer is","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":222500,"byte_end":222576,"line_start":2694,"line_end":2694,"column_start":5,"column_end":81}},{"value":"/ in progress.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":222581,"byte_end":222597,"line_start":2695,"line_end":2695,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":783},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":223387,"byte_end":223399,"line_start":2716,"line_end":2716,"column_start":12,"column_end":24},"name":"unpause_read","qualname":"<Easy2<H>>::unpause_read","value":"fn (&self) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Unpause reading on a connection.","sig":null,"attributes":[{"value":"/ Unpause reading on a connection.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":222785,"byte_end":222821,"line_start":2702,"line_end":2702,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":222826,"byte_end":222829,"line_start":2703,"line_end":2703,"column_start":5,"column_end":8}},{"value":"/ Using this function, you can explicitly unpause a connection that was","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":222834,"byte_end":222907,"line_start":2704,"line_end":2704,"column_start":5,"column_end":78}},{"value":"/ previously paused.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":222912,"byte_end":222934,"line_start":2705,"line_end":2705,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":222939,"byte_end":222942,"line_start":2706,"line_end":2706,"column_start":5,"column_end":8}},{"value":"/ A connection can be paused by letting the read or the write callbacks","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":222947,"byte_end":223020,"line_start":2707,"line_end":2707,"column_start":5,"column_end":78}},{"value":"/ return `ReadError::Pause` or `WriteError::Pause`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":223025,"byte_end":223078,"line_start":2708,"line_end":2708,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":223083,"byte_end":223086,"line_start":2709,"line_end":2709,"column_start":5,"column_end":8}},{"value":"/ To unpause, you may for example call this from the progress callback","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":223091,"byte_end":223163,"line_start":2710,"line_end":2710,"column_start":5,"column_end":77}},{"value":"/ which gets called at least once per second, even if the connection is","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":223168,"byte_end":223241,"line_start":2711,"line_end":2711,"column_start":5,"column_end":78}},{"value":"/ paused.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":223246,"byte_end":223257,"line_start":2712,"line_end":2712,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":223262,"byte_end":223265,"line_start":2713,"line_end":2713,"column_start":5,"column_end":8}},{"value":"/ The chance is high that you will get your write callback called before","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":223270,"byte_end":223344,"line_start":2714,"line_end":2714,"column_start":5,"column_end":79}},{"value":"/ this function returns.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":223349,"byte_end":223375,"line_start":2715,"line_end":2715,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":784},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":224300,"byte_end":224313,"line_start":2737,"line_end":2737,"column_start":12,"column_end":25},"name":"unpause_write","qualname":"<Easy2<H>>::unpause_write","value":"fn (&self) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Unpause writing on a connection.","sig":null,"attributes":[{"value":"/ Unpause writing on a connection.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":223591,"byte_end":223627,"line_start":2723,"line_end":2723,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":223632,"byte_end":223635,"line_start":2724,"line_end":2724,"column_start":5,"column_end":8}},{"value":"/ Using this function, you can explicitly unpause a connection that was","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":223640,"byte_end":223713,"line_start":2725,"line_end":2725,"column_start":5,"column_end":78}},{"value":"/ previously paused.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":223718,"byte_end":223740,"line_start":2726,"line_end":2726,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":223745,"byte_end":223748,"line_start":2727,"line_end":2727,"column_start":5,"column_end":8}},{"value":"/ A connection can be paused by letting the read or the write callbacks","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":223753,"byte_end":223826,"line_start":2728,"line_end":2728,"column_start":5,"column_end":78}},{"value":"/ return `ReadError::Pause` or `WriteError::Pause`. A write callback that","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":223831,"byte_end":223906,"line_start":2729,"line_end":2729,"column_start":5,"column_end":80}},{"value":"/ returns pause signals to the library that it couldn't take care of any","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":223911,"byte_end":223985,"line_start":2730,"line_end":2730,"column_start":5,"column_end":79}},{"value":"/ data at all, and that data will then be delivered again to the callback","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":223990,"byte_end":224065,"line_start":2731,"line_end":2731,"column_start":5,"column_end":80}},{"value":"/ when the writing is later unpaused.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":224070,"byte_end":224109,"line_start":2732,"line_end":2732,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":224114,"byte_end":224117,"line_start":2733,"line_end":2733,"column_start":5,"column_end":8}},{"value":"/ To unpause, you may for example call this from the progress callback","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":224122,"byte_end":224194,"line_start":2734,"line_end":2734,"column_start":5,"column_end":77}},{"value":"/ which gets called at least once per second, even if the connection is","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":224199,"byte_end":224272,"line_start":2735,"line_end":2735,"column_start":5,"column_end":78}},{"value":"/ paused.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":224277,"byte_end":224288,"line_start":2736,"line_end":2736,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":785},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":224545,"byte_end":224555,"line_start":2745,"line_end":2745,"column_start":12,"column_end":22},"name":"url_encode","qualname":"<Easy2<H>>::url_encode","value":"fn (&mut self, s: &[u8]) -> String","parent":null,"children":[],"decl_id":null,"docs":" URL encodes a string `s`\n","sig":null,"attributes":[{"value":"/ URL encodes a string `s`","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":224505,"byte_end":224533,"line_start":2744,"line_end":2744,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":786},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":225154,"byte_end":225164,"line_start":2764,"line_end":2764,"column_start":12,"column_end":22},"name":"url_decode","qualname":"<Easy2<H>>::url_decode","value":"fn (&mut self, s: &str) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" URL decodes a string `s`, returning `None` if it fails\n","sig":null,"attributes":[{"value":"/ URL decodes a string `s`, returning `None` if it fails","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":225084,"byte_end":225142,"line_start":2763,"line_end":2763,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":787},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":227416,"byte_end":227420,"line_start":2829,"line_end":2829,"column_start":12,"column_end":16},"name":"recv","qualname":"<Easy2<H>>::recv","value":"fn (&mut self, data: &mut [u8]) -> Result<usize, Error>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from a connected socket.","sig":null,"attributes":[{"value":"/ Receives data from a connected socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":227253,"byte_end":227295,"line_start":2825,"line_end":2825,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":227300,"byte_end":227303,"line_start":2826,"line_end":2826,"column_start":5,"column_end":8}},{"value":"/ Only useful after a successful `perform` with the `connect_only` option","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":227308,"byte_end":227383,"line_start":2827,"line_end":2827,"column_start":5,"column_end":80}},{"value":"/ set as well.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":227388,"byte_end":227404,"line_start":2828,"line_end":2828,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":788},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":228028,"byte_end":228032,"line_start":2850,"line_end":2850,"column_start":12,"column_end":16},"name":"send","qualname":"<Easy2<H>>::send","value":"fn (&mut self, data: &[u8]) -> Result<usize, Error>","parent":null,"children":[],"decl_id":null,"docs":" Sends data over the connected socket.","sig":null,"attributes":[{"value":"/ Sends data over the connected socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":227866,"byte_end":227907,"line_start":2846,"line_end":2846,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":227912,"byte_end":227915,"line_start":2847,"line_end":2847,"column_start":5,"column_end":8}},{"value":"/ Only useful after a successful `perform` with the `connect_only` option","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":227920,"byte_end":227995,"line_start":2848,"line_end":2848,"column_start":5,"column_end":80}},{"value":"/ set as well.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":228000,"byte_end":228016,"line_start":2849,"line_end":2849,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":789},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":228449,"byte_end":228452,"line_start":2865,"line_end":2865,"column_start":12,"column_end":15},"name":"raw","qualname":"<Easy2<H>>::raw","value":"fn (&self) -> *mut curl_sys::CURL","parent":null,"children":[],"decl_id":null,"docs":" Get a pointer to the raw underlying CURL handle.\n","sig":null,"attributes":[{"value":"/ Get a pointer to the raw underlying CURL handle.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":228385,"byte_end":228437,"line_start":2864,"line_end":2864,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":232169,"byte_end":232183,"line_start":2970,"line_end":2970,"column_start":12,"column_end":26},"name":"take_error_buf","qualname":"<Easy2<H>>::take_error_buf","value":"fn (&self) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Returns the contents of the internal error buffer, if available.","sig":null,"attributes":[{"value":"/ Returns the contents of the internal error buffer, if available.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":231399,"byte_end":231467,"line_start":2956,"line_end":2956,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":231472,"byte_end":231475,"line_start":2957,"line_end":2957,"column_start":5,"column_end":8}},{"value":"/ When an easy handle is created it configured the `CURLOPT_ERRORBUFFER`","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":231480,"byte_end":231554,"line_start":2958,"line_end":2958,"column_start":5,"column_end":79}},{"value":"/ parameter and instructs libcurl to store more error information into a","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":231559,"byte_end":231633,"line_start":2959,"line_end":2959,"column_start":5,"column_end":79}},{"value":"/ buffer for better error messages and better debugging. The contents of","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":231638,"byte_end":231712,"line_start":2960,"line_end":2960,"column_start":5,"column_end":79}},{"value":"/ that buffer are automatically coupled with all errors for methods on","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":231717,"byte_end":231789,"line_start":2961,"line_end":2961,"column_start":5,"column_end":77}},{"value":"/ this type, but if manually invoking APIs the contents will need to be","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":231794,"byte_end":231867,"line_start":2962,"line_end":2962,"column_start":5,"column_end":78}},{"value":"/ extracted with this method.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":231872,"byte_end":231903,"line_start":2963,"line_end":2963,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":231908,"byte_end":231911,"line_start":2964,"line_end":2964,"column_start":5,"column_end":8}},{"value":"/ Put another way, you probably don't need this, you're probably already","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":231916,"byte_end":231990,"line_start":2965,"line_end":2965,"column_start":5,"column_end":79}},{"value":"/ getting nice error messages!","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":231995,"byte_end":232027,"line_start":2966,"line_end":2966,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":232032,"byte_end":232035,"line_start":2967,"line_end":2967,"column_start":5,"column_end":8}},{"value":"/ This function will clear the internal buffer, so this is an operation","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":232040,"byte_end":232113,"line_start":2968,"line_end":2968,"column_start":5,"column_end":78}},{"value":"/ that mutates the handle internally.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":232118,"byte_end":232157,"line_start":2969,"line_end":2969,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":836},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":238428,"byte_end":238431,"line_start":3186,"line_end":3186,"column_start":12,"column_end":15},"name":"new","qualname":"<Auth>::new","value":"fn () -> Auth","parent":null,"children":[],"decl_id":null,"docs":" Creates a new set of authentications with no members.","sig":null,"attributes":[{"value":"/ Creates a new set of authentications with no members.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":238207,"byte_end":238264,"line_start":3182,"line_end":3182,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":238269,"byte_end":238272,"line_start":3183,"line_end":3183,"column_start":5,"column_end":8}},{"value":"/ An `Auth` structure is used to configure which forms of authentication","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":238277,"byte_end":238351,"line_start":3184,"line_end":3184,"column_start":5,"column_end":79}},{"value":"/ are attempted when negotiating connections with servers.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":238356,"byte_end":238416,"line_start":3185,"line_end":3185,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":837},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":238763,"byte_end":238768,"line_start":3195,"line_end":3195,"column_start":12,"column_end":17},"name":"basic","qualname":"<Auth>::basic","value":"fn (&mut self, on: bool) -> &mut Auth","parent":null,"children":[],"decl_id":null,"docs":" HTTP Basic authentication.","sig":null,"attributes":[{"value":"/ HTTP Basic authentication.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":238480,"byte_end":238510,"line_start":3190,"line_end":3190,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":238515,"byte_end":238518,"line_start":3191,"line_end":3191,"column_start":5,"column_end":8}},{"value":"/ This is the default choice, and the only method that is in wide-spread","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":238523,"byte_end":238597,"line_start":3192,"line_end":3192,"column_start":5,"column_end":79}},{"value":"/ use and supported virtually everywhere.  This sends the user name and","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":238602,"byte_end":238675,"line_start":3193,"line_end":3193,"column_start":5,"column_end":78}},{"value":"/ password over the network in plain text, easily captured by others.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":238680,"byte_end":238751,"line_start":3194,"line_end":3194,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":838},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":239096,"byte_end":239102,"line_start":3204,"line_end":3204,"column_start":12,"column_end":18},"name":"digest","qualname":"<Auth>::digest","value":"fn (&mut self, on: bool) -> &mut Auth","parent":null,"children":[],"decl_id":null,"docs":" HTTP Digest authentication.","sig":null,"attributes":[{"value":"/ HTTP Digest authentication.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":238864,"byte_end":238895,"line_start":3199,"line_end":3199,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":238900,"byte_end":238903,"line_start":3200,"line_end":3200,"column_start":5,"column_end":8}},{"value":"/ Digest authentication is defined in RFC 2617 and is a more secure way to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":238908,"byte_end":238984,"line_start":3201,"line_end":3201,"column_start":5,"column_end":81}},{"value":"/ do authentication over public networks than the regular old-fashioned","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":238989,"byte_end":239062,"line_start":3202,"line_end":3202,"column_start":5,"column_end":78}},{"value":"/ Basic method.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":239067,"byte_end":239084,"line_start":3203,"line_end":3203,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":839},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":239625,"byte_end":239634,"line_start":3215,"line_end":3215,"column_start":12,"column_end":21},"name":"digest_ie","qualname":"<Auth>::digest_ie","value":"fn (&mut self, on: bool) -> &mut Auth","parent":null,"children":[],"decl_id":null,"docs":" HTTP Digest authentication with an IE flavor.","sig":null,"attributes":[{"value":"/ HTTP Digest authentication with an IE flavor.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":239199,"byte_end":239248,"line_start":3208,"line_end":3208,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":239253,"byte_end":239256,"line_start":3209,"line_end":3209,"column_start":5,"column_end":8}},{"value":"/ Digest authentication is defined in RFC 2617 and is a more secure way to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":239261,"byte_end":239337,"line_start":3210,"line_end":3210,"column_start":5,"column_end":81}},{"value":"/ do authentication over public networks than the regular old-fashioned","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":239342,"byte_end":239415,"line_start":3211,"line_end":3211,"column_start":5,"column_end":78}},{"value":"/ Basic method. The IE flavor is simply that libcurl will use a special","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":239420,"byte_end":239493,"line_start":3212,"line_end":3212,"column_start":5,"column_end":78}},{"value":"/ \"quirk\" that IE is known to have used before version 7 and that some","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":239498,"byte_end":239570,"line_start":3213,"line_end":3213,"column_start":5,"column_end":77}},{"value":"/ servers require the client to use.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":239575,"byte_end":239613,"line_start":3214,"line_end":3214,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":240044,"byte_end":240056,"line_start":3226,"line_end":3226,"column_start":12,"column_end":24},"name":"gssnegotiate","qualname":"<Auth>::gssnegotiate","value":"fn (&mut self, on: bool) -> &mut Auth","parent":null,"children":[],"decl_id":null,"docs":" HTTP Negotiate (SPNEGO) authentication.","sig":null,"attributes":[{"value":"/ HTTP Negotiate (SPNEGO) authentication.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":239734,"byte_end":239777,"line_start":3219,"line_end":3219,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":239782,"byte_end":239785,"line_start":3220,"line_end":3220,"column_start":5,"column_end":8}},{"value":"/ Negotiate authentication is defined in RFC 4559 and is the most secure","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":239790,"byte_end":239864,"line_start":3221,"line_end":3221,"column_start":5,"column_end":79}},{"value":"/ way to perform authentication over HTTP.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":239869,"byte_end":239913,"line_start":3222,"line_end":3222,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":239918,"byte_end":239921,"line_start":3223,"line_end":3223,"column_start":5,"column_end":8}},{"value":"/ You need to build libcurl with a suitable GSS-API library or SSPI on","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":239926,"byte_end":239998,"line_start":3224,"line_end":3224,"column_start":5,"column_end":77}},{"value":"/ Windows for this to work.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":240003,"byte_end":240032,"line_start":3225,"line_end":3225,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":841},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":240566,"byte_end":240570,"line_start":3238,"line_end":3238,"column_start":12,"column_end":16},"name":"ntlm","qualname":"<Auth>::ntlm","value":"fn (&mut self, on: bool) -> &mut Auth","parent":null,"children":[],"decl_id":null,"docs":" HTTP NTLM authentication.","sig":null,"attributes":[{"value":"/ HTTP NTLM authentication.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":240159,"byte_end":240188,"line_start":3230,"line_end":3230,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":240193,"byte_end":240196,"line_start":3231,"line_end":3231,"column_start":5,"column_end":8}},{"value":"/ A proprietary protocol invented and used by Microsoft. It uses a","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":240201,"byte_end":240269,"line_start":3232,"line_end":3232,"column_start":5,"column_end":73}},{"value":"/ challenge-response and hash concept similar to Digest, to prevent the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":240274,"byte_end":240347,"line_start":3233,"line_end":3233,"column_start":5,"column_end":78}},{"value":"/ password from being eavesdropped.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":240352,"byte_end":240389,"line_start":3234,"line_end":3234,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":240394,"byte_end":240397,"line_start":3235,"line_end":3235,"column_start":5,"column_end":8}},{"value":"/ You need to build libcurl with either OpenSSL, GnuTLS or NSS support for","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":240402,"byte_end":240478,"line_start":3236,"line_end":3236,"column_start":5,"column_end":81}},{"value":"/ this option to work, or build libcurl on Windows with SSPI support.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":240483,"byte_end":240554,"line_start":3237,"line_end":3237,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":842},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":241762,"byte_end":241769,"line_start":3261,"line_end":3261,"column_start":12,"column_end":19},"name":"ntlm_wb","qualname":"<Auth>::ntlm_wb","value":"fn (&mut self, on: bool) -> &mut Auth","parent":null,"children":[],"decl_id":null,"docs":" NTLM delegating to winbind helper.","sig":null,"attributes":[{"value":"/ NTLM delegating to winbind helper.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":240665,"byte_end":240703,"line_start":3242,"line_end":3242,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":240708,"byte_end":240711,"line_start":3243,"line_end":3243,"column_start":5,"column_end":8}},{"value":"/ Authentication is performed by a separate binary application that is","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":240716,"byte_end":240788,"line_start":3244,"line_end":3244,"column_start":5,"column_end":77}},{"value":"/ executed when needed. The name of the application is specified at","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":240793,"byte_end":240862,"line_start":3245,"line_end":3245,"column_start":5,"column_end":74}},{"value":"/ compile time but is typically /usr/bin/ntlm_auth","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":240867,"byte_end":240919,"line_start":3246,"line_end":3246,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":240924,"byte_end":240927,"line_start":3247,"line_end":3247,"column_start":5,"column_end":8}},{"value":"/ Note that libcurl will fork when necessary to run the winbind","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":240932,"byte_end":240997,"line_start":3248,"line_end":3248,"column_start":5,"column_end":70}},{"value":"/ application and kill it when complete, calling waitpid() to await its","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":241002,"byte_end":241075,"line_start":3249,"line_end":3249,"column_start":5,"column_end":78}},{"value":"/ exit when done. On POSIX operating systems, killing the process will","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":241080,"byte_end":241152,"line_start":3250,"line_end":3250,"column_start":5,"column_end":77}},{"value":"/ cause a SIGCHLD signal to be raised (regardless of whether","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":241157,"byte_end":241219,"line_start":3251,"line_end":3251,"column_start":5,"column_end":67}},{"value":"/ CURLOPT_NOSIGNAL is set), which must be handled intelligently by the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":241224,"byte_end":241296,"line_start":3252,"line_end":3252,"column_start":5,"column_end":77}},{"value":"/ application. In particular, the application must not unconditionally","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":241301,"byte_end":241373,"line_start":3253,"line_end":3253,"column_start":5,"column_end":77}},{"value":"/ call wait() in its SIGCHLD signal handler to avoid being subject to a","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":241378,"byte_end":241451,"line_start":3254,"line_end":3254,"column_start":5,"column_end":78}},{"value":"/ race condition. This behavior is subject to change in future versions of","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":241456,"byte_end":241532,"line_start":3255,"line_end":3255,"column_start":5,"column_end":81}},{"value":"/ libcurl.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":241537,"byte_end":241549,"line_start":3256,"line_end":3256,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":241554,"byte_end":241557,"line_start":3257,"line_end":3257,"column_start":5,"column_end":8}},{"value":"/ A proprietary protocol invented and used by Microsoft. It uses a","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":241562,"byte_end":241630,"line_start":3258,"line_end":3258,"column_start":5,"column_end":73}},{"value":"/ challenge-response and hash concept similar to Digest, to prevent the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":241635,"byte_end":241708,"line_start":3259,"line_end":3259,"column_start":5,"column_end":78}},{"value":"/ password from being eavesdropped.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":241713,"byte_end":241750,"line_start":3260,"line_end":3260,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":847},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":242814,"byte_end":242817,"line_start":3294,"line_end":3294,"column_start":12,"column_end":15},"name":"new","qualname":"<SslOpt>::new","value":"fn () -> SslOpt","parent":null,"children":[],"decl_id":null,"docs":" Creates a new set of SSL options.\n","sig":null,"attributes":[{"value":"/ Creates a new set of SSL options.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":242765,"byte_end":242802,"line_start":3293,"line_end":3293,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":848},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":243373,"byte_end":243382,"line_start":3306,"line_end":3306,"column_start":12,"column_end":21},"name":"no_revoke","qualname":"<SslOpt>::no_revoke","value":"fn (&mut self, on: bool) -> &mut SslOpt","parent":null,"children":[],"decl_id":null,"docs":" Tells libcurl to disable certificate revocation checks for those SSL\n backends where such behavior is present.","sig":null,"attributes":[{"value":"/ Tells libcurl to disable certificate revocation checks for those SSL","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":242870,"byte_end":242942,"line_start":3298,"line_end":3298,"column_start":5,"column_end":77}},{"value":"/ backends where such behavior is present.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":242947,"byte_end":242991,"line_start":3299,"line_end":3299,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":242996,"byte_end":242999,"line_start":3300,"line_end":3300,"column_start":5,"column_end":8}},{"value":"/ Currently this option is only supported for WinSSL (the native Windows","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":243004,"byte_end":243078,"line_start":3301,"line_end":3301,"column_start":5,"column_end":79}},{"value":"/ SSL library), with an exception in the case of Windows' Untrusted","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":243083,"byte_end":243152,"line_start":3302,"line_end":3302,"column_start":5,"column_end":74}},{"value":"/ Publishers blacklist which it seems can't be bypassed. This option may","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":243157,"byte_end":243231,"line_start":3303,"line_end":3303,"column_start":5,"column_end":79}},{"value":"/ have broader support to accommodate other SSL backends in the future.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":243236,"byte_end":243309,"line_start":3304,"line_end":3304,"column_start":5,"column_end":78}},{"value":"/ https://curl.haxx.se/docs/ssl-compared.html","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":243314,"byte_end":243361,"line_start":3305,"line_end":3305,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":849},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":244065,"byte_end":244076,"line_start":3320,"line_end":3320,"column_start":12,"column_end":23},"name":"allow_beast","qualname":"<SslOpt>::allow_beast","value":"fn (&mut self, on: bool) -> &mut SslOpt","parent":null,"children":[],"decl_id":null,"docs":" Tells libcurl to not attempt to use any workarounds for a security flaw\n in the SSL3 and TLS1.0 protocols.","sig":null,"attributes":[{"value":"/ Tells libcurl to not attempt to use any workarounds for a security flaw","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":243486,"byte_end":243561,"line_start":3310,"line_end":3310,"column_start":5,"column_end":80}},{"value":"/ in the SSL3 and TLS1.0 protocols.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":243566,"byte_end":243603,"line_start":3311,"line_end":3311,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":243608,"byte_end":243611,"line_start":3312,"line_end":3312,"column_start":5,"column_end":8}},{"value":"/ If this option isn't used or this bit is set to 0, the SSL layer libcurl","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":243616,"byte_end":243692,"line_start":3313,"line_end":3313,"column_start":5,"column_end":81}},{"value":"/ uses may use a work-around for this flaw although it might cause","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":243697,"byte_end":243765,"line_start":3314,"line_end":3314,"column_start":5,"column_end":73}},{"value":"/ interoperability problems with some (older) SSL implementations.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":243770,"byte_end":243838,"line_start":3315,"line_end":3315,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":243843,"byte_end":243846,"line_start":3316,"line_end":3316,"column_start":5,"column_end":8}},{"value":"/ > WARNING: avoiding this work-around lessens the security, and by","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":243851,"byte_end":243920,"line_start":3317,"line_end":3317,"column_start":5,"column_end":74}},{"value":"/ > setting this option to 1 you ask for exactly that. This option is only","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":243925,"byte_end":244001,"line_start":3318,"line_end":3318,"column_start":5,"column_end":81}},{"value":"/ > supported for DarwinSSL, NSS and OpenSSL.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":244006,"byte_end":244053,"line_start":3319,"line_end":3319,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":861},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/list.rs","byte_start":244933,"byte_end":244937,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"List","qualname":"::easy::list::List","value":"List {  }","parent":null,"children":[{"krate":0,"index":862}],"decl_id":null,"docs":" A linked list of a strings\n","sig":null,"attributes":[{"value":"/ A linked list of a strings","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/list.rs","byte_start":244891,"byte_end":244921,"line_start":8,"line_end":8,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1335},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/list.rs","byte_start":245035,"byte_end":245039,"line_start":15,"line_end":15,"column_start":12,"column_end":16},"name":"Iter","qualname":"::easy::list::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":1337},{"krate":0,"index":1338}],"decl_id":null,"docs":" An iterator over `List`\n","sig":null,"attributes":[{"value":"/ An iterator over `List`","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/list.rs","byte_start":244979,"byte_end":245006,"line_start":13,"line_end":13,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":867},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/list.rs","byte_start":245358,"byte_end":245361,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<List>::new","value":"fn () -> List","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty list of strings.\n","sig":null,"attributes":[{"value":"/ Creates a new empty list of strings.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/list.rs","byte_start":245306,"byte_end":245346,"line_start":31,"line_end":31,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":868},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/list.rs","byte_start":245493,"byte_end":245499,"line_start":39,"line_end":39,"column_start":12,"column_end":18},"name":"append","qualname":"<List>::append","value":"fn (&mut self, data: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Appends some data into this list.\n","sig":null,"attributes":[{"value":"/ Appends some data into this list.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/list.rs","byte_start":245444,"byte_end":245481,"line_start":38,"line_end":38,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":869},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/list.rs","byte_start":245848,"byte_end":245852,"line_start":50,"line_end":50,"column_start":12,"column_end":16},"name":"iter","qualname":"<List>::iter","value":"fn (&self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the nodes in this list.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the nodes in this list.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/list.rs","byte_start":245784,"byte_end":245836,"line_start":49,"line_end":49,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":916},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"multi","qualname":"::multi","value":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","parent":null,"children":[{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":920},{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":928},{"krate":0,"index":933},{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":941},{"krate":0,"index":944},{"krate":0,"index":947},{"krate":0,"index":951},{"krate":0,"index":954},{"krate":0,"index":958},{"krate":0,"index":960},{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":965},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1011},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1019},{"krate":0,"index":1021},{"krate":0,"index":1029},{"krate":0,"index":1032},{"krate":0,"index":1042},{"krate":0,"index":1045},{"krate":0,"index":1051},{"krate":0,"index":1053},{"krate":0,"index":1058},{"krate":0,"index":1060},{"krate":0,"index":1070},{"krate":0,"index":1072}],"decl_id":null,"docs":" Multi - initiating multiple requests simultaneously\n","sig":null,"attributes":[{"value":"! Multi - initiating multiple requests simultaneously","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":251408,"byte_end":251463,"line_start":1,"line_end":1,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":941},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":252448,"byte_end":252453,"line_start":31,"line_end":31,"column_start":12,"column_end":17},"name":"Multi","qualname":"::multi::Multi","value":"Multi {  }","parent":null,"children":[{"krate":0,"index":942},{"krate":0,"index":943}],"decl_id":null,"docs":" A multi handle for initiating multiple connections simultaneously.","sig":null,"attributes":[{"value":"/ A multi handle for initiating multiple connections simultaneously.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":251731,"byte_end":251801,"line_start":18,"line_end":18,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":251802,"byte_end":251805,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This structure corresponds to `CURLM` in libcurl and provides the ability to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":251806,"byte_end":251886,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ have multiple transfers in flight simultaneously. This handle is then used","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":251887,"byte_end":251965,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ to manage each transfer. The main purpose of a `CURLM` is for the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":251966,"byte_end":252035,"line_start":22,"line_end":22,"column_start":1,"column_end":70}},{"value":"/ *application* to drive the I/O rather than libcurl itself doing all the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":252036,"byte_end":252111,"line_start":23,"line_end":23,"column_start":1,"column_end":76}},{"value":"/ blocking. Methods like `action` allow the application to inform libcurl of","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":252112,"byte_end":252190,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/ when events have happened.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":252191,"byte_end":252221,"line_start":25,"line_end":25,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":252222,"byte_end":252225,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Lots more documentation can be found on the libcurl [multi tutorial] where","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":252226,"byte_end":252304,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ the APIs correspond pretty closely with this crate.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":252305,"byte_end":252360,"line_start":28,"line_end":28,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":252361,"byte_end":252364,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [multi tutorial]: https://curl.haxx.se/libcurl/c/libcurl-multi.html","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":252365,"byte_end":252436,"line_start":30,"line_end":30,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":947},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":252794,"byte_end":252801,"line_start":44,"line_end":44,"column_start":12,"column_end":19},"name":"Message","qualname":"::multi::Message","value":"Message {  }","parent":null,"children":[{"krate":0,"index":949},{"krate":0,"index":950}],"decl_id":null,"docs":" Message from the `messages` function of a multi handle.","sig":null,"attributes":[{"value":"/ Message from the `messages` function of a multi handle.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":252662,"byte_end":252721,"line_start":41,"line_end":41,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":252722,"byte_end":252725,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Currently only indicates whether a transfer is done.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":252726,"byte_end":252782,"line_start":43,"line_end":43,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":951},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":253157,"byte_end":253167,"line_start":54,"line_end":54,"column_start":12,"column_end":22},"name":"EasyHandle","qualname":"::multi::EasyHandle","value":"EasyHandle {  }","parent":null,"children":[{"krate":0,"index":952},{"krate":0,"index":953}],"decl_id":null,"docs":" Wrapper around an easy handle while it's owned by a multi handle.","sig":null,"attributes":[{"value":"/ Wrapper around an easy handle while it's owned by a multi handle.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":252875,"byte_end":252944,"line_start":49,"line_end":49,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":252945,"byte_end":252948,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Once an easy handle has been added to a multi handle then it can no longer","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":252949,"byte_end":253027,"line_start":51,"line_end":51,"column_start":1,"column_end":79}},{"value":"/ be used via `perform`. This handle is also used to remove the easy handle","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":253028,"byte_end":253105,"line_start":52,"line_end":52,"column_start":1,"column_end":78}},{"value":"/ from the multi handle when desired.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":253106,"byte_end":253145,"line_start":53,"line_end":53,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":954},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":253601,"byte_end":253612,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"Easy2Handle","qualname":"::multi::Easy2Handle","value":"Easy2Handle {  }","parent":null,"children":[{"krate":0,"index":956},{"krate":0,"index":957}],"decl_id":null,"docs":" Wrapper around an easy handle while it's owned by a multi handle.","sig":null,"attributes":[{"value":"/ Wrapper around an easy handle while it's owned by a multi handle.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":253319,"byte_end":253388,"line_start":60,"line_end":60,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":253389,"byte_end":253392,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ Once an easy handle has been added to a multi handle then it can no longer","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":253393,"byte_end":253471,"line_start":62,"line_end":62,"column_start":1,"column_end":79}},{"value":"/ be used via `perform`. This handle is also used to remove the easy handle","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":253472,"byte_end":253549,"line_start":63,"line_end":63,"column_start":1,"column_end":78}},{"value":"/ from the multi handle when desired.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":253550,"byte_end":253589,"line_start":64,"line_end":64,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":958},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":253984,"byte_end":253990,"line_start":75,"line_end":75,"column_start":12,"column_end":18},"name":"Events","qualname":"::multi::Events","value":"Events {  }","parent":null,"children":[{"krate":0,"index":959}],"decl_id":null,"docs":" Notification of the events that have happened on a socket.","sig":null,"attributes":[{"value":"/ Notification of the events that have happened on a socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":253771,"byte_end":253833,"line_start":71,"line_end":71,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":253834,"byte_end":253837,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ This type is passed as an argument to the `action` method on a multi handle","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":253838,"byte_end":253917,"line_start":73,"line_end":73,"column_start":1,"column_end":80}},{"value":"/ to indicate what events have occurred on a socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":253918,"byte_end":253972,"line_start":74,"line_end":74,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":960},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":254201,"byte_end":254213,"line_start":83,"line_end":83,"column_start":12,"column_end":24},"name":"SocketEvents","qualname":"::multi::SocketEvents","value":"SocketEvents {  }","parent":null,"children":[{"krate":0,"index":961}],"decl_id":null,"docs":" Notification of events that are requested on a socket.","sig":null,"attributes":[{"value":"/ Notification of events that are requested on a socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":254013,"byte_end":254071,"line_start":79,"line_end":79,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":254072,"byte_end":254075,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ This type is yielded to the `socket_function` callback to indicate what","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":254076,"byte_end":254151,"line_start":81,"line_end":81,"column_start":1,"column_end":76}},{"value":"/ events are requested on a socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":254152,"byte_end":254189,"line_start":82,"line_end":82,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":962},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":254303,"byte_end":254309,"line_start":88,"line_end":88,"column_start":10,"column_end":16},"name":"Socket","qualname":"::multi::Socket","value":"curl_sys::curl_socket_t","parent":null,"children":[],"decl_id":null,"docs":" Raw underlying socket type that the multi handles use\n","sig":null,"attributes":[{"value":"/ Raw underlying socket type that the multi handles use","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":254236,"byte_end":254293,"line_start":87,"line_end":87,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":963},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":254430,"byte_end":254436,"line_start":91,"line_end":91,"column_start":12,"column_end":18},"name":"WaitFd","qualname":"::multi::WaitFd","value":"WaitFd {  }","parent":null,"children":[{"krate":0,"index":964}],"decl_id":null,"docs":" File descriptor to wait on for use with the `wait` method on a multi handle.\n","sig":null,"attributes":[{"value":"/ File descriptor to wait on for use with the `wait` method on a multi handle.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":254338,"byte_end":254418,"line_start":90,"line_end":90,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":966},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":254600,"byte_end":254603,"line_start":98,"line_end":98,"column_start":12,"column_end":15},"name":"new","qualname":"<Multi>::new","value":"fn () -> Multi","parent":null,"children":[],"decl_id":null,"docs":" Creates a new multi session through which multiple HTTP transfers can be\n initiated.\n","sig":null,"attributes":[{"value":"/ Creates a new multi session through which multiple HTTP transfers can be","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":254493,"byte_end":254569,"line_start":96,"line_end":96,"column_start":5,"column_end":81}},{"value":"/ initiated.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":254574,"byte_end":254588,"line_start":97,"line_end":97,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":969},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":255754,"byte_end":255769,"line_start":127,"line_end":127,"column_start":12,"column_end":27},"name":"socket_function","qualname":"<Multi>::socket_function","value":"fn <F> (&mut self, f: F) -> Result<(), MultiError>","parent":null,"children":[],"decl_id":null,"docs":" Set the callback informed about what to wait for","sig":null,"attributes":[{"value":"/ Set the callback informed about what to wait for","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":254987,"byte_end":255039,"line_start":113,"line_end":113,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":255044,"byte_end":255047,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ When the `action` function runs, it informs the application about","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":255052,"byte_end":255121,"line_start":115,"line_end":115,"column_start":5,"column_end":74}},{"value":"/ updates in the socket (file descriptor) status by doing none, one, or","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":255126,"byte_end":255199,"line_start":116,"line_end":116,"column_start":5,"column_end":78}},{"value":"/ multiple calls to the socket callback. The callback gets status updates","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":255204,"byte_end":255279,"line_start":117,"line_end":117,"column_start":5,"column_end":80}},{"value":"/ with changes since the previous time the callback was called. See","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":255284,"byte_end":255353,"line_start":118,"line_end":118,"column_start":5,"column_end":74}},{"value":"/ `action` for more details on how the callback is used and should work.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":255358,"byte_end":255432,"line_start":119,"line_end":119,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":255437,"byte_end":255440,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ The `SocketEvents` parameter informs the callback on the status of the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":255445,"byte_end":255519,"line_start":121,"line_end":121,"column_start":5,"column_end":79}},{"value":"/ given socket, and the methods on that type can be used to learn about","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":255524,"byte_end":255597,"line_start":122,"line_end":122,"column_start":5,"column_end":78}},{"value":"/ what's going on with the socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":255602,"byte_end":255638,"line_start":123,"line_end":123,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":255643,"byte_end":255646,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ The third `usize` parameter is a custom value set by the `assign` method","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":255651,"byte_end":255727,"line_start":125,"line_end":125,"column_start":5,"column_end":81}},{"value":"/ below.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":255732,"byte_end":255742,"line_start":126,"line_end":126,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":974},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":258474,"byte_end":258480,"line_start":196,"line_end":196,"column_start":12,"column_end":18},"name":"assign","qualname":"<Multi>::assign","value":"fn (&self, socket: Socket, token: usize) -> Result<(), MultiError>","parent":null,"children":[],"decl_id":null,"docs":" Set data to associate with an internal socket","sig":null,"attributes":[{"value":"/ Set data to associate with an internal socket","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":256946,"byte_end":256995,"line_start":164,"line_end":164,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":257000,"byte_end":257003,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This function creates an association in the multi handle between the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":257008,"byte_end":257080,"line_start":166,"line_end":166,"column_start":5,"column_end":77}},{"value":"/ given socket and a private token of the application. This is designed","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":257085,"byte_end":257158,"line_start":167,"line_end":167,"column_start":5,"column_end":78}},{"value":"/ for `action` uses.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":257163,"byte_end":257185,"line_start":168,"line_end":168,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":257190,"byte_end":257193,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ When set, the token will be passed to all future socket callbacks for","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":257198,"byte_end":257271,"line_start":170,"line_end":170,"column_start":5,"column_end":78}},{"value":"/ the specified socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":257276,"byte_end":257301,"line_start":171,"line_end":171,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":257306,"byte_end":257309,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ If the given socket isn't already in use by libcurl, this function will","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":257314,"byte_end":257389,"line_start":173,"line_end":173,"column_start":5,"column_end":80}},{"value":"/ return an error.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":257394,"byte_end":257414,"line_start":174,"line_end":174,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":257419,"byte_end":257422,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ libcurl only keeps one single token associated with a socket, so","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":257427,"byte_end":257495,"line_start":176,"line_end":176,"column_start":5,"column_end":73}},{"value":"/ calling this function several times for the same socket will make the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":257500,"byte_end":257573,"line_start":177,"line_end":177,"column_start":5,"column_end":78}},{"value":"/ last set token get used.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":257578,"byte_end":257606,"line_start":178,"line_end":178,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":257611,"byte_end":257614,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ The idea here being that this association (socket to token) is something","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":257619,"byte_end":257695,"line_start":180,"line_end":180,"column_start":5,"column_end":81}},{"value":"/ that just about every application that uses this API will need and then","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":257700,"byte_end":257775,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ libcurl can just as well do it since it already has an internal hash","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":257780,"byte_end":257852,"line_start":182,"line_end":182,"column_start":5,"column_end":77}},{"value":"/ table lookup for this.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":257857,"byte_end":257883,"line_start":183,"line_end":183,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":257888,"byte_end":257891,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Typical Usage","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":257896,"byte_end":257915,"line_start":185,"line_end":185,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":257920,"byte_end":257923,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ In a typical application you allocate a struct or at least use some kind","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":257928,"byte_end":258004,"line_start":187,"line_end":187,"column_start":5,"column_end":81}},{"value":"/ of semi-dynamic data for each socket that we must wait for action on","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":258009,"byte_end":258081,"line_start":188,"line_end":188,"column_start":5,"column_end":77}},{"value":"/ when using the `action` approach.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":258086,"byte_end":258123,"line_start":189,"line_end":189,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":258128,"byte_end":258131,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ When our socket-callback gets called by libcurl and we get to know about","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":258136,"byte_end":258212,"line_start":191,"line_end":191,"column_start":5,"column_end":81}},{"value":"/ yet another socket to wait for, we can use `assign` to point out the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":258217,"byte_end":258289,"line_start":192,"line_end":192,"column_start":5,"column_end":77}},{"value":"/ particular data so that when we get updates about this same socket","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":258294,"byte_end":258364,"line_start":193,"line_end":193,"column_start":5,"column_end":75}},{"value":"/ again, we don't have to find the struct associated with this socket by","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":258369,"byte_end":258443,"line_start":194,"line_end":194,"column_start":5,"column_end":79}},{"value":"/ ourselves.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":258448,"byte_end":258462,"line_start":195,"line_end":195,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":975},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":259629,"byte_end":259643,"line_start":226,"line_end":226,"column_start":12,"column_end":26},"name":"timer_function","qualname":"<Multi>::timer_function","value":"fn <F> (&mut self, f: F) -> Result<(), MultiError>","parent":null,"children":[],"decl_id":null,"docs":" Set callback to receive timeout values","sig":null,"attributes":[{"value":"/ Set callback to receive timeout values","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":258748,"byte_end":258790,"line_start":207,"line_end":207,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":258795,"byte_end":258798,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ Certain features, such as timeouts and retries, require you to call","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":258803,"byte_end":258874,"line_start":209,"line_end":209,"column_start":5,"column_end":76}},{"value":"/ libcurl even when there is no activity on the file descriptors.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":258879,"byte_end":258946,"line_start":210,"line_end":210,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":258951,"byte_end":258954,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ Your callback function should install a non-repeating timer with the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":258959,"byte_end":259031,"line_start":212,"line_end":212,"column_start":5,"column_end":77}},{"value":"/ interval specified. Each time that timer fires, call either `action` or","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":259036,"byte_end":259111,"line_start":213,"line_end":213,"column_start":5,"column_end":80}},{"value":"/ `perform`, depending on which interface you use.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":259116,"byte_end":259168,"line_start":214,"line_end":214,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":259173,"byte_end":259176,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ A timeout value of `None` means you should delete your timer.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":259181,"byte_end":259246,"line_start":216,"line_end":216,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":259251,"byte_end":259254,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ A timeout value of 0 means you should call `action` or `perform` (once)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":259259,"byte_end":259334,"line_start":218,"line_end":218,"column_start":5,"column_end":80}},{"value":"/ as soon as possible.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":259339,"byte_end":259363,"line_start":219,"line_end":219,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":259368,"byte_end":259371,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ This callback will only be called when the timeout changes.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":259376,"byte_end":259439,"line_start":221,"line_end":221,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":259444,"byte_end":259447,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ The timer callback should return `true` on success, and `false` on","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":259452,"byte_end":259522,"line_start":223,"line_end":223,"column_start":5,"column_end":75}},{"value":"/ error. This callback can be used instead of, or in addition to,","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":259527,"byte_end":259594,"line_start":224,"line_end":224,"column_start":5,"column_end":72}},{"value":"/ `get_timeout`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":259599,"byte_end":259617,"line_start":225,"line_end":225,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":980},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":261608,"byte_end":261618,"line_start":281,"line_end":281,"column_start":12,"column_end":22},"name":"pipelining","qualname":"<Multi>::pipelining","value":"fn (&mut self, http_1: bool, multiplex: bool) -> Result<(), MultiError>","parent":null,"children":[],"decl_id":null,"docs":" Enable or disable HTTP pipelining and multiplexing.","sig":null,"attributes":[{"value":"/ Enable or disable HTTP pipelining and multiplexing.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":260977,"byte_end":261032,"line_start":270,"line_end":270,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":261037,"byte_end":261040,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ When http_1 is true, enable HTTP/1.1 pipelining, which means that if","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":261045,"byte_end":261117,"line_start":272,"line_end":272,"column_start":5,"column_end":77}},{"value":"/ you add a second request that can use an already existing connection,","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":261122,"byte_end":261195,"line_start":273,"line_end":273,"column_start":5,"column_end":78}},{"value":"/ the second request will be \"piped\" on the same connection rather than","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":261200,"byte_end":261273,"line_start":274,"line_end":274,"column_start":5,"column_end":78}},{"value":"/ being executed in parallel.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":261278,"byte_end":261309,"line_start":275,"line_end":275,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":261314,"byte_end":261317,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ When multiplex is true, enable HTTP/2 multiplexing, which means that","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":261322,"byte_end":261394,"line_start":277,"line_end":277,"column_start":5,"column_end":77}},{"value":"/ follow-up requests can re-use an existing connection and send the new","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":261399,"byte_end":261472,"line_start":278,"line_end":278,"column_start":5,"column_end":78}},{"value":"/ request multiplexed over that at the same time as other transfers are","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":261477,"byte_end":261550,"line_start":279,"line_end":279,"column_start":5,"column_end":78}},{"value":"/ already using that single connection.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":261555,"byte_end":261596,"line_start":280,"line_end":280,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":981},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":262531,"byte_end":262555,"line_start":299,"line_end":299,"column_start":12,"column_end":36},"name":"set_max_host_connections","qualname":"<Multi>::set_max_host_connections","value":"fn (&mut self, val: usize) -> Result<(), MultiError>","parent":null,"children":[],"decl_id":null,"docs":" Sets the max number of connections to a single host.","sig":null,"attributes":[{"value":"/ Sets the max number of connections to a single host.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":261965,"byte_end":262021,"line_start":291,"line_end":291,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":262026,"byte_end":262029,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Pass a long to indicate the max number of simultaneously open connections","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":262034,"byte_end":262111,"line_start":293,"line_end":293,"column_start":5,"column_end":82}},{"value":"/ to a single host (a host being the same as a host name + port number pair).","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":262116,"byte_end":262195,"line_start":294,"line_end":294,"column_start":5,"column_end":84}},{"value":"/ For each new session to a host, libcurl will open up a new connection up to the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":262200,"byte_end":262283,"line_start":295,"line_end":295,"column_start":5,"column_end":88}},{"value":"/ limit set by the provided value. When the limit is reached, the sessions will","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":262288,"byte_end":262369,"line_start":296,"line_end":296,"column_start":5,"column_end":86}},{"value":"/ be pending until a connection becomes available. If pipelining is enabled,","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":262374,"byte_end":262452,"line_start":297,"line_end":297,"column_start":5,"column_end":83}},{"value":"/ libcurl will try to pipeline if the host is capable of it.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":262457,"byte_end":262519,"line_start":298,"line_end":298,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":982},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":263235,"byte_end":263260,"line_start":311,"line_end":311,"column_start":12,"column_end":37},"name":"set_max_total_connections","qualname":"<Multi>::set_max_total_connections","value":"fn (&mut self, val: usize) -> Result<(), MultiError>","parent":null,"children":[],"decl_id":null,"docs":" Sets the max simultaneously open connections.","sig":null,"attributes":[{"value":"/ Sets the max simultaneously open connections.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":262699,"byte_end":262748,"line_start":303,"line_end":303,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":262753,"byte_end":262756,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ The set number will be used as the maximum number of simultaneously open","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":262761,"byte_end":262837,"line_start":305,"line_end":305,"column_start":5,"column_end":81}},{"value":"/ connections in total using this multi handle. For each new session,","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":262842,"byte_end":262913,"line_start":306,"line_end":306,"column_start":5,"column_end":76}},{"value":"/ libcurl will open a new connection up to the limit set by the provided","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":262918,"byte_end":262992,"line_start":307,"line_end":307,"column_start":5,"column_end":79}},{"value":"/ value. When the limit is reached, the sessions will be pending until","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":262997,"byte_end":263069,"line_start":308,"line_end":308,"column_start":5,"column_end":77}},{"value":"/ there are available connections. If pipelining is enabled, libcurl will","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":263074,"byte_end":263149,"line_start":309,"line_end":309,"column_start":5,"column_end":80}},{"value":"/ try to pipeline or use multiplexing if the host is capable of it.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":263154,"byte_end":263223,"line_start":310,"line_end":310,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":983},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":264175,"byte_end":264191,"line_start":330,"line_end":330,"column_start":12,"column_end":28},"name":"set_max_connects","qualname":"<Multi>::set_max_connects","value":"fn (&mut self, val: usize) -> Result<(), MultiError>","parent":null,"children":[],"decl_id":null,"docs":" Set size of connection cache.","sig":null,"attributes":[{"value":"/ Set size of connection cache.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":263405,"byte_end":263438,"line_start":315,"line_end":315,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":263443,"byte_end":263446,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ The set number will be used as the maximum amount of simultaneously open","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":263451,"byte_end":263527,"line_start":317,"line_end":317,"column_start":5,"column_end":81}},{"value":"/ connections that libcurl may keep in its connection cache after","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":263532,"byte_end":263599,"line_start":318,"line_end":318,"column_start":5,"column_end":72}},{"value":"/ completed use. By default libcurl will enlarge the size for each added","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":263604,"byte_end":263678,"line_start":319,"line_end":319,"column_start":5,"column_end":79}},{"value":"/ easy handle to make it fit 4 times the number of added easy handles.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":263683,"byte_end":263755,"line_start":320,"line_end":320,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":263760,"byte_end":263763,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ By setting this option, you can prevent the cache size from growing","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":263768,"byte_end":263839,"line_start":322,"line_end":322,"column_start":5,"column_end":76}},{"value":"/ beyond the limit set by you.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":263844,"byte_end":263876,"line_start":323,"line_end":323,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":263881,"byte_end":263884,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ When the cache is full, curl closes the oldest one in the cache to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":263889,"byte_end":263959,"line_start":325,"line_end":325,"column_start":5,"column_end":75}},{"value":"/ prevent the number of open connections from increasing.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":263964,"byte_end":264023,"line_start":326,"line_end":326,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":264028,"byte_end":264031,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ See [`set_max_total_connections`](#method.set_max_total_connections) for","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":264036,"byte_end":264112,"line_start":328,"line_end":328,"column_start":5,"column_end":81}},{"value":"/ limiting the number of active connections.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":264117,"byte_end":264163,"line_start":329,"line_end":329,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":984},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":264604,"byte_end":264623,"line_start":339,"line_end":339,"column_start":12,"column_end":31},"name":"set_pipeline_length","qualname":"<Multi>::set_pipeline_length","value":"fn (&mut self, val: usize) -> Result<(), MultiError>","parent":null,"children":[],"decl_id":null,"docs":" Sets the pipeline length.","sig":null,"attributes":[{"value":"/ Sets the pipeline length.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":264326,"byte_end":264355,"line_start":334,"line_end":334,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":264360,"byte_end":264363,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ This sets the max number that will be used as the maximum amount of","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":264368,"byte_end":264439,"line_start":336,"line_end":336,"column_start":5,"column_end":76}},{"value":"/ outstanding requests in an HTTP/1.1 pipelined connection. This option","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":264444,"byte_end":264517,"line_start":337,"line_end":337,"column_start":5,"column_end":78}},{"value":"/ is only used for HTTP/1.1 pipelining, and not HTTP/2 multiplexing.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":264522,"byte_end":264592,"line_start":338,"line_end":338,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":987},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":266203,"byte_end":266206,"line_start":374,"line_end":374,"column_start":12,"column_end":15},"name":"add","qualname":"<Multi>::add","value":"fn (&self, mut easy: Easy) -> Result<EasyHandle, MultiError>","parent":null,"children":[],"decl_id":null,"docs":" Add an easy handle to a multi session","sig":null,"attributes":[{"value":"/ Add an easy handle to a multi session","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":265159,"byte_end":265200,"line_start":355,"line_end":355,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":265205,"byte_end":265208,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ Adds a standard easy handle to the multi stack. This function call will","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":265213,"byte_end":265288,"line_start":357,"line_end":357,"column_start":5,"column_end":80}},{"value":"/ make this multi handle control the specified easy handle.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":265293,"byte_end":265354,"line_start":358,"line_end":358,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":265359,"byte_end":265362,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ When an easy interface is added to a multi handle, it will use a shared","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":265367,"byte_end":265442,"line_start":360,"line_end":360,"column_start":5,"column_end":80}},{"value":"/ connection cache owned by the multi handle. Removing and adding new easy","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":265447,"byte_end":265523,"line_start":361,"line_end":361,"column_start":5,"column_end":81}},{"value":"/ handles will not affect the pool of connections or the ability to do","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":265528,"byte_end":265600,"line_start":362,"line_end":362,"column_start":5,"column_end":77}},{"value":"/ connection re-use.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":265605,"byte_end":265627,"line_start":363,"line_end":363,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":265632,"byte_end":265635,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ If you have `timer_function` set in the multi handle (and you really","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":265640,"byte_end":265712,"line_start":365,"line_end":365,"column_start":5,"column_end":77}},{"value":"/ should if you're working event-based with `action` and friends), that","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":265717,"byte_end":265790,"line_start":366,"line_end":366,"column_start":5,"column_end":78}},{"value":"/ callback will be called from within this function to ask for an updated","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":265795,"byte_end":265870,"line_start":367,"line_end":367,"column_start":5,"column_end":80}},{"value":"/ timer so that your main event loop will get the activity on this handle","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":265875,"byte_end":265950,"line_start":368,"line_end":368,"column_start":5,"column_end":80}},{"value":"/ to get started.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":265955,"byte_end":265974,"line_start":369,"line_end":369,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":265979,"byte_end":265982,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ The easy handle will remain added to the multi handle until you remove","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":265987,"byte_end":266061,"line_start":371,"line_end":371,"column_start":5,"column_end":79}},{"value":"/ it again with `remove` on the returned handle - even when a transfer","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":266066,"byte_end":266138,"line_start":372,"line_end":372,"column_start":5,"column_end":77}},{"value":"/ with that specific easy handle is completed.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":266143,"byte_end":266191,"line_start":373,"line_end":373,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":988},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":266706,"byte_end":266710,"line_start":389,"line_end":389,"column_start":12,"column_end":16},"name":"add2","qualname":"<Multi>::add2","value":"fn <H> (&self, easy: Easy2<H>) -> Result<Easy2Handle<H>, MultiError>","parent":null,"children":[],"decl_id":null,"docs":" Same as `add`, but works with the `Easy2` type.\n","sig":null,"attributes":[{"value":"/ Same as `add`, but works with the `Easy2` type.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":266643,"byte_end":266694,"line_start":388,"line_end":388,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":990},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":267571,"byte_end":267577,"line_start":410,"line_end":410,"column_start":12,"column_end":18},"name":"remove","qualname":"<Multi>::remove","value":"fn (&self, easy: EasyHandle) -> Result<Easy, MultiError>","parent":null,"children":[],"decl_id":null,"docs":" Remove an easy handle from this multi session","sig":null,"attributes":[{"value":"/ Remove an easy handle from this multi session","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":266984,"byte_end":267033,"line_start":399,"line_end":399,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":267038,"byte_end":267041,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ Removes the easy handle from this multi handle. This will make the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":267046,"byte_end":267116,"line_start":401,"line_end":401,"column_start":5,"column_end":75}},{"value":"/ returned easy handle be removed from this multi handle's control.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":267121,"byte_end":267190,"line_start":402,"line_end":402,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":267195,"byte_end":267198,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ When the easy handle has been removed from a multi stack, it is again","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":267203,"byte_end":267276,"line_start":404,"line_end":404,"column_start":5,"column_end":78}},{"value":"/ perfectly legal to invoke `perform` on it.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":267281,"byte_end":267327,"line_start":405,"line_end":405,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":267332,"byte_end":267335,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ Removing an easy handle while being used is perfectly legal and will","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":267340,"byte_end":267412,"line_start":407,"line_end":407,"column_start":5,"column_end":77}},{"value":"/ effectively halt the transfer in progress involving that easy handle.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":267417,"byte_end":267490,"line_start":408,"line_end":408,"column_start":5,"column_end":78}},{"value":"/ All other easy handles and transfers will remain unaffected.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":267495,"byte_end":267559,"line_start":409,"line_end":409,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":991},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":267877,"byte_end":267884,"line_start":421,"line_end":421,"column_start":12,"column_end":19},"name":"remove2","qualname":"<Multi>::remove2","value":"fn <H> (&self, easy: Easy2Handle<H>) -> Result<Easy2<H>, MultiError>","parent":null,"children":[],"decl_id":null,"docs":" Same as `remove`, but for `Easy2Handle`.\n","sig":null,"attributes":[{"value":"/ Same as `remove`, but for `Easy2Handle`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":267821,"byte_end":267865,"line_start":420,"line_end":420,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":993},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":268496,"byte_end":268504,"line_start":437,"line_end":437,"column_start":12,"column_end":20},"name":"messages","qualname":"<Multi>::messages","value":"fn <F> (&self, mut f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Read multi stack informationals","sig":null,"attributes":[{"value":"/ Read multi stack informationals","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":268139,"byte_end":268174,"line_start":431,"line_end":431,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":268179,"byte_end":268182,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ Ask the multi handle if there are any messages/informationals from the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":268187,"byte_end":268261,"line_start":433,"line_end":433,"column_start":5,"column_end":79}},{"value":"/ individual transfers. Messages may include informationals such as an","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":268266,"byte_end":268338,"line_start":434,"line_end":434,"column_start":5,"column_end":77}},{"value":"/ error code from the transfer or just the fact that a transfer is","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":268343,"byte_end":268411,"line_start":435,"line_end":435,"column_start":5,"column_end":73}},{"value":"/ completed. More details on these should be written down as well.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":268416,"byte_end":268484,"line_start":436,"line_end":436,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":996},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":270226,"byte_end":270232,"line_start":478,"line_end":478,"column_start":12,"column_end":18},"name":"action","qualname":"<Multi>::action","value":"fn (&self, socket: Socket, events: &Events) -> Result<u32, MultiError>","parent":null,"children":[],"decl_id":null,"docs":" Inform of reads/writes available data given an action","sig":null,"attributes":[{"value":"/ Inform of reads/writes available data given an action","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":268967,"byte_end":269024,"line_start":457,"line_end":457,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":269029,"byte_end":269032,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ When the application has detected action on a socket handled by libcurl,","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":269037,"byte_end":269113,"line_start":459,"line_end":459,"column_start":5,"column_end":81}},{"value":"/ it should call this function with the sockfd argument set to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":269118,"byte_end":269182,"line_start":460,"line_end":460,"column_start":5,"column_end":69}},{"value":"/ the socket with the action. When the events on a socket are known, they","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":269187,"byte_end":269262,"line_start":461,"line_end":461,"column_start":5,"column_end":80}},{"value":"/ can be passed `events`. When the events on a socket are unknown, pass","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":269267,"byte_end":269340,"line_start":462,"line_end":462,"column_start":5,"column_end":78}},{"value":"/ `Events::new()` instead, and libcurl will test the descriptor","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":269345,"byte_end":269410,"line_start":463,"line_end":463,"column_start":5,"column_end":70}},{"value":"/ internally.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":269415,"byte_end":269430,"line_start":464,"line_end":464,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":269435,"byte_end":269438,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ The returned integer will contain the number of running easy handles","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":269443,"byte_end":269515,"line_start":466,"line_end":466,"column_start":5,"column_end":77}},{"value":"/ within the multi handle. When this number reaches zero, all transfers","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":269520,"byte_end":269593,"line_start":467,"line_end":467,"column_start":5,"column_end":78}},{"value":"/ are complete/done. When you call `action` on a specific socket and the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":269598,"byte_end":269672,"line_start":468,"line_end":468,"column_start":5,"column_end":79}},{"value":"/ counter decreases by one, it DOES NOT necessarily mean that this exact","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":269677,"byte_end":269751,"line_start":469,"line_end":469,"column_start":5,"column_end":79}},{"value":"/ socket/transfer is the one that completed. Use `messages` to figure out","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":269756,"byte_end":269831,"line_start":470,"line_end":470,"column_start":5,"column_end":80}},{"value":"/ which easy handle that completed.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":269836,"byte_end":269873,"line_start":471,"line_end":471,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":269878,"byte_end":269881,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ The `action` function informs the application about updates in the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":269886,"byte_end":269956,"line_start":473,"line_end":473,"column_start":5,"column_end":75}},{"value":"/ socket (file descriptor) status by doing none, one, or multiple calls to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":269961,"byte_end":270037,"line_start":474,"line_end":474,"column_start":5,"column_end":81}},{"value":"/ the socket callback function set with the `socket_function` method. They","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":270042,"byte_end":270118,"line_start":475,"line_end":475,"column_start":5,"column_end":81}},{"value":"/ update the status with changes since the previous time the callback was","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":270123,"byte_end":270198,"line_start":476,"line_end":476,"column_start":5,"column_end":80}},{"value":"/ called.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":270203,"byte_end":270214,"line_start":477,"line_end":477,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":997},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":271580,"byte_end":271587,"line_start":506,"line_end":506,"column_start":12,"column_end":19},"name":"timeout","qualname":"<Multi>::timeout","value":"fn (&self) -> Result<u32, MultiError>","parent":null,"children":[],"decl_id":null,"docs":" Inform libcurl that a timeout has expired and sockets should be tested.","sig":null,"attributes":[{"value":"/ Inform libcurl that a timeout has expired and sockets should be tested.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":270584,"byte_end":270659,"line_start":491,"line_end":491,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":270664,"byte_end":270667,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ The returned integer will contain the number of running easy handles","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":270672,"byte_end":270744,"line_start":493,"line_end":493,"column_start":5,"column_end":77}},{"value":"/ within the multi handle. When this number reaches zero, all transfers","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":270749,"byte_end":270822,"line_start":494,"line_end":494,"column_start":5,"column_end":78}},{"value":"/ are complete/done. When you call `action` on a specific socket and the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":270827,"byte_end":270901,"line_start":495,"line_end":495,"column_start":5,"column_end":79}},{"value":"/ counter decreases by one, it DOES NOT necessarily mean that this exact","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":270906,"byte_end":270980,"line_start":496,"line_end":496,"column_start":5,"column_end":79}},{"value":"/ socket/transfer is the one that completed. Use `messages` to figure out","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":270985,"byte_end":271060,"line_start":497,"line_end":497,"column_start":5,"column_end":80}},{"value":"/ which easy handle that completed.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":271065,"byte_end":271102,"line_start":498,"line_end":498,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":271107,"byte_end":271110,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ Get the timeout time by calling the `timer_function` method. Your","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":271115,"byte_end":271184,"line_start":500,"line_end":500,"column_start":5,"column_end":74}},{"value":"/ application will then get called with information on how long to wait","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":271189,"byte_end":271262,"line_start":501,"line_end":501,"column_start":5,"column_end":78}},{"value":"/ for socket actions at most before doing the timeout action: call the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":271267,"byte_end":271339,"line_start":502,"line_end":502,"column_start":5,"column_end":77}},{"value":"/ `timeout` method. You can also use the `get_timeout` function to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":271344,"byte_end":271412,"line_start":503,"line_end":503,"column_start":5,"column_end":73}},{"value":"/ poll the value at any given time, but for an event-based system using","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":271417,"byte_end":271490,"line_start":504,"line_end":504,"column_start":5,"column_end":78}},{"value":"/ the callback is far better than relying on polling the timeout value.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":271495,"byte_end":271568,"line_start":505,"line_end":505,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":998},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":272846,"byte_end":272857,"line_start":536,"line_end":536,"column_start":12,"column_end":23},"name":"get_timeout","qualname":"<Multi>::get_timeout","value":"fn (&self) -> Result<Option<Duration>, MultiError>","parent":null,"children":[],"decl_id":null,"docs":" Get how long to wait for action before proceeding","sig":null,"attributes":[{"value":"/ Get how long to wait for action before proceeding","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":271915,"byte_end":271968,"line_start":519,"line_end":519,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":271973,"byte_end":271976,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ An application using the libcurl multi interface should call","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":271981,"byte_end":272045,"line_start":521,"line_end":521,"column_start":5,"column_end":69}},{"value":"/ `get_timeout` to figure out how long it should wait for socket actions -","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":272050,"byte_end":272126,"line_start":522,"line_end":522,"column_start":5,"column_end":81}},{"value":"/ at most - before proceeding.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":272131,"byte_end":272163,"line_start":523,"line_end":523,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":272168,"byte_end":272171,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ Proceeding means either doing the socket-style timeout action: call the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":272176,"byte_end":272251,"line_start":525,"line_end":525,"column_start":5,"column_end":80}},{"value":"/ `timeout` function, or call `perform` if you're using the simpler and","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":272256,"byte_end":272329,"line_start":526,"line_end":526,"column_start":5,"column_end":78}},{"value":"/ older multi interface approach.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":272334,"byte_end":272369,"line_start":527,"line_end":527,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":272374,"byte_end":272377,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ The timeout value returned is the duration at this very moment. If 0, it","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":272382,"byte_end":272458,"line_start":529,"line_end":529,"column_start":5,"column_end":81}},{"value":"/ means you should proceed immediately without waiting for anything. If it","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":272463,"byte_end":272539,"line_start":530,"line_end":530,"column_start":5,"column_end":81}},{"value":"/ returns `None`, there's no timeout at all set.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":272544,"byte_end":272594,"line_start":531,"line_end":531,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":272599,"byte_end":272602,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ Note: if libcurl returns a `None` timeout here, it just means that","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":272607,"byte_end":272677,"line_start":533,"line_end":533,"column_start":5,"column_end":75}},{"value":"/ libcurl currently has no stored timeout value. You must not wait too","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":272682,"byte_end":272754,"line_start":534,"line_end":534,"column_start":5,"column_end":77}},{"value":"/ long (more than a few seconds perhaps) before you call `perform` again.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":272759,"byte_end":272834,"line_start":535,"line_end":535,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":999},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":273990,"byte_end":273994,"line_start":573,"line_end":573,"column_start":12,"column_end":16},"name":"wait","qualname":"<Multi>::wait","value":"fn (&self, waitfds: &mut [WaitFd], timeout: Duration) -> Result<u32, MultiError>","parent":null,"children":[],"decl_id":null,"docs":" Block until activity is detected or a timeout passes.","sig":null,"attributes":[{"value":"/ Block until activity is detected or a timeout passes.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":273181,"byte_end":273238,"line_start":548,"line_end":548,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":273243,"byte_end":273246,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ The timeout is used in millisecond-precision. Large durations are","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":273251,"byte_end":273320,"line_start":550,"line_end":550,"column_start":5,"column_end":74}},{"value":"/ clamped at the maximum value curl accepts.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":273325,"byte_end":273371,"line_start":551,"line_end":551,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":273376,"byte_end":273379,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ The returned integer will contain the number of internal file","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":273384,"byte_end":273449,"line_start":553,"line_end":553,"column_start":5,"column_end":70}},{"value":"/ descriptors on which interesting events occured.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":273454,"byte_end":273506,"line_start":554,"line_end":554,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":273511,"byte_end":273514,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ This function is a simpler alternative to using `fdset()` and `select()`","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":273519,"byte_end":273595,"line_start":556,"line_end":556,"column_start":5,"column_end":81}},{"value":"/ and does not suffer from file descriptor limits.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":273600,"byte_end":273652,"line_start":557,"line_end":557,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":273657,"byte_end":273660,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":273665,"byte_end":273678,"line_start":559,"line_end":559,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":273683,"byte_end":273686,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":273691,"byte_end":273698,"line_start":561,"line_end":561,"column_start":5,"column_end":12}},{"value":"/ use curl::multi::Multi;","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":273703,"byte_end":273730,"line_start":562,"line_end":562,"column_start":5,"column_end":32}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":273735,"byte_end":273763,"line_start":563,"line_end":563,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":273768,"byte_end":273771,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ let m = Multi::new();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":273776,"byte_end":273801,"line_start":565,"line_end":565,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":273806,"byte_end":273809,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ // Add some Easy handles...","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":273814,"byte_end":273845,"line_start":567,"line_end":567,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":273850,"byte_end":273853,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ while m.perform().unwrap() > 0 {","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":273858,"byte_end":273894,"line_start":569,"line_end":569,"column_start":5,"column_end":41}},{"value":"/     m.wait(&mut [], Duration::from_secs(1)).unwrap();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":273899,"byte_end":273956,"line_start":570,"line_end":570,"column_start":5,"column_end":62}},{"value":"/ }","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":273961,"byte_end":273966,"line_start":571,"line_end":571,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":273971,"byte_end":273978,"line_start":572,"line_end":572,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1000},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":277074,"byte_end":277081,"line_start":636,"line_end":636,"column_start":12,"column_end":19},"name":"perform","qualname":"<Multi>::perform","value":"fn (&self) -> Result<u32, MultiError>","parent":null,"children":[],"decl_id":null,"docs":" Reads/writes available data from each easy handle.","sig":null,"attributes":[{"value":"/ Reads/writes available data from each easy handle.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":274741,"byte_end":274795,"line_start":596,"line_end":596,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":274800,"byte_end":274803,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ This function handles transfers on all the added handles that need","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":274808,"byte_end":274878,"line_start":598,"line_end":598,"column_start":5,"column_end":75}},{"value":"/ attention in an non-blocking fashion.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":274883,"byte_end":274924,"line_start":599,"line_end":599,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":274929,"byte_end":274932,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ When an application has found out there's data available for this handle","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":274937,"byte_end":275013,"line_start":601,"line_end":601,"column_start":5,"column_end":81}},{"value":"/ or a timeout has elapsed, the application should call this function to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":275018,"byte_end":275092,"line_start":602,"line_end":602,"column_start":5,"column_end":79}},{"value":"/ read/write whatever there is to read or write right now etc.  This","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":275097,"byte_end":275167,"line_start":603,"line_end":603,"column_start":5,"column_end":75}},{"value":"/ method returns as soon as the reads/writes are done. This function does","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":275172,"byte_end":275247,"line_start":604,"line_end":604,"column_start":5,"column_end":80}},{"value":"/ not require that there actually is any data available for reading or","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":275252,"byte_end":275324,"line_start":605,"line_end":605,"column_start":5,"column_end":77}},{"value":"/ that data can be written, it can be called just in case. It will return","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":275329,"byte_end":275404,"line_start":606,"line_end":606,"column_start":5,"column_end":80}},{"value":"/ the number of handles that still transfer data.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":275409,"byte_end":275460,"line_start":607,"line_end":607,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":275465,"byte_end":275468,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ If the amount of running handles is changed from the previous call (or","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":275473,"byte_end":275547,"line_start":609,"line_end":609,"column_start":5,"column_end":79}},{"value":"/ is less than the amount of easy handles you've added to the multi","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":275552,"byte_end":275621,"line_start":610,"line_end":610,"column_start":5,"column_end":74}},{"value":"/ handle), you know that there is one or more transfers less \"running\".","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":275626,"byte_end":275699,"line_start":611,"line_end":611,"column_start":5,"column_end":78}},{"value":"/ You can then call `info` to get information about each individual","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":275704,"byte_end":275773,"line_start":612,"line_end":612,"column_start":5,"column_end":74}},{"value":"/ completed transfer, and that returned info includes `Error` and more.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":275778,"byte_end":275851,"line_start":613,"line_end":613,"column_start":5,"column_end":78}},{"value":"/ If an added handle fails very quickly, it may never be counted as a","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":275856,"byte_end":275927,"line_start":614,"line_end":614,"column_start":5,"column_end":76}},{"value":"/ running handle.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":275932,"byte_end":275951,"line_start":615,"line_end":615,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":275956,"byte_end":275959,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ When running_handles is set to zero (0) on the return of this function,","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":275964,"byte_end":276039,"line_start":617,"line_end":617,"column_start":5,"column_end":80}},{"value":"/ there is no longer any transfers in progress.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":276044,"byte_end":276093,"line_start":618,"line_end":618,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":276098,"byte_end":276101,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":276106,"byte_end":276118,"line_start":620,"line_end":620,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":276123,"byte_end":276126,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ Before libcurl version 7.20.0: If you receive `is_call_perform`, this","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":276131,"byte_end":276204,"line_start":622,"line_end":622,"column_start":5,"column_end":78}},{"value":"/ basically means that you should call `perform` again, before you select","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":276209,"byte_end":276284,"line_start":623,"line_end":623,"column_start":5,"column_end":80}},{"value":"/ on more actions. You don't have to do it immediately, but the return","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":276289,"byte_end":276361,"line_start":624,"line_end":624,"column_start":5,"column_end":77}},{"value":"/ code means that libcurl may have more data available to return or that","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":276366,"byte_end":276440,"line_start":625,"line_end":625,"column_start":5,"column_end":79}},{"value":"/ there may be more data to send off before it is \"satisfied\". Do note","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":276445,"byte_end":276517,"line_start":626,"line_end":626,"column_start":5,"column_end":77}},{"value":"/ that `perform` will return `is_call_perform` only when it wants to be","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":276522,"byte_end":276595,"line_start":627,"line_end":627,"column_start":5,"column_end":78}},{"value":"/ called again immediately. When things are fine and there is nothing","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":276600,"byte_end":276671,"line_start":628,"line_end":628,"column_start":5,"column_end":76}},{"value":"/ immediate it wants done, it'll return `Ok` and you need to wait for","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":276676,"byte_end":276747,"line_start":629,"line_end":629,"column_start":5,"column_end":76}},{"value":"/ \"action\" and then call this function again.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":276752,"byte_end":276799,"line_start":630,"line_end":630,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":276804,"byte_end":276807,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ This function only returns errors etc regarding the whole multi stack.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":276812,"byte_end":276886,"line_start":632,"line_end":632,"column_start":5,"column_end":79}},{"value":"/ Problems still might have occurred on individual transfers even when","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":276891,"byte_end":276963,"line_start":633,"line_end":633,"column_start":5,"column_end":77}},{"value":"/ this function returns `Ok`. Use `info` to figure out how individual","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":276968,"byte_end":277039,"line_start":634,"line_end":634,"column_start":5,"column_end":76}},{"value":"/ transfers did.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":277044,"byte_end":277062,"line_start":635,"line_end":635,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1001},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":279255,"byte_end":279261,"line_start":675,"line_end":675,"column_start":12,"column_end":18},"name":"fdset2","qualname":"<Multi>::fdset2","value":"fn (&self, read: Option<&mut curl_sys::fd_set>, write: Option<&mut curl_sys::fd_set>, except: Option<&mut curl_sys::fd_set>) -> Result<Option<i32>, MultiError>","parent":null,"children":[],"decl_id":null,"docs":" Extracts file descriptor information from a multi handle","sig":null,"attributes":[{"value":"/ Extracts file descriptor information from a multi handle","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":277280,"byte_end":277340,"line_start":644,"line_end":644,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":277345,"byte_end":277348,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ This function extracts file descriptor information from a given","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":277353,"byte_end":277420,"line_start":646,"line_end":646,"column_start":5,"column_end":72}},{"value":"/ handle, and libcurl returns its `fd_set` sets. The application can use","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":277425,"byte_end":277499,"line_start":647,"line_end":647,"column_start":5,"column_end":79}},{"value":"/ these to `select()` on, but be sure to `FD_ZERO` them before calling","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":277504,"byte_end":277576,"line_start":648,"line_end":648,"column_start":5,"column_end":77}},{"value":"/ this function as curl_multi_fdset only adds its own descriptors, it","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":277581,"byte_end":277652,"line_start":649,"line_end":649,"column_start":5,"column_end":76}},{"value":"/ doesn't zero or otherwise remove any others. The curl_multi_perform","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":277657,"byte_end":277728,"line_start":650,"line_end":650,"column_start":5,"column_end":76}},{"value":"/ function should be called as soon as one of them is ready to be read","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":277733,"byte_end":277805,"line_start":651,"line_end":651,"column_start":5,"column_end":77}},{"value":"/ from or written to.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":277810,"byte_end":277833,"line_start":652,"line_end":652,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":277838,"byte_end":277841,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ If no file descriptors are set by libcurl, this function will return","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":277846,"byte_end":277918,"line_start":654,"line_end":654,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)`. Otherwise `Ok(Some(n))` will be returned where `n` the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":277923,"byte_end":277993,"line_start":655,"line_end":655,"column_start":5,"column_end":75}},{"value":"/ highest descriptor number libcurl set. When `Ok(None)` is returned it","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":277998,"byte_end":278071,"line_start":656,"line_end":656,"column_start":5,"column_end":78}},{"value":"/ is because libcurl currently does something that isn't possible for","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":278076,"byte_end":278147,"line_start":657,"line_end":657,"column_start":5,"column_end":76}},{"value":"/ your application to monitor with a socket and unfortunately you can","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":278152,"byte_end":278223,"line_start":658,"line_end":658,"column_start":5,"column_end":76}},{"value":"/ then not know exactly when the current action is completed using","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":278228,"byte_end":278296,"line_start":659,"line_end":659,"column_start":5,"column_end":73}},{"value":"/ `select()`. You then need to wait a while before you proceed and call","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":278301,"byte_end":278374,"line_start":660,"line_end":660,"column_start":5,"column_end":78}},{"value":"/ `perform` anyway.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":278379,"byte_end":278400,"line_start":661,"line_end":661,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":278405,"byte_end":278408,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ When doing `select()`, you should use `get_timeout` to figure out","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":278413,"byte_end":278482,"line_start":663,"line_end":663,"column_start":5,"column_end":74}},{"value":"/ how long to wait for action. Call `perform` even if no activity has","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":278487,"byte_end":278558,"line_start":664,"line_end":664,"column_start":5,"column_end":76}},{"value":"/ been seen on the `fd_set`s after the timeout expires as otherwise","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":278563,"byte_end":278632,"line_start":665,"line_end":665,"column_start":5,"column_end":74}},{"value":"/ internal retries and timeouts may not work as you'd think and want.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":278637,"byte_end":278708,"line_start":666,"line_end":666,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":278713,"byte_end":278716,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ If one of the sockets used by libcurl happens to be larger than what","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":278721,"byte_end":278793,"line_start":668,"line_end":668,"column_start":5,"column_end":77}},{"value":"/ can be set in an `fd_set`, which on POSIX systems means that the file","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":278798,"byte_end":278871,"line_start":669,"line_end":669,"column_start":5,"column_end":78}},{"value":"/ descriptor is larger than `FD_SETSIZE`, then libcurl will try to not","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":278876,"byte_end":278948,"line_start":670,"line_end":670,"column_start":5,"column_end":77}},{"value":"/ set it. Setting a too large file descriptor in an `fd_set` implies an out","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":278953,"byte_end":279030,"line_start":671,"line_end":671,"column_start":5,"column_end":82}},{"value":"/ of bounds write which can cause crashes, or worse. The effect of NOT","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":279035,"byte_end":279107,"line_start":672,"line_end":672,"column_start":5,"column_end":77}},{"value":"/ storing it will possibly save you from the crash, but will make your","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":279112,"byte_end":279184,"line_start":673,"line_end":673,"column_start":5,"column_end":77}},{"value":"/ program NOT wait for sockets it should wait for...","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":279189,"byte_end":279243,"line_start":674,"line_end":674,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1005},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":280381,"byte_end":280386,"line_start":707,"line_end":707,"column_start":12,"column_end":17},"name":"close","qualname":"<Multi>::close","value":"fn (&self) -> Result<(), MultiError>","parent":null,"children":[],"decl_id":null,"docs":" Does nothing and returns `Ok(())`. This method remains for backwards\n compatibility.","sig":null,"attributes":[{"value":"/ Does nothing and returns `Ok(())`. This method remains for backwards","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":279998,"byte_end":280070,"line_start":697,"line_end":697,"column_start":5,"column_end":77}},{"value":"/ compatibility.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":280075,"byte_end":280093,"line_start":698,"line_end":698,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":280098,"byte_end":280101,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ This method will be changed to take `self` in a future release.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":280106,"byte_end":280173,"line_start":700,"line_end":700,"column_start":5,"column_end":72}},{"value":"deprecated(since = \"0.4.30\", note =\n             \"cannot close safely without consuming self; \\\n                will be changed or removed in a future release\")","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":280197,"byte_end":280369,"line_start":702,"line_end":706,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":1006},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":280513,"byte_end":280516,"line_start":712,"line_end":712,"column_start":12,"column_end":15},"name":"raw","qualname":"<Multi>::raw","value":"fn (&self) -> *mut curl_sys::CURLM","parent":null,"children":[],"decl_id":null,"docs":" Get a pointer to the raw underlying CURLM handle.\n","sig":null,"attributes":[{"value":"/ Get a pointer to the raw underlying CURLM handle.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":280448,"byte_end":280501,"line_start":711,"line_end":711,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":282995,"byte_end":283004,"line_start":800,"line_end":800,"column_start":12,"column_end":21},"name":"set_token","qualname":"<EasyHandle>::set_token","value":"fn (&mut self, token: usize) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Sets an internal private token for this `EasyHandle`.","sig":null,"attributes":[{"value":"/ Sets an internal private token for this `EasyHandle`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":282820,"byte_end":282877,"line_start":796,"line_end":796,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":282882,"byte_end":282885,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ This function will set the `CURLOPT_PRIVATE` field on the underlying","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":282890,"byte_end":282962,"line_start":798,"line_end":798,"column_start":5,"column_end":77}},{"value":"/ easy handle.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":282967,"byte_end":282983,"line_start":799,"line_end":799,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":283701,"byte_end":283713,"line_start":822,"line_end":822,"column_start":12,"column_end":24},"name":"unpause_read","qualname":"<EasyHandle>::unpause_read","value":"fn (&self) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Unpause reading on a connection.","sig":null,"attributes":[{"value":"/ Unpause reading on a connection.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":283278,"byte_end":283314,"line_start":812,"line_end":812,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":283319,"byte_end":283322,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ Using this function, you can explicitly unpause a connection that was","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":283327,"byte_end":283400,"line_start":814,"line_end":814,"column_start":5,"column_end":78}},{"value":"/ previously paused.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":283405,"byte_end":283427,"line_start":815,"line_end":815,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":283432,"byte_end":283435,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ A connection can be paused by letting the read or the write callbacks","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":283440,"byte_end":283513,"line_start":817,"line_end":817,"column_start":5,"column_end":78}},{"value":"/ return `ReadError::Pause` or `WriteError::Pause`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":283518,"byte_end":283571,"line_start":818,"line_end":818,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":283576,"byte_end":283579,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ The chance is high that you will get your write callback called before","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":283584,"byte_end":283658,"line_start":820,"line_end":820,"column_start":5,"column_end":79}},{"value":"/ this function returns.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":283663,"byte_end":283689,"line_start":821,"line_end":821,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1017},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":284318,"byte_end":284331,"line_start":836,"line_end":836,"column_start":12,"column_end":25},"name":"unpause_write","qualname":"<EasyHandle>::unpause_write","value":"fn (&self) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Unpause writing on a connection.","sig":null,"attributes":[{"value":"/ Unpause writing on a connection.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":283788,"byte_end":283824,"line_start":826,"line_end":826,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":283829,"byte_end":283832,"line_start":827,"line_end":827,"column_start":5,"column_end":8}},{"value":"/ Using this function, you can explicitly unpause a connection that was","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":283837,"byte_end":283910,"line_start":828,"line_end":828,"column_start":5,"column_end":78}},{"value":"/ previously paused.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":283915,"byte_end":283937,"line_start":829,"line_end":829,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":283942,"byte_end":283945,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ A connection can be paused by letting the read or the write callbacks","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":283950,"byte_end":284023,"line_start":831,"line_end":831,"column_start":5,"column_end":78}},{"value":"/ return `ReadError::Pause` or `WriteError::Pause`. A write callback that","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":284028,"byte_end":284103,"line_start":832,"line_end":832,"column_start":5,"column_end":80}},{"value":"/ returns pause signals to the library that it couldn't take care of any","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":284108,"byte_end":284182,"line_start":833,"line_end":833,"column_start":5,"column_end":79}},{"value":"/ data at all, and that data will then be delivered again to the callback","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":284187,"byte_end":284262,"line_start":834,"line_end":834,"column_start":5,"column_end":80}},{"value":"/ when the writing is later unpaused.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":284267,"byte_end":284306,"line_start":835,"line_end":835,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1018},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":284471,"byte_end":284474,"line_start":841,"line_end":841,"column_start":12,"column_end":15},"name":"raw","qualname":"<EasyHandle>::raw","value":"fn (&self) -> *mut curl_sys::CURL","parent":null,"children":[],"decl_id":null,"docs":" Get a pointer to the raw underlying CURL handle.\n","sig":null,"attributes":[{"value":"/ Get a pointer to the raw underlying CURL handle.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":284407,"byte_end":284459,"line_start":840,"line_end":840,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1023},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":284769,"byte_end":284776,"line_start":854,"line_end":854,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Easy2Handle<H>>::get_ref","value":"fn (&self) -> &H","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying handler for events.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying handler for events.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":284695,"byte_end":284757,"line_start":853,"line_end":853,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1024},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":284905,"byte_end":284912,"line_start":859,"line_end":859,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Easy2Handle<H>>::get_mut","value":"fn (&mut self) -> &mut H","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying handler for events.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying handler for events.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":284831,"byte_end":284893,"line_start":858,"line_end":858,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1025},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":285022,"byte_end":285031,"line_start":864,"line_end":864,"column_start":12,"column_end":21},"name":"set_token","qualname":"<Easy2Handle<H>>::set_token","value":"fn (&mut self, token: usize) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as `EasyHandle::set_token`\n","sig":null,"attributes":[{"value":"/ Same as `EasyHandle::set_token`","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":284975,"byte_end":285010,"line_start":863,"line_end":863,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1026},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":285728,"byte_end":285740,"line_start":886,"line_end":886,"column_start":12,"column_end":24},"name":"unpause_read","qualname":"<Easy2Handle<H>>::unpause_read","value":"fn (&self) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Unpause reading on a connection.","sig":null,"attributes":[{"value":"/ Unpause reading on a connection.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":285305,"byte_end":285341,"line_start":876,"line_end":876,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":285346,"byte_end":285349,"line_start":877,"line_end":877,"column_start":5,"column_end":8}},{"value":"/ Using this function, you can explicitly unpause a connection that was","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":285354,"byte_end":285427,"line_start":878,"line_end":878,"column_start":5,"column_end":78}},{"value":"/ previously paused.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":285432,"byte_end":285454,"line_start":879,"line_end":879,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":285459,"byte_end":285462,"line_start":880,"line_end":880,"column_start":5,"column_end":8}},{"value":"/ A connection can be paused by letting the read or the write callbacks","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":285467,"byte_end":285540,"line_start":881,"line_end":881,"column_start":5,"column_end":78}},{"value":"/ return `ReadError::Pause` or `WriteError::Pause`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":285545,"byte_end":285598,"line_start":882,"line_end":882,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":285603,"byte_end":285606,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ The chance is high that you will get your write callback called before","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":285611,"byte_end":285685,"line_start":884,"line_end":884,"column_start":5,"column_end":79}},{"value":"/ this function returns.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":285690,"byte_end":285716,"line_start":885,"line_end":885,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1027},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":286345,"byte_end":286358,"line_start":900,"line_end":900,"column_start":12,"column_end":25},"name":"unpause_write","qualname":"<Easy2Handle<H>>::unpause_write","value":"fn (&self) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Unpause writing on a connection.","sig":null,"attributes":[{"value":"/ Unpause writing on a connection.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":285815,"byte_end":285851,"line_start":890,"line_end":890,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":285856,"byte_end":285859,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ Using this function, you can explicitly unpause a connection that was","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":285864,"byte_end":285937,"line_start":892,"line_end":892,"column_start":5,"column_end":78}},{"value":"/ previously paused.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":285942,"byte_end":285964,"line_start":893,"line_end":893,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":285969,"byte_end":285972,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ A connection can be paused by letting the read or the write callbacks","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":285977,"byte_end":286050,"line_start":895,"line_end":895,"column_start":5,"column_end":78}},{"value":"/ return `ReadError::Pause` or `WriteError::Pause`. A write callback that","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":286055,"byte_end":286130,"line_start":896,"line_end":896,"column_start":5,"column_end":80}},{"value":"/ returns pause signals to the library that it couldn't take care of any","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":286135,"byte_end":286209,"line_start":897,"line_end":897,"column_start":5,"column_end":79}},{"value":"/ data at all, and that data will then be delivered again to the callback","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":286214,"byte_end":286289,"line_start":898,"line_end":898,"column_start":5,"column_end":80}},{"value":"/ when the writing is later unpaused.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":286294,"byte_end":286333,"line_start":899,"line_end":899,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1028},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":286498,"byte_end":286501,"line_start":905,"line_end":905,"column_start":12,"column_end":15},"name":"raw","qualname":"<Easy2Handle<H>>::raw","value":"fn (&self) -> *mut curl_sys::CURL","parent":null,"children":[],"decl_id":null,"docs":" Get a pointer to the raw underlying CURL handle.\n","sig":null,"attributes":[{"value":"/ Get a pointer to the raw underlying CURL handle.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":286434,"byte_end":286486,"line_start":904,"line_end":904,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1034},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":287197,"byte_end":287203,"line_start":926,"line_end":926,"column_start":12,"column_end":18},"name":"result","qualname":"<Message>::result","value":"fn (&self) -> Option<Result<(), Error>>","parent":null,"children":[],"decl_id":null,"docs":" If this message indicates that a transfer has finished, returns the\n result of the transfer in `Some`.","sig":null,"attributes":[{"value":"/ If this message indicates that a transfer has finished, returns the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":286747,"byte_end":286818,"line_start":917,"line_end":917,"column_start":5,"column_end":76}},{"value":"/ result of the transfer in `Some`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":286823,"byte_end":286860,"line_start":918,"line_end":918,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":286865,"byte_end":286868,"line_start":919,"line_end":919,"column_start":5,"column_end":8}},{"value":"/ If the message doesn't indicate that a transfer has finished, then","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":286873,"byte_end":286943,"line_start":920,"line_end":920,"column_start":5,"column_end":75}},{"value":"/ `None` is returned.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":286948,"byte_end":286971,"line_start":921,"line_end":921,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":286976,"byte_end":286979,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ Note that the `result*_for` methods below should be preferred as they","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":286984,"byte_end":287057,"line_start":923,"line_end":923,"column_start":5,"column_end":78}},{"value":"/ provide better error messages as the associated error data on the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":287062,"byte_end":287131,"line_start":924,"line_end":924,"column_start":5,"column_end":74}},{"value":"/ handle can be associated with the error type.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":287136,"byte_end":287185,"line_start":925,"line_end":925,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1035},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":287734,"byte_end":287744,"line_start":941,"line_end":941,"column_start":12,"column_end":22},"name":"result_for","qualname":"<Message>::result_for","value":"fn (&self, handle: &EasyHandle) -> Option<Result<(), Error>>","parent":null,"children":[],"decl_id":null,"docs":" Same as `result`, except only returns `Some` for the specified handle.","sig":null,"attributes":[{"value":"/ Same as `result`, except only returns `Some` for the specified handle.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":287463,"byte_end":287537,"line_start":936,"line_end":936,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":287542,"byte_end":287545,"line_start":937,"line_end":937,"column_start":5,"column_end":8}},{"value":"/ Note that this function produces better error messages than `result` as","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":287550,"byte_end":287625,"line_start":938,"line_end":938,"column_start":5,"column_end":80}},{"value":"/ it uses `take_error_buf` to associate error information with the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":287630,"byte_end":287698,"line_start":939,"line_end":939,"column_start":5,"column_end":73}},{"value":"/ returned error.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":287703,"byte_end":287722,"line_start":940,"line_end":940,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1036},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":288361,"byte_end":288372,"line_start":959,"line_end":959,"column_start":12,"column_end":23},"name":"result_for2","qualname":"<Message>::result_for2","value":"fn <H> (&self, handle: &Easy2Handle<H>) -> Option<Result<(), Error>>","parent":null,"children":[],"decl_id":null,"docs":" Same as `result`, except only returns `Some` for the specified handle.","sig":null,"attributes":[{"value":"/ Same as `result`, except only returns `Some` for the specified handle.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":288090,"byte_end":288164,"line_start":954,"line_end":954,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":288169,"byte_end":288172,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/ Note that this function produces better error messages than `result` as","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":288177,"byte_end":288252,"line_start":956,"line_end":956,"column_start":5,"column_end":80}},{"value":"/ it uses `take_error_buf` to associate error information with the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":288257,"byte_end":288325,"line_start":957,"line_end":957,"column_start":5,"column_end":73}},{"value":"/ returned error.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":288330,"byte_end":288349,"line_start":958,"line_end":958,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1038},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":288825,"byte_end":288831,"line_start":974,"line_end":974,"column_start":12,"column_end":18},"name":"is_for","qualname":"<Message>::is_for","value":"fn (&self, handle: &EasyHandle) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this easy message was for the specified easy handle or\n not.\n","sig":null,"attributes":[{"value":"/ Returns whether this easy message was for the specified easy handle or","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":288726,"byte_end":288800,"line_start":972,"line_end":972,"column_start":5,"column_end":79}},{"value":"/ not.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":288805,"byte_end":288813,"line_start":973,"line_end":973,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":1039},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":289001,"byte_end":289008,"line_start":979,"line_end":979,"column_start":12,"column_end":19},"name":"is_for2","qualname":"<Message>::is_for2","value":"fn <H> (&self, handle: &Easy2Handle<H>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Same as `is_for`, but for `Easy2Handle`.\n","sig":null,"attributes":[{"value":"/ Same as `is_for`, but for `Easy2Handle`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":288945,"byte_end":288989,"line_start":978,"line_end":978,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1041},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":289427,"byte_end":289432,"line_start":989,"line_end":989,"column_start":12,"column_end":17},"name":"token","qualname":"<Message>::token","value":"fn (&self) -> Result<usize, Error>","parent":null,"children":[],"decl_id":null,"docs":" Returns the token associated with the easy handle that this message\n represents a completion for.","sig":null,"attributes":[{"value":"/ Returns the token associated with the easy handle that this message","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":289129,"byte_end":289200,"line_start":983,"line_end":983,"column_start":5,"column_end":76}},{"value":"/ represents a completion for.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":289205,"byte_end":289237,"line_start":984,"line_end":984,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":289242,"byte_end":289245,"line_start":985,"line_end":985,"column_start":5,"column_end":8}},{"value":"/ This function will return the token assigned with","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":289250,"byte_end":289303,"line_start":986,"line_end":986,"column_start":5,"column_end":58}},{"value":"/ `EasyHandle::set_token`. This reads the `CURLINFO_PRIVATE` field of the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":289308,"byte_end":289383,"line_start":987,"line_end":987,"column_start":5,"column_end":80}},{"value":"/ underlying `*mut CURL`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":289388,"byte_end":289415,"line_start":988,"line_end":988,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1046},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":289967,"byte_end":289970,"line_start":1010,"line_end":1010,"column_start":12,"column_end":15},"name":"new","qualname":"<Events>::new","value":"fn () -> Events","parent":null,"children":[],"decl_id":null,"docs":" Creates a new blank event bit mask.\n","sig":null,"attributes":[{"value":"/ Creates a new blank event bit mask.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":289916,"byte_end":289955,"line_start":1009,"line_end":1009,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1047},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":290106,"byte_end":290111,"line_start":1015,"line_end":1015,"column_start":12,"column_end":17},"name":"input","qualname":"<Events>::input","value":"fn (&mut self, val: bool) -> &mut Events","parent":null,"children":[],"decl_id":null,"docs":" Set or unset the whether these events indicate that input is ready.\n","sig":null,"attributes":[{"value":"/ Set or unset the whether these events indicate that input is ready.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":290023,"byte_end":290094,"line_start":1014,"line_end":1014,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1048},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":290296,"byte_end":290302,"line_start":1020,"line_end":1020,"column_start":12,"column_end":18},"name":"output","qualname":"<Events>::output","value":"fn (&mut self, val: bool) -> &mut Events","parent":null,"children":[],"decl_id":null,"docs":" Set or unset the whether these events indicate that output is ready.\n","sig":null,"attributes":[{"value":"/ Set or unset the whether these events indicate that output is ready.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":290212,"byte_end":290284,"line_start":1019,"line_end":1019,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1049},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":290502,"byte_end":290507,"line_start":1026,"line_end":1026,"column_start":12,"column_end":17},"name":"error","qualname":"<Events>::error","value":"fn (&mut self, val: bool) -> &mut Events","parent":null,"children":[],"decl_id":null,"docs":" Set or unset the whether these events indicate that an error has\n happened.\n","sig":null,"attributes":[{"value":"/ Set or unset the whether these events indicate that an error has","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":290404,"byte_end":290472,"line_start":1024,"line_end":1024,"column_start":5,"column_end":73}},{"value":"/ happened.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":290477,"byte_end":290490,"line_start":1025,"line_end":1025,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1054},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":291274,"byte_end":291279,"line_start":1052,"line_end":1052,"column_start":12,"column_end":17},"name":"input","qualname":"<SocketEvents>::input","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Wait for incoming data. For the socket to become readable.\n","sig":null,"attributes":[{"value":"/ Wait for incoming data. For the socket to become readable.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":291200,"byte_end":291262,"line_start":1051,"line_end":1051,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1055},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":291451,"byte_end":291457,"line_start":1057,"line_end":1057,"column_start":12,"column_end":18},"name":"output","qualname":"<SocketEvents>::output","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Wait for outgoing data. For the socket to become writable.\n","sig":null,"attributes":[{"value":"/ Wait for outgoing data. For the socket to become writable.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":291377,"byte_end":291439,"line_start":1056,"line_end":1056,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1056},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":291664,"byte_end":291680,"line_start":1063,"line_end":1063,"column_start":12,"column_end":28},"name":"input_and_output","qualname":"<SocketEvents>::input_and_output","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Wait for incoming and outgoing data. For the socket to become readable\n or writable.\n","sig":null,"attributes":[{"value":"/ Wait for incoming and outgoing data. For the socket to become readable","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":291557,"byte_end":291631,"line_start":1061,"line_end":1061,"column_start":5,"column_end":79}},{"value":"/ or writable.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":291636,"byte_end":291652,"line_start":1062,"line_end":1062,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1057},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":291866,"byte_end":291872,"line_start":1068,"line_end":1068,"column_start":12,"column_end":18},"name":"remove","qualname":"<SocketEvents>::remove","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The specified socket/file descriptor is no longer used by libcurl.\n","sig":null,"attributes":[{"value":"/ The specified socket/file descriptor is no longer used by libcurl.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":291784,"byte_end":291854,"line_start":1067,"line_end":1067,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1061},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":292338,"byte_end":292341,"line_start":1085,"line_end":1085,"column_start":12,"column_end":15},"name":"new","qualname":"<WaitFd>::new","value":"fn () -> WaitFd","parent":null,"children":[],"decl_id":null,"docs":" Constructs an empty (invalid) WaitFd.\n","sig":null,"attributes":[{"value":"/ Constructs an empty (invalid) WaitFd.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":292285,"byte_end":292326,"line_start":1084,"line_end":1084,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1062},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":292582,"byte_end":292588,"line_start":1096,"line_end":1096,"column_start":12,"column_end":18},"name":"set_fd","qualname":"<WaitFd>::set_fd","value":"fn (&mut self, fd: Socket) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the file descriptor to wait for.\n","sig":null,"attributes":[{"value":"/ Set the file descriptor to wait for.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":292530,"byte_end":292570,"line_start":1095,"line_end":1095,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1063},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":292806,"byte_end":292818,"line_start":1104,"line_end":1104,"column_start":12,"column_end":24},"name":"poll_on_read","qualname":"<WaitFd>::poll_on_read","value":"fn (&mut self, val: bool) -> &mut WaitFd","parent":null,"children":[],"decl_id":null,"docs":" Indicate that the socket should poll on read events such as new data\n received.","sig":null,"attributes":[{"value":"/ Indicate that the socket should poll on read events such as new data","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":292653,"byte_end":292725,"line_start":1100,"line_end":1100,"column_start":5,"column_end":77}},{"value":"/ received.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":292730,"byte_end":292743,"line_start":1101,"line_end":1101,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":292748,"byte_end":292751,"line_start":1102,"line_end":1102,"column_start":5,"column_end":8}},{"value":"/ Corresponds to `CURL_WAIT_POLLIN`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":292756,"byte_end":292794,"line_start":1103,"line_end":1103,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1064},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":293087,"byte_end":293108,"line_start":1112,"line_end":1112,"column_start":12,"column_end":33},"name":"poll_on_priority_read","qualname":"<WaitFd>::poll_on_priority_read","value":"fn (&mut self, val: bool) -> &mut WaitFd","parent":null,"children":[],"decl_id":null,"docs":" Indicate that the socket should poll on high priority read events such\n as out of band data.","sig":null,"attributes":[{"value":"/ Indicate that the socket should poll on high priority read events such","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":292920,"byte_end":292994,"line_start":1108,"line_end":1108,"column_start":5,"column_end":79}},{"value":"/ as out of band data.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":292999,"byte_end":293023,"line_start":1109,"line_end":1109,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":293028,"byte_end":293031,"line_start":1110,"line_end":1110,"column_start":5,"column_end":8}},{"value":"/ Corresponds to `CURL_WAIT_POLLPRI`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":293036,"byte_end":293075,"line_start":1111,"line_end":1111,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1065},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":293397,"byte_end":293410,"line_start":1120,"line_end":1120,"column_start":12,"column_end":25},"name":"poll_on_write","qualname":"<WaitFd>::poll_on_write","value":"fn (&mut self, val: bool) -> &mut WaitFd","parent":null,"children":[],"decl_id":null,"docs":" Indicate that the socket should poll on write events such as the socket\n being clear to write without blocking.","sig":null,"attributes":[{"value":"/ Indicate that the socket should poll on write events such as the socket","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":293211,"byte_end":293286,"line_start":1116,"line_end":1116,"column_start":5,"column_end":80}},{"value":"/ being clear to write without blocking.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":293291,"byte_end":293333,"line_start":1117,"line_end":1117,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":293338,"byte_end":293341,"line_start":1118,"line_end":1118,"column_start":5,"column_end":8}},{"value":"/ Corresponds to `CURL_WAIT_POLLOUT`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":293346,"byte_end":293385,"line_start":1119,"line_end":1119,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1067},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":293836,"byte_end":293849,"line_start":1135,"line_end":1135,"column_start":12,"column_end":25},"name":"received_read","qualname":"<WaitFd>::received_read","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" After a call to `wait`, returns `true` if `poll_on_read` was set and a\n read event occured.\n","sig":null,"attributes":[{"value":"/ After a call to `wait`, returns `true` if `poll_on_read` was set and a","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":293722,"byte_end":293796,"line_start":1133,"line_end":1133,"column_start":5,"column_end":79}},{"value":"/ read event occured.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":293801,"byte_end":293824,"line_start":1134,"line_end":1134,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1068},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":294096,"byte_end":294118,"line_start":1141,"line_end":1141,"column_start":12,"column_end":34},"name":"received_priority_read","qualname":"<WaitFd>::received_priority_read","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" After a call to `wait`, returns `true` if `poll_on_priority_read` was set and a\n priority read event occured.\n","sig":null,"attributes":[{"value":"/ After a call to `wait`, returns `true` if `poll_on_priority_read` was set and a","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":293964,"byte_end":294047,"line_start":1139,"line_end":1139,"column_start":5,"column_end":88}},{"value":"/ priority read event occured.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":294052,"byte_end":294084,"line_start":1140,"line_end":1140,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1069},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":294351,"byte_end":294365,"line_start":1147,"line_end":1147,"column_start":12,"column_end":26},"name":"received_write","qualname":"<WaitFd>::received_write","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" After a call to `wait`, returns `true` if `poll_on_write` was set and a\n write event occured.\n","sig":null,"attributes":[{"value":"/ After a call to `wait`, returns `true` if `poll_on_write` was set and a","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":294235,"byte_end":294310,"line_start":1145,"line_end":1145,"column_start":5,"column_end":80}},{"value":"/ write event occured.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":294315,"byte_end":294339,"line_start":1146,"line_end":1146,"column_start":5,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":1087},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":3469,"byte_end":3473,"line_start":101,"line_end":101,"column_start":8,"column_end":12},"name":"init","qualname":"::init","value":"fn () -> ()","parent":null,"children":[],"decl_id":null,"docs":" Initializes the underlying libcurl library.","sig":null,"attributes":[{"value":"/ Initializes the underlying libcurl library.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":2722,"byte_end":2769,"line_start":85,"line_end":85,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":2770,"byte_end":2773,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ The underlying libcurl library must be initialized before use, and must be","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":2774,"byte_end":2852,"line_start":87,"line_end":87,"column_start":1,"column_end":79}},{"value":"/ done so on the main thread before any other threads are created by the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":2853,"byte_end":2927,"line_start":88,"line_end":88,"column_start":1,"column_end":75}},{"value":"/ program. This crate will do this for you automatically in the following","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":2928,"byte_end":3003,"line_start":89,"line_end":89,"column_start":1,"column_end":76}},{"value":"/ scenarios:","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":3004,"byte_end":3018,"line_start":90,"line_end":90,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":3019,"byte_end":3022,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ - Creating a new [`Easy`][easy::Easy] or [`Multi`][multi::Multi] handle","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":3023,"byte_end":3098,"line_start":92,"line_end":92,"column_start":1,"column_end":76}},{"value":"/ - At program startup on Windows, macOS, Linux, Android, or FreeBSD systems","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":3099,"byte_end":3177,"line_start":93,"line_end":93,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":3178,"byte_end":3181,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ This should be sufficient for most applications and scenarios, but in any","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":3182,"byte_end":3259,"line_start":95,"line_end":95,"column_start":1,"column_end":78}},{"value":"/ other case, it is strongly recommended that you call this function manually","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":3260,"byte_end":3339,"line_start":96,"line_end":96,"column_start":1,"column_end":80}},{"value":"/ as soon as your program starts.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":3340,"byte_end":3375,"line_start":97,"line_end":97,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":3376,"byte_end":3379,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ Calling this function more than once is harmless and has no effect.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":3380,"byte_end":3451,"line_start":99,"line_end":99,"column_start":1,"column_end":72}},{"value":"inline","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":3452,"byte_end":3461,"line_start":100,"line_end":100,"column_start":1,"column_end":10}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":5853,"byte_end":5858,"line_start":18,"line_end":18,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":16681,"byte_end":16686,"line_start":319,"line_end":319,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":16990,"byte_end":16995,"line_start":329,"line_end":329,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":17277,"byte_end":17282,"line_start":339,"line_end":339,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":17471,"byte_end":17481,"line_start":349,"line_end":349,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":18951,"byte_end":18961,"line_start":395,"line_end":395,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":19086,"byte_end":19096,"line_start":401,"line_end":401,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":19344,"byte_end":19354,"line_start":412,"line_end":412,"column_start":23,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":19532,"byte_end":19542,"line_start":422,"line_end":422,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":21594,"byte_end":21604,"line_start":483,"line_end":483,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":21729,"byte_end":21739,"line_start":489,"line_end":489,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":21985,"byte_end":21995,"line_start":498,"line_end":498,"column_start":23,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":22181,"byte_end":22190,"line_start":508,"line_end":508,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":24560,"byte_end":24569,"line_start":571,"line_end":571,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":24694,"byte_end":24703,"line_start":577,"line_end":577,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":24948,"byte_end":24957,"line_start":586,"line_end":586,"column_start":23,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":24991,"byte_end":24996,"line_start":588,"line_end":588,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":25172,"byte_end":25177,"line_start":597,"line_end":597,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":25304,"byte_end":25309,"line_start":603,"line_end":603,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":25441,"byte_end":25446,"line_start":609,"line_end":609,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":25577,"byte_end":25582,"line_start":615,"line_end":615,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":25946,"byte_end":25953,"line_start":13,"line_end":13,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":25978,"byte_end":25985,"line_start":14,"line_end":14,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":26161,"byte_end":26168,"line_start":23,"line_end":23,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":36002,"byte_end":36009,"line_start":339,"line_end":339,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":38497,"byte_end":38506,"line_start":403,"line_end":403,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":202},{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":38843,"byte_end":38852,"line_start":418,"line_end":418,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":40555,"byte_end":40559,"line_start":34,"line_end":34,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":233},{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":41409,"byte_end":41413,"line_start":63,"line_end":63,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":41598,"byte_end":41602,"line_start":70,"line_end":70,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":41733,"byte_end":41737,"line_start":78,"line_end":78,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":51386,"byte_end":51390,"line_start":368,"line_end":368,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":54750,"byte_end":54758,"line_start":104,"line_end":104,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":55290,"byte_end":55294,"line_start":117,"line_end":117,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":320},{"krate":0,"index":322},{"krate":0,"index":324},{"krate":0,"index":326},{"krate":0,"index":328},{"krate":0,"index":330},{"krate":0,"index":332},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":383},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":430},{"krate":0,"index":432},{"krate":0,"index":434},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":439},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":482},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":99786,"byte_end":99791,"line_start":1226,"line_end":1226,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":102573,"byte_end":102581,"line_start":1305,"line_end":1305,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":104026,"byte_end":104034,"line_start":1339,"line_end":1339,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":501},{"krate":0,"index":503},{"krate":0,"index":505},{"krate":0,"index":507},{"krate":0,"index":509},{"krate":0,"index":511},{"krate":0,"index":513}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":105839,"byte_end":105847,"line_start":1404,"line_end":1404,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":516}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":105968,"byte_end":105976,"line_start":1410,"line_end":1410,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":520},{"krate":0,"index":522},{"krate":0,"index":524},{"krate":0,"index":526},{"krate":0,"index":528},{"krate":0,"index":530},{"krate":0,"index":532},{"krate":0,"index":534},{"krate":0,"index":542},{"krate":0,"index":543}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":109122,"byte_end":109127,"line_start":1497,"line_end":1497,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":109622,"byte_end":109630,"line_start":1518,"line_end":1518,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":109839,"byte_end":109847,"line_start":1526,"line_end":1526,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":551}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":127058,"byte_end":127063,"line_start":392,"line_end":392,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":133262,"byte_end":133267,"line_start":575,"line_end":575,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":137861,"byte_end":137866,"line_start":689,"line_end":689,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":680},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":727},{"krate":0,"index":729},{"krate":0,"index":731},{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":736},{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":741},{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":747},{"krate":0,"index":749},{"krate":0,"index":751},{"krate":0,"index":753},{"krate":0,"index":755},{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":768},{"krate":0,"index":770},{"krate":0,"index":771},{"krate":0,"index":772},{"krate":0,"index":774},{"krate":0,"index":775},{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":803}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":232847,"byte_end":232852,"line_start":2993,"line_end":2993,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":806}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":233096,"byte_end":233101,"line_start":3002,"line_end":3002,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":809}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":238196,"byte_end":238200,"line_start":3181,"line_end":3181,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":843}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":242091,"byte_end":242095,"line_start":3275,"line_end":3275,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":845}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":242752,"byte_end":242758,"line_start":3292,"line_end":3292,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":850}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":244407,"byte_end":244413,"line_start":3334,"line_end":3334,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":852}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/list.rs","byte_start":245281,"byte_end":245285,"line_start":28,"line_end":28,"column_start":22,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/list.rs","byte_start":245295,"byte_end":245299,"line_start":30,"line_end":30,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/list.rs","byte_start":245974,"byte_end":245978,"line_start":58,"line_end":58,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":871}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/list.rs","byte_start":246331,"byte_end":246335,"line_start":75,"line_end":75,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":878}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/list.rs","byte_start":246453,"byte_end":246457,"line_start":81,"line_end":81,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":881},{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/list.rs","byte_start":246794,"byte_end":246798,"line_start":97,"line_end":97,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":885}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":254481,"byte_end":254486,"line_start":95,"line_end":95,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":966},{"krate":0,"index":969},{"krate":0,"index":971},{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":977},{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":988},{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":993},{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":999},{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1005},{"krate":0,"index":1006},{"krate":0,"index":1007}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":280885,"byte_end":280890,"line_start":729,"line_end":729,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1010}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":281040,"byte_end":281045,"line_start":735,"line_end":735,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1012}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":282803,"byte_end":282813,"line_start":795,"line_end":795,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1015},{"krate":0,"index":1342},{"krate":0,"index":1343},{"krate":0,"index":1344},{"krate":0,"index":1345},{"krate":0,"index":1346},{"krate":0,"index":1347},{"krate":0,"index":1348},{"krate":0,"index":1349},{"krate":0,"index":1350},{"krate":0,"index":1351},{"krate":0,"index":1352},{"krate":0,"index":1353},{"krate":0,"index":1354},{"krate":0,"index":1355},{"krate":0,"index":1356},{"krate":0,"index":1357},{"krate":0,"index":1358},{"krate":0,"index":1359},{"krate":0,"index":1360},{"krate":0,"index":1361},{"krate":0,"index":1362},{"krate":0,"index":1363},{"krate":0,"index":1364},{"krate":0,"index":1365},{"krate":0,"index":1366},{"krate":0,"index":1367},{"krate":0,"index":1368},{"krate":0,"index":1369},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1018}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":284560,"byte_end":284570,"line_start":846,"line_end":846,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1020}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":284674,"byte_end":284685,"line_start":852,"line_end":852,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":1372},{"krate":0,"index":1373},{"krate":0,"index":1374},{"krate":0,"index":1375},{"krate":0,"index":1376},{"krate":0,"index":1377},{"krate":0,"index":1378},{"krate":0,"index":1379},{"krate":0,"index":1380},{"krate":0,"index":1381},{"krate":0,"index":1382},{"krate":0,"index":1383},{"krate":0,"index":1384},{"krate":0,"index":1385},{"krate":0,"index":1386},{"krate":0,"index":1387},{"krate":0,"index":1388},{"krate":0,"index":1389},{"krate":0,"index":1390},{"krate":0,"index":1391},{"krate":0,"index":1392},{"krate":0,"index":1393},{"krate":0,"index":1394},{"krate":0,"index":1395},{"krate":0,"index":1396},{"krate":0,"index":1397},{"krate":0,"index":1026},{"krate":0,"index":1027},{"krate":0,"index":1028}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":286602,"byte_end":286613,"line_start":910,"line_end":910,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1031}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":286725,"byte_end":286732,"line_start":916,"line_end":916,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1041}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":289749,"byte_end":289756,"line_start":1002,"line_end":1002,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1044}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":289903,"byte_end":289909,"line_start":1008,"line_end":1008,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1046},{"krate":0,"index":1047},{"krate":0,"index":1048},{"krate":0,"index":1049},{"krate":0,"index":1050}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":290818,"byte_end":290824,"line_start":1040,"line_end":1040,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1052}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":291181,"byte_end":291193,"line_start":1050,"line_end":1050,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1056},{"krate":0,"index":1057}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":291996,"byte_end":292008,"line_start":1073,"line_end":1073,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1059}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":292272,"byte_end":292278,"line_start":1083,"line_end":1083,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1061},{"krate":0,"index":1062},{"krate":0,"index":1063},{"krate":0,"index":1064},{"krate":0,"index":1065},{"krate":0,"index":1066},{"krate":0,"index":1067},{"krate":0,"index":1068},{"krate":0,"index":1069}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":294515,"byte_end":294521,"line_start":1153,"line_end":1153,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1071}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":295098,"byte_end":295104,"line_start":1175,"line_end":1175,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1073}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":2689,"byte_end":2693,"line_start":81,"line_end":81,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":207}},{"kind":"Mod","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/lib.rs","byte_start":2703,"byte_end":2708,"line_start":82,"line_end":82,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":916}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":5853,"byte_end":5858,"line_start":18,"line_end":18,"column_start":6,"column_end":11},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1095},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":16681,"byte_end":16686,"line_start":319,"line_end":319,"column_start":23,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1095},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":16990,"byte_end":16995,"line_start":329,"line_end":329,"column_start":21,"column_end":26},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1095},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":17277,"byte_end":17282,"line_start":339,"line_end":339,"column_start":23,"column_end":28},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1095},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":17471,"byte_end":17481,"line_start":349,"line_end":349,"column_start":6,"column_end":16},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1104},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":18951,"byte_end":18961,"line_start":395,"line_end":395,"column_start":23,"column_end":33},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1104},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":19086,"byte_end":19096,"line_start":401,"line_end":401,"column_start":21,"column_end":31},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1104},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":19344,"byte_end":19354,"line_start":412,"line_end":412,"column_start":23,"column_end":33},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1104},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":19532,"byte_end":19542,"line_start":422,"line_end":422,"column_start":6,"column_end":16},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":21594,"byte_end":21604,"line_start":483,"line_end":483,"column_start":23,"column_end":33},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1112},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":21729,"byte_end":21739,"line_start":489,"line_end":489,"column_start":21,"column_end":31},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1112},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":21985,"byte_end":21995,"line_start":498,"line_end":498,"column_start":23,"column_end":33},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1112},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":22181,"byte_end":22190,"line_start":508,"line_end":508,"column_start":6,"column_end":15},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":24560,"byte_end":24569,"line_start":571,"line_end":571,"column_start":23,"column_end":32},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1120},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":24694,"byte_end":24703,"line_start":577,"line_end":577,"column_start":21,"column_end":30},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1120},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":24948,"byte_end":24957,"line_start":586,"line_end":586,"column_start":23,"column_end":32},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1120},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":24991,"byte_end":24996,"line_start":588,"line_end":588,"column_start":30,"column_end":35},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1095},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":25172,"byte_end":25177,"line_start":597,"line_end":597,"column_start":26,"column_end":31},"kind":{"Impl":{"id":17}},"from":{"krate":1,"index":2532},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":25304,"byte_end":25309,"line_start":603,"line_end":603,"column_start":31,"column_end":36},"kind":{"Impl":{"id":18}},"from":{"krate":1,"index":2532},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":25441,"byte_end":25446,"line_start":609,"line_end":609,"column_start":31,"column_end":36},"kind":{"Impl":{"id":19}},"from":{"krate":1,"index":2532},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/error.rs","byte_start":25577,"byte_end":25582,"line_start":615,"line_end":615,"column_start":30,"column_end":35},"kind":{"Impl":{"id":20}},"from":{"krate":1,"index":2532},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":25946,"byte_end":25953,"line_start":13,"line_end":13,"column_start":22,"column_end":29},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":152},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":25978,"byte_end":25985,"line_start":14,"line_end":14,"column_start":22,"column_end":29},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":152},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":26161,"byte_end":26168,"line_start":23,"line_end":23,"column_start":6,"column_end":13},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":152},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":36002,"byte_end":36009,"line_start":339,"line_end":339,"column_start":21,"column_end":28},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":152},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":38497,"byte_end":38506,"line_start":403,"line_end":403,"column_start":23,"column_end":32},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1128},"to":{"krate":2,"index":4965}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/version.rs","byte_start":38843,"byte_end":38852,"line_start":418,"line_end":418,"column_start":25,"column_end":34},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1128},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":40555,"byte_end":40559,"line_start":34,"line_end":34,"column_start":6,"column_end":10},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":218},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":41409,"byte_end":41413,"line_start":63,"line_end":63,"column_start":21,"column_end":25},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":218},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":41598,"byte_end":41602,"line_start":70,"line_end":70,"column_start":15,"column_end":19},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":218},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":41733,"byte_end":41737,"line_start":78,"line_end":78,"column_start":20,"column_end":24},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":224},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/form.rs","byte_start":51386,"byte_end":51390,"line_start":368,"line_end":368,"column_start":35,"column_end":39},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":224},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":54750,"byte_end":54758,"line_start":104,"line_end":104,"column_start":22,"column_end":30},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":305},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":55290,"byte_end":55294,"line_start":117,"line_end":117,"column_start":6,"column_end":10},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1135},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":99786,"byte_end":99791,"line_start":1226,"line_end":1226,"column_start":27,"column_end":32},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":475},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":102573,"byte_end":102581,"line_start":1305,"line_end":1305,"column_start":6,"column_end":14},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":305},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":104026,"byte_end":104034,"line_start":1339,"line_end":1339,"column_start":18,"column_end":26},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":305},"to":{"krate":0,"index":586}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":105839,"byte_end":105847,"line_start":1404,"line_end":1404,"column_start":21,"column_end":29},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":305},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":105968,"byte_end":105976,"line_start":1410,"line_end":1410,"column_start":20,"column_end":28},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":300},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":109122,"byte_end":109127,"line_start":1497,"line_end":1497,"column_start":27,"column_end":32},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":535},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":109622,"byte_end":109630,"line_start":1518,"line_end":1518,"column_start":35,"column_end":43},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handle.rs","byte_start":109839,"byte_end":109847,"line_start":1526,"line_end":1526,"column_start":29,"column_end":37},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":127058,"byte_end":127063,"line_start":392,"line_end":392,"column_start":31,"column_end":36},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":602},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":133262,"byte_end":133267,"line_start":575,"line_end":575,"column_start":18,"column_end":23},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":599},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":137861,"byte_end":137866,"line_start":689,"line_end":689,"column_start":9,"column_end":14},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":599},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":232847,"byte_end":232852,"line_start":2993,"line_end":2993,"column_start":36,"column_end":41},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":599},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":233096,"byte_end":233101,"line_start":3002,"line_end":3002,"column_start":18,"column_end":23},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":599},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":238196,"byte_end":238200,"line_start":3181,"line_end":3181,"column_start":6,"column_end":10},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1327},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":242091,"byte_end":242095,"line_start":3275,"line_end":3275,"column_start":21,"column_end":25},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1327},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":242752,"byte_end":242758,"line_start":3292,"line_end":3292,"column_start":6,"column_end":12},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1331},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/handler.rs","byte_start":244407,"byte_end":244413,"line_start":3334,"line_end":3334,"column_start":21,"column_end":27},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1331},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/list.rs","byte_start":245281,"byte_end":245285,"line_start":28,"line_end":28,"column_start":22,"column_end":26},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":861},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/list.rs","byte_start":245295,"byte_end":245299,"line_start":30,"line_end":30,"column_start":6,"column_end":10},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":861},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/list.rs","byte_start":245974,"byte_end":245978,"line_start":58,"line_end":58,"column_start":21,"column_end":25},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":861},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/list.rs","byte_start":246331,"byte_end":246335,"line_start":75,"line_end":75,"column_start":15,"column_end":19},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":861},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/list.rs","byte_start":246453,"byte_end":246457,"line_start":81,"line_end":81,"column_start":23,"column_end":27},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1335},"to":{"krate":2,"index":4965}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/easy/list.rs","byte_start":246794,"byte_end":246798,"line_start":97,"line_end":97,"column_start":25,"column_end":29},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1335},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":254481,"byte_end":254486,"line_start":95,"line_end":95,"column_start":6,"column_end":11},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":941},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":280885,"byte_end":280890,"line_start":729,"line_end":729,"column_start":21,"column_end":26},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":941},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":281040,"byte_end":281045,"line_start":735,"line_end":735,"column_start":15,"column_end":20},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":941},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":282803,"byte_end":282813,"line_start":795,"line_end":795,"column_start":6,"column_end":16},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":951},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":284560,"byte_end":284570,"line_start":846,"line_end":846,"column_start":21,"column_end":31},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":951},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":284674,"byte_end":284685,"line_start":852,"line_end":852,"column_start":9,"column_end":20},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":954},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":286602,"byte_end":286613,"line_start":910,"line_end":910,"column_start":36,"column_end":47},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":954},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":286725,"byte_end":286732,"line_start":916,"line_end":916,"column_start":14,"column_end":21},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":947},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":289749,"byte_end":289756,"line_start":1002,"line_end":1002,"column_start":25,"column_end":32},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":947},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":289903,"byte_end":289909,"line_start":1008,"line_end":1008,"column_start":6,"column_end":12},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":958},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":290818,"byte_end":290824,"line_start":1040,"line_end":1040,"column_start":21,"column_end":27},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":958},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":291181,"byte_end":291193,"line_start":1050,"line_end":1050,"column_start":6,"column_end":18},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":960},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":291996,"byte_end":292008,"line_start":1073,"line_end":1073,"column_start":21,"column_end":33},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":960},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":292272,"byte_end":292278,"line_start":1083,"line_end":1083,"column_start":6,"column_end":12},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":963},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":294515,"byte_end":294521,"line_start":1153,"line_end":1153,"column_start":23,"column_end":29},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":963},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/curl-0.4.34/src/multi.rs","byte_start":295098,"byte_end":295104,"line_start":1175,"line_end":1175,"column_start":21,"column_end":27},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":963},"to":{"krate":2,"index":6176}}]}