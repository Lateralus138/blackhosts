{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19","program":"/home/flux/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","socket2","--edition=2018","/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","-C","metadata=b588e5aea3161a4e","-C","extra-filename=-b588e5aea3161a4e","--out-dir","/home/flux/.git/blackhosts_branch/master/target/rls/debug/deps","-L","dependency=/home/flux/.git/blackhosts_branch/master/target/rls/debug/deps","--extern","cfg_if=/home/flux/.git/blackhosts_branch/master/target/rls/debug/deps/libcfg_if-2df19b6f656edb78.rmeta","--extern","libc=/home/flux/.git/blackhosts_branch/master/target/rls/debug/deps/liblibc-e5c16a92aec8b20b.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/flux/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/flux/.git/blackhosts_branch/master/target/rls/debug/deps/libsocket2-b588e5aea3161a4e.rmeta"},"prelude":{"crate_id":{"name":"socket2","disambiguator":[6211865413535184457,4779073657091754487]},"crate_root":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src","external_crates":[{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[10344648486569477446,2454248652556920925]}},{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14168888756904427512,16776303916459465465]}},{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17407741297230913278,16283799328799007365]}},{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4492142733197306814,14151866605630611617]}},{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9785299734546160784,636286335322626912]}},{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[5680562745065174860,9217186745851755644]}},{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[1647702202987759035,15124534591008137148]}},{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[16711431240759211485,3970175217288203291]}},{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[125532023394459561,9172165323910118991]}},{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[17639569287364244572,9623243733363078576]}},{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[10466182059741283835,56412014413285874]}},{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[6793855748667116046,87956666511033926]}},{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15647227138251999113,1639002543540862534]}},{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[10550792004909319356,1806099500584167781]}},{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sockaddr.rs","num":15,"id":{"name":"libc","disambiguator":[17745677286460134610,7127220457130547334]}},{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","num":16,"id":{"name":"cfg_if","disambiguator":[1891710302102085934,8077733943645503960]}}],"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":467,"byte_end":6145,"line_start":11,"line_end":230,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":28},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":2749,"byte_end":2757,"line_start":90,"line_end":90,"column_start":19,"column_end":27},"alias_span":null,"name":"SockAddr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":69},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":2775,"byte_end":2781,"line_start":91,"line_end":91,"column_start":17,"column_end":23},"alias_span":null,"name":"Socket","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":467,"byte_end":6145,"line_start":11,"line_end":230,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":47},{"krate":0,"index":176},{"krate":0,"index":187},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":496},{"krate":0,"index":501},{"krate":0,"index":499},{"krate":0,"index":388},{"krate":0,"index":391},{"krate":0,"index":393},{"krate":0,"index":502},{"krate":0,"index":507},{"krate":0,"index":505},{"krate":0,"index":395},{"krate":0,"index":400},{"krate":0,"index":402},{"krate":0,"index":508},{"krate":0,"index":513},{"krate":0,"index":511},{"krate":0,"index":404},{"krate":0,"index":409},{"krate":0,"index":411},{"krate":0,"index":413},{"krate":0,"index":415}],"decl_id":null,"docs":" Utilities for handling sockets","sig":null,"attributes":[{"value":"! Utilities for handling sockets","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":467,"byte_end":501,"line_start":11,"line_end":11,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":502,"byte_end":505,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! This crate is sort of an evolution of the `net2` crate after seeing the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":506,"byte_end":581,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"! issues on it over time. The intention of this crate is to provide as direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":582,"byte_end":661,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"! as possible access to the system's functionality for sockets as possible. No","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":662,"byte_end":742,"line_start":15,"line_end":15,"column_start":1,"column_end":81}},{"value":"! extra fluff (e.g. multiple syscalls or builders) provided in this crate. As","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":743,"byte_end":822,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"! a result using this crate can be a little wordy, but it should give you","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":823,"byte_end":898,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"! maximal flexibility over configuration of sockets.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":899,"byte_end":953,"line_start":18,"line_end":18,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":954,"byte_end":957,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":958,"byte_end":972,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":973,"byte_end":976,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":977,"byte_end":990,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"! use std::net::SocketAddr;","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":991,"byte_end":1020,"line_start":23,"line_end":23,"column_start":1,"column_end":30}},{"value":"! use socket2::{Socket, Domain, Type};","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":1021,"byte_end":1061,"line_start":24,"line_end":24,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":1062,"byte_end":1065,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! // create a TCP listener bound to two addresses","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":1066,"byte_end":1117,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"! let socket = Socket::new(Domain::ipv6(), Type::stream(), None).unwrap();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":1118,"byte_end":1194,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":1195,"byte_end":1198,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! socket.bind(&\"[::1]:12345\".parse::<SocketAddr>().unwrap().into()).unwrap();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":1199,"byte_end":1278,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"! socket.set_only_v6(false);","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":1279,"byte_end":1309,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"! socket.listen(128).unwrap();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":1310,"byte_end":1342,"line_start":31,"line_end":31,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":1343,"byte_end":1346,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! let listener = socket.into_tcp_listener();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":1347,"byte_end":1393,"line_start":33,"line_end":33,"column_start":1,"column_end":47}},{"value":"! // ...","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":1394,"byte_end":1404,"line_start":34,"line_end":34,"column_start":1,"column_end":11}},{"value":"! ```","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":1405,"byte_end":1412,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"deny(missing_docs)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":1469,"byte_end":1491,"line_start":38,"line_end":38,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":28},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sockaddr.rs","byte_start":7157,"byte_end":7165,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"SockAddr","qualname":"::sockaddr::SockAddr","value":"SockAddr {  }","parent":null,"children":[{"krate":0,"index":29},{"krate":0,"index":30}],"decl_id":null,"docs":" The address of a socket.","sig":null,"attributes":[{"value":"/ The address of a socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sockaddr.rs","byte_start":6976,"byte_end":7004,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sockaddr.rs","byte_start":7005,"byte_end":7008,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ `SockAddr`s may be constructed directly to and from the standard library","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sockaddr.rs","byte_start":7009,"byte_end":7085,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"/ `SocketAddr`, `SocketAddrV4`, and `SocketAddrV6` types.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sockaddr.rs","byte_start":7086,"byte_end":7145,"line_start":28,"line_end":28,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sockaddr.rs","byte_start":7737,"byte_end":7751,"line_start":49,"line_end":49,"column_start":19,"column_end":33},"name":"from_raw_parts","qualname":"<SockAddr>::from_raw_parts","value":"fn (addr: *const sockaddr, len: socklen_t) -> SockAddr","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `SockAddr` from its raw components.\n","sig":null,"attributes":[{"value":"/ Constructs a `SockAddr` from its raw components.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sockaddr.rs","byte_start":7666,"byte_end":7718,"line_start":48,"line_end":48,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sockaddr.rs","byte_start":10507,"byte_end":10514,"line_start":129,"line_end":129,"column_start":12,"column_end":19},"name":"as_inet","qualname":"<SockAddr>::as_inet","value":"fn (&self) -> Option<SocketAddrV4>","parent":null,"children":[],"decl_id":null,"docs":" Returns this address as a `SocketAddrV4` if it is in the `AF_INET`\n family.\n","sig":null,"attributes":[{"value":"/ Returns this address as a `SocketAddrV4` if it is in the `AF_INET`","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sockaddr.rs","byte_start":10409,"byte_end":10479,"line_start":127,"line_end":127,"column_start":5,"column_end":75}},{"value":"/ family.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sockaddr.rs","byte_start":10484,"byte_end":10495,"line_start":128,"line_end":128,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sockaddr.rs","byte_start":10775,"byte_end":10783,"line_start":138,"line_end":138,"column_start":12,"column_end":20},"name":"as_inet6","qualname":"<SockAddr>::as_inet6","value":"fn (&self) -> Option<SocketAddrV6>","parent":null,"children":[],"decl_id":null,"docs":" Returns this address as a `SocketAddrV6` if it is in the `AF_INET6`\n family.\n","sig":null,"attributes":[{"value":"/ Returns this address as a `SocketAddrV6` if it is in the `AF_INET6`","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sockaddr.rs","byte_start":10676,"byte_end":10747,"line_start":136,"line_end":136,"column_start":5,"column_end":76}},{"value":"/ family.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sockaddr.rs","byte_start":10752,"byte_end":10763,"line_start":137,"line_end":137,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sockaddr.rs","byte_start":11081,"byte_end":11087,"line_start":147,"line_end":147,"column_start":12,"column_end":18},"name":"as_std","qualname":"<SockAddr>::as_std","value":"fn (&self) -> Option<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns this address as a `SocketAddr` if it is in the `AF_INET`\n or `AF_INET6` family, otherwise returns `None`.\n","sig":null,"attributes":[{"value":"/ Returns this address as a `SocketAddr` if it is in the `AF_INET`","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sockaddr.rs","byte_start":10945,"byte_end":11013,"line_start":145,"line_end":145,"column_start":5,"column_end":73}},{"value":"/ or `AF_INET6` family, otherwise returns `None`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sockaddr.rs","byte_start":11018,"byte_end":11069,"line_start":146,"line_end":146,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sockaddr.rs","byte_start":12730,"byte_end":12736,"line_start":187,"line_end":187,"column_start":12,"column_end":18},"name":"family","qualname":"<SockAddr>::family","value":"fn (&self) -> sa_family_t","parent":null,"children":[],"decl_id":null,"docs":" Returns this address's family.\n","sig":null,"attributes":[{"value":"/ Returns this address's family.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sockaddr.rs","byte_start":12684,"byte_end":12718,"line_start":186,"line_end":186,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sockaddr.rs","byte_start":12861,"byte_end":12864,"line_start":192,"line_end":192,"column_start":12,"column_end":15},"name":"len","qualname":"<SockAddr>::len","value":"fn (&self) -> socklen_t","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of this address in bytes.\n","sig":null,"attributes":[{"value":"/ Returns the size of this address in bytes.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sockaddr.rs","byte_start":12803,"byte_end":12849,"line_start":191,"line_end":191,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sockaddr.rs","byte_start":12968,"byte_end":12974,"line_start":197,"line_end":197,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<SockAddr>::as_ptr","value":"fn (&self) -> *const sockaddr","parent":null,"children":[],"decl_id":null,"docs":" Returns a raw pointer to the address.\n","sig":null,"attributes":[{"value":"/ Returns a raw pointer to the address.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sockaddr.rs","byte_start":12915,"byte_end":12956,"line_start":196,"line_end":196,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":69},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":18904,"byte_end":18910,"line_start":53,"line_end":53,"column_start":12,"column_end":18},"name":"Socket","qualname":"::socket::Socket","value":"Socket {  }","parent":null,"children":[{"krate":0,"index":70}],"decl_id":null,"docs":" Newtype, owned, wrapper around a system socket.","sig":null,"attributes":[{"value":"/ Newtype, owned, wrapper around a system socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":17903,"byte_end":17954,"line_start":28,"line_end":28,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":17955,"byte_end":17958,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This type simply wraps an instance of a file descriptor (`c_int`) on Unix","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":17959,"byte_end":18036,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ and an instance of `SOCKET` on Windows. This is the main type exported by","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":18037,"byte_end":18114,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"/ this crate and is intended to mirror the raw semantics of sockets on","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":18115,"byte_end":18187,"line_start":32,"line_end":32,"column_start":1,"column_end":73}},{"value":"/ platforms as closely as possible. Almost all methods correspond to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":18188,"byte_end":18258,"line_start":33,"line_end":33,"column_start":1,"column_end":71}},{"value":"/ precisely one libc or OS API call which is essentially just a \"Rustic","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":18259,"byte_end":18332,"line_start":34,"line_end":34,"column_start":1,"column_end":74}},{"value":"/ translation\" of what's below.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":18333,"byte_end":18366,"line_start":35,"line_end":35,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":18367,"byte_end":18370,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":18371,"byte_end":18385,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":18386,"byte_end":18389,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":18390,"byte_end":18403,"line_start":39,"line_end":39,"column_start":1,"column_end":14}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":18404,"byte_end":18433,"line_start":40,"line_end":40,"column_start":1,"column_end":30}},{"value":"/ use socket2::{Socket, Domain, Type, SockAddr};","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":18434,"byte_end":18484,"line_start":41,"line_end":41,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":18485,"byte_end":18488,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ // create a TCP listener bound to two addresses","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":18489,"byte_end":18540,"line_start":43,"line_end":43,"column_start":1,"column_end":52}},{"value":"/ let socket = Socket::new(Domain::ipv4(), Type::stream(), None).unwrap();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":18541,"byte_end":18617,"line_start":44,"line_end":44,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":18618,"byte_end":18621,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ socket.bind(&\"127.0.0.1:12345\".parse::<SocketAddr>().unwrap().into()).unwrap();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":18622,"byte_end":18705,"line_start":46,"line_end":46,"column_start":1,"column_end":84}},{"value":"/ socket.bind(&\"127.0.0.1:12346\".parse::<SocketAddr>().unwrap().into()).unwrap();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":18706,"byte_end":18789,"line_start":47,"line_end":47,"column_start":1,"column_end":84}},{"value":"/ socket.listen(128).unwrap();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":18790,"byte_end":18822,"line_start":48,"line_end":48,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":18823,"byte_end":18826,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ let listener = socket.into_tcp_listener();","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":18827,"byte_end":18873,"line_start":50,"line_end":50,"column_start":1,"column_end":47}},{"value":"/ // ...","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":18874,"byte_end":18884,"line_start":51,"line_end":51,"column_start":1,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":18885,"byte_end":18892,"line_start":52,"line_end":52,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":19286,"byte_end":19289,"line_start":64,"line_end":64,"column_start":12,"column_end":15},"name":"new","qualname":"<Socket>::new","value":"fn (domain: Domain, type_: Type, protocol: Option<Protocol>) -> io::Result<Socket>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new socket ready to be configured.","sig":null,"attributes":[{"value":"/ Creates a new socket ready to be configured.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":19025,"byte_end":19073,"line_start":59,"line_end":59,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":19078,"byte_end":19081,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ This function corresponds to `socket(2)` and simply creates a new","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":19086,"byte_end":19155,"line_start":61,"line_end":61,"column_start":5,"column_end":74}},{"value":"/ socket, no other configuration is done and further functions must be","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":19160,"byte_end":19232,"line_start":62,"line_end":62,"column_start":5,"column_end":77}},{"value":"/ invoked to configure this socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":19237,"byte_end":19274,"line_start":63,"line_end":63,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":20227,"byte_end":20242,"line_start":89,"line_end":89,"column_start":12,"column_end":27},"name":"into_tcp_stream","qualname":"<Socket>::into_tcp_stream","value":"fn (self) -> net::TcpStream","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Socket`, converting it to a `TcpStream`.\n","sig":null,"attributes":[{"value":"/ Consumes this `Socket`, converting it to a `TcpStream`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":20156,"byte_end":20215,"line_start":88,"line_end":88,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":20373,"byte_end":20390,"line_start":94,"line_end":94,"column_start":12,"column_end":29},"name":"into_tcp_listener","qualname":"<Socket>::into_tcp_listener","value":"fn (self) -> net::TcpListener","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Socket`, converting it to a `TcpListener`.\n","sig":null,"attributes":[{"value":"/ Consumes this `Socket`, converting it to a `TcpListener`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":20300,"byte_end":20361,"line_start":93,"line_end":93,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":20521,"byte_end":20536,"line_start":99,"line_end":99,"column_start":12,"column_end":27},"name":"into_udp_socket","qualname":"<Socket>::into_udp_socket","value":"fn (self) -> net::UdpSocket","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Socket`, converting it to a `UdpSocket`.\n","sig":null,"attributes":[{"value":"/ Consumes this `Socket`, converting it to a `UdpSocket`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":20450,"byte_end":20509,"line_start":98,"line_end":98,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":21759,"byte_end":21766,"line_start":137,"line_end":137,"column_start":12,"column_end":19},"name":"connect","qualname":"<Socket>::connect","value":"fn (&self, addr: &SockAddr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Initiate a connection on this socket to the specified address.","sig":null,"attributes":[{"value":"/ Initiate a connection on this socket to the specified address.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":21458,"byte_end":21524,"line_start":130,"line_end":130,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":21529,"byte_end":21532,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This function directly corresponds to the connect(2) function on Windows","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":21537,"byte_end":21613,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ and Unix.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":21618,"byte_end":21631,"line_start":133,"line_end":133,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":21636,"byte_end":21639,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ An error will be returned if `listen` or `connect` has already been","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":21644,"byte_end":21715,"line_start":135,"line_end":135,"column_start":5,"column_end":76}},{"value":"/ called on this builder.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":21720,"byte_end":21747,"line_start":136,"line_end":136,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":22839,"byte_end":22854,"line_start":160,"line_end":160,"column_start":12,"column_end":27},"name":"connect_timeout","qualname":"<Socket>::connect_timeout","value":"fn (&self, addr: &SockAddr, timeout: Duration) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Initiate a connection on this socket to the specified address, only\n only waiting for a certain period of time for the connection to be\n established.","sig":null,"attributes":[{"value":"/ Initiate a connection on this socket to the specified address, only","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":21855,"byte_end":21926,"line_start":141,"line_end":141,"column_start":5,"column_end":76}},{"value":"/ only waiting for a certain period of time for the connection to be","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":21931,"byte_end":22001,"line_start":142,"line_end":142,"column_start":5,"column_end":75}},{"value":"/ established.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":22006,"byte_end":22022,"line_start":143,"line_end":143,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":22027,"byte_end":22030,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ Unlike many other methods on `Socket`, this does *not* correspond to a","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":22035,"byte_end":22109,"line_start":145,"line_end":145,"column_start":5,"column_end":79}},{"value":"/ single C function. It sets the socket to nonblocking mode, connects via","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":22114,"byte_end":22189,"line_start":146,"line_end":146,"column_start":5,"column_end":80}},{"value":"/ connect(2), and then waits for the connection to complete with poll(2)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":22194,"byte_end":22268,"line_start":147,"line_end":147,"column_start":5,"column_end":79}},{"value":"/ on Unix and select on Windows. When the connection is complete, the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":22273,"byte_end":22344,"line_start":148,"line_end":148,"column_start":5,"column_end":76}},{"value":"/ socket is set back to blocking mode. On Unix, this will loop over","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":22349,"byte_end":22418,"line_start":149,"line_end":149,"column_start":5,"column_end":74}},{"value":"/ `EINTR` errors.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":22423,"byte_end":22442,"line_start":150,"line_end":150,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":22447,"byte_end":22450,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ # Warnings","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":22455,"byte_end":22469,"line_start":152,"line_end":152,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":22474,"byte_end":22477,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ The nonblocking state of the socket is overridden by this function -","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":22482,"byte_end":22554,"line_start":154,"line_end":154,"column_start":5,"column_end":77}},{"value":"/ it will be returned in blocking mode on success, and in an indeterminate","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":22559,"byte_end":22635,"line_start":155,"line_end":155,"column_start":5,"column_end":81}},{"value":"/ state on failure.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":22640,"byte_end":22661,"line_start":156,"line_end":156,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":22666,"byte_end":22669,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ If the connection request times out, it may still be processing in the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":22674,"byte_end":22748,"line_start":158,"line_end":158,"column_start":5,"column_end":79}},{"value":"/ background - a second call to `connect` or `connect_timeout` may fail.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":22753,"byte_end":22827,"line_start":159,"line_end":159,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":23142,"byte_end":23146,"line_start":168,"line_end":168,"column_start":12,"column_end":16},"name":"bind","qualname":"<Socket>::bind","value":"fn (&self, addr: &SockAddr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Binds this socket to the specified address.","sig":null,"attributes":[{"value":"/ Binds this socket to the specified address.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":22979,"byte_end":23026,"line_start":164,"line_end":164,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":23031,"byte_end":23034,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This function directly corresponds to the bind(2) function on Windows","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":23039,"byte_end":23112,"line_start":166,"line_end":166,"column_start":5,"column_end":78}},{"value":"/ and Unix.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":23117,"byte_end":23130,"line_start":167,"line_end":167,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":23554,"byte_end":23560,"line_start":180,"line_end":180,"column_start":12,"column_end":18},"name":"listen","qualname":"<Socket>::listen","value":"fn (&self, backlog: i32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Mark a socket as ready to accept incoming connection requests using\n accept()","sig":null,"attributes":[{"value":"/ Mark a socket as ready to accept incoming connection requests using","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":23232,"byte_end":23303,"line_start":172,"line_end":172,"column_start":5,"column_end":76}},{"value":"/ accept()","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":23308,"byte_end":23320,"line_start":173,"line_end":173,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":23325,"byte_end":23328,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ This function directly corresponds to the listen(2) function on Windows","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":23333,"byte_end":23408,"line_start":175,"line_end":175,"column_start":5,"column_end":80}},{"value":"/ and Unix.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":23413,"byte_end":23426,"line_start":176,"line_end":176,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":23431,"byte_end":23434,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ An error will be returned if `listen` or `connect` has already been","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":23439,"byte_end":23510,"line_start":178,"line_end":178,"column_start":5,"column_end":76}},{"value":"/ called on this builder.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":23515,"byte_end":23542,"line_start":179,"line_end":179,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":23924,"byte_end":23930,"line_start":189,"line_end":189,"column_start":12,"column_end":18},"name":"accept","qualname":"<Socket>::accept","value":"fn (&self) -> io::Result<(Socket, SockAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Accept a new incoming connection from this listener.","sig":null,"attributes":[{"value":"/ Accept a new incoming connection from this listener.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":23648,"byte_end":23704,"line_start":184,"line_end":184,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":23709,"byte_end":23712,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ This function will block the calling thread until a new connection is","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":23717,"byte_end":23790,"line_start":186,"line_end":186,"column_start":5,"column_end":78}},{"value":"/ established. When established, the corresponding `Socket` and the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":23795,"byte_end":23864,"line_start":187,"line_end":187,"column_start":5,"column_end":74}},{"value":"/ remote peer's address will be returned.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":23869,"byte_end":23912,"line_start":188,"line_end":188,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":24178,"byte_end":24188,"line_start":196,"line_end":196,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<Socket>::local_addr","value":"fn (&self) -> io::Result<SockAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the local half of this TCP connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the local half of this TCP connection.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":24094,"byte_end":24166,"line_start":195,"line_end":195,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":24350,"byte_end":24359,"line_start":201,"line_end":201,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<Socket>::peer_addr","value":"fn (&self) -> io::Result<SockAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote peer of this TCP connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote peer of this TCP connection.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":24265,"byte_end":24338,"line_start":200,"line_end":200,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":24773,"byte_end":24782,"line_start":211,"line_end":211,"column_start":12,"column_end":21},"name":"try_clone","qualname":"<Socket>::try_clone","value":"fn (&self) -> io::Result<Socket>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new independently owned handle to the underlying socket.","sig":null,"attributes":[{"value":"/ Creates a new independently owned handle to the underlying socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":24435,"byte_end":24505,"line_start":205,"line_end":205,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":24510,"byte_end":24513,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ The returned `TcpStream` is a reference to the same stream that this","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":24518,"byte_end":24590,"line_start":207,"line_end":207,"column_start":5,"column_end":77}},{"value":"/ object references. Both handles will read and write the same stream of","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":24595,"byte_end":24669,"line_start":208,"line_end":208,"column_start":5,"column_end":79}},{"value":"/ data, and options set on one stream will be propagated to the other","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":24674,"byte_end":24745,"line_start":209,"line_end":209,"column_start":5,"column_end":76}},{"value":"/ stream.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":24750,"byte_end":24761,"line_start":210,"line_end":210,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":25138,"byte_end":25148,"line_start":220,"line_end":220,"column_start":12,"column_end":22},"name":"take_error","qualname":"<Socket>::take_error","value":"fn (&self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `SO_ERROR` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `SO_ERROR` option on this socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":24885,"byte_end":24943,"line_start":215,"line_end":215,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":24948,"byte_end":24951,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ This will retrieve the stored error in the underlying socket, clearing","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":24956,"byte_end":25030,"line_start":217,"line_end":217,"column_start":5,"column_end":79}},{"value":"/ the field in the process. This can be useful for checking errors between","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":25035,"byte_end":25111,"line_start":218,"line_end":218,"column_start":5,"column_end":81}},{"value":"/ calls.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":25116,"byte_end":25126,"line_start":219,"line_end":219,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":25427,"byte_end":25442,"line_start":228,"line_end":228,"column_start":12,"column_end":27},"name":"set_nonblocking","qualname":"<Socket>::set_nonblocking","value":"fn (&self, nonblocking: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Moves this TCP stream into or out of nonblocking mode.","sig":null,"attributes":[{"value":"/ Moves this TCP stream into or out of nonblocking mode.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":25234,"byte_end":25292,"line_start":224,"line_end":224,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":25297,"byte_end":25300,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ On Unix this corresponds to calling fcntl, and on Windows this","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":25305,"byte_end":25371,"line_start":226,"line_end":226,"column_start":5,"column_end":71}},{"value":"/ corresponds to calling ioctlsocket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":25376,"byte_end":25415,"line_start":227,"line_end":227,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":25777,"byte_end":25785,"line_start":236,"line_end":236,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<Socket>::shutdown","value":"fn (&self, how: Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":25548,"byte_end":25614,"line_start":232,"line_end":232,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":25619,"byte_end":25622,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O on the specified","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":25627,"byte_end":25699,"line_start":234,"line_end":234,"column_start":5,"column_end":77}},{"value":"/ portions to return immediately with an appropriate value.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":25704,"byte_end":25765,"line_start":235,"line_end":235,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":26165,"byte_end":26169,"line_start":247,"line_end":247,"column_start":12,"column_end":16},"name":"recv","qualname":"<Socket>::recv","value":"fn (&self, buf: &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":25872,"byte_end":25942,"line_start":240,"line_end":240,"column_start":5,"column_end":75}},{"value":"/ connected.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":25947,"byte_end":25961,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":25966,"byte_end":25969,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. This","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":25974,"byte_end":26051,"line_start":243,"line_end":243,"column_start":5,"column_end":82}},{"value":"/ method will fail if the socket is not connected.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":26056,"byte_end":26108,"line_start":244,"line_end":244,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":26113,"byte_end":26116,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: #method.connect","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":26121,"byte_end":26153,"line_start":246,"line_end":246,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":26422,"byte_end":26437,"line_start":255,"line_end":255,"column_start":12,"column_end":27},"name":"recv_with_flags","qualname":"<Socket>::recv_with_flags","value":"fn (&self, buf: &mut [u8], flags: i32) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Identical to [`recv`] but allows for specification of arbitrary flags to the underlying\n `recv` call.","sig":null,"attributes":[{"value":"/ Identical to [`recv`] but allows for specification of arbitrary flags to the underlying","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":26259,"byte_end":26350,"line_start":251,"line_end":251,"column_start":5,"column_end":96}},{"value":"/ `recv` call.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":26355,"byte_end":26371,"line_start":252,"line_end":252,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":26376,"byte_end":26379,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: #method.recv","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":26384,"byte_end":26410,"line_start":254,"line_end":254,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":26880,"byte_end":26896,"line_start":266,"line_end":266,"column_start":12,"column_end":28},"name":"recv_out_of_band","qualname":"<Socket>::recv_out_of_band","value":"fn (&self, buf: &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives out-of-band (OOB) data on the socket from the remote address to\n which it is connected by setting the `MSG_OOB` flag for this call.","sig":null,"attributes":[{"value":"/ Receives out-of-band (OOB) data on the socket from the remote address to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":26543,"byte_end":26619,"line_start":259,"line_end":259,"column_start":5,"column_end":81}},{"value":"/ which it is connected by setting the `MSG_OOB` flag for this call.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":26624,"byte_end":26694,"line_start":260,"line_end":260,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":26699,"byte_end":26702,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ For more information, see [`recv`], [`out_of_band_inline`].","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":26707,"byte_end":26770,"line_start":262,"line_end":262,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":26775,"byte_end":26778,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: #method.recv","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":26783,"byte_end":26809,"line_start":264,"line_end":264,"column_start":5,"column_end":31}},{"value":"/ [`out_of_band_inline`]: #method.out_of_band_inline","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":26814,"byte_end":26868,"line_start":265,"line_end":265,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":27345,"byte_end":27349,"line_start":276,"line_end":276,"column_start":12,"column_end":16},"name":"peek","qualname":"<Socket>::peek","value":"fn (&self, buf: &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote adress to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote adress to which it is","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":26992,"byte_end":27061,"line_start":270,"line_end":270,"column_start":5,"column_end":74}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":27066,"byte_end":27135,"line_start":271,"line_end":271,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":27140,"byte_end":27179,"line_start":272,"line_end":272,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":27184,"byte_end":27187,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":27192,"byte_end":27266,"line_start":274,"line_end":274,"column_start":5,"column_end":79}},{"value":"/ `MSG_PEEK` as a flag to the underlying `recv` system call.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":27271,"byte_end":27333,"line_start":275,"line_end":275,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":27578,"byte_end":27587,"line_start":282,"line_end":282,"column_start":12,"column_end":21},"name":"recv_from","qualname":"<Socket>::recv_from","value":"fn (&self, buf: &mut [u8]) -> io::Result<(usize, SockAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket. On success, returns the number of bytes\n read and the address from whence the data came.\n","sig":null,"attributes":[{"value":"/ Receives data from the socket. On success, returns the number of bytes","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":27436,"byte_end":27510,"line_start":280,"line_end":280,"column_start":5,"column_end":79}},{"value":"/ read and the address from whence the data came.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":27515,"byte_end":27566,"line_start":281,"line_end":281,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":27876,"byte_end":27896,"line_start":290,"line_end":290,"column_start":12,"column_end":32},"name":"recv_from_with_flags","qualname":"<Socket>::recv_from_with_flags","value":"fn (&self, buf: &mut [u8], flags: i32) -> io::Result<(usize, SockAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Identical to [`recv_from`] but allows for specification of arbitrary flags to the underlying\n `recvfrom` call.","sig":null,"attributes":[{"value":"/ Identical to [`recv_from`] but allows for specification of arbitrary flags to the underlying","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":27694,"byte_end":27790,"line_start":286,"line_end":286,"column_start":5,"column_end":101}},{"value":"/ `recvfrom` call.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":27795,"byte_end":27815,"line_start":287,"line_end":287,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":27820,"byte_end":27823,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ [`recv_from`]: #method.recv_from","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":27828,"byte_end":27864,"line_start":289,"line_end":289,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":28404,"byte_end":28413,"line_start":305,"line_end":305,"column_start":12,"column_end":21},"name":"peek_from","qualname":"<Socket>::peek_from","value":"fn (&self, buf: &mut [u8]) -> io::Result<(usize, SockAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket, without removing it from the queue.","sig":null,"attributes":[{"value":"/ Receives data from the socket, without removing it from the queue.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":28050,"byte_end":28120,"line_start":298,"line_end":298,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":28125,"byte_end":28128,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":28133,"byte_end":28207,"line_start":300,"line_end":300,"column_start":5,"column_end":79}},{"value":"/ `MSG_PEEK` as a flag to the underlying `recvfrom` system call.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":28212,"byte_end":28278,"line_start":301,"line_end":301,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":28283,"byte_end":28286,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes peeked and the address from","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":28291,"byte_end":28362,"line_start":303,"line_end":303,"column_start":5,"column_end":76}},{"value":"/ whence the data came.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":28367,"byte_end":28392,"line_start":304,"line_end":304,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":28758,"byte_end":28762,"line_start":315,"line_end":315,"column_start":12,"column_end":16},"name":"send","qualname":"<Socket>::send","value":"fn (&self, buf: &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to a connected peer.","sig":null,"attributes":[{"value":"/ Sends data on the socket to a connected peer.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":28517,"byte_end":28566,"line_start":309,"line_end":309,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":28571,"byte_end":28574,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ This is typically used on TCP sockets or datagram sockets which have","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":28579,"byte_end":28651,"line_start":311,"line_end":311,"column_start":5,"column_end":77}},{"value":"/ been connected.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":28656,"byte_end":28675,"line_start":312,"line_end":312,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":28680,"byte_end":28683,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ On success returns the number of bytes that were sent.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":28688,"byte_end":28746,"line_start":314,"line_end":314,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":29011,"byte_end":29026,"line_start":323,"line_end":323,"column_start":12,"column_end":27},"name":"send_with_flags","qualname":"<Socket>::send_with_flags","value":"fn (&self, buf: &[u8], flags: i32) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Identical to [`send`] but allows for specification of arbitrary flags to the underlying\n `send` call.","sig":null,"attributes":[{"value":"/ Identical to [`send`] but allows for specification of arbitrary flags to the underlying","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":28848,"byte_end":28939,"line_start":319,"line_end":319,"column_start":5,"column_end":96}},{"value":"/ `send` call.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":28944,"byte_end":28960,"line_start":320,"line_end":320,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":28965,"byte_end":28968,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ [`send`]: #method.send","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":28973,"byte_end":28999,"line_start":322,"line_end":322,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":29431,"byte_end":29447,"line_start":334,"line_end":334,"column_start":12,"column_end":28},"name":"send_out_of_band","qualname":"<Socket>::send_out_of_band","value":"fn (&self, buf: &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends out-of-band (OOB) data on the socket to connected peer\n by setting the `MSG_OOB` flag for this call.","sig":null,"attributes":[{"value":"/ Sends out-of-band (OOB) data on the socket to connected peer","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":29128,"byte_end":29192,"line_start":327,"line_end":327,"column_start":5,"column_end":69}},{"value":"/ by setting the `MSG_OOB` flag for this call.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":29197,"byte_end":29245,"line_start":328,"line_end":328,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":29250,"byte_end":29253,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ For more information, see [`send`], [`out_of_band_inline`].","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":29258,"byte_end":29321,"line_start":330,"line_end":330,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":29326,"byte_end":29329,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ [`send`]: #method.send","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":29334,"byte_end":29360,"line_start":332,"line_end":332,"column_start":5,"column_end":31}},{"value":"/ [`out_of_band_inline`]: #method.out_of_band_inline","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":29365,"byte_end":29419,"line_start":333,"line_end":333,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":29797,"byte_end":29804,"line_start":343,"line_end":343,"column_start":12,"column_end":19},"name":"send_to","qualname":"<Socket>::send_to","value":"fn (&self, buf: &[u8], addr: &SockAddr) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the given address. On success, returns the\n number of bytes written.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the given address. On success, returns the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":29539,"byte_end":29613,"line_start":338,"line_end":338,"column_start":5,"column_end":79}},{"value":"/ number of bytes written.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":29618,"byte_end":29646,"line_start":339,"line_end":339,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":29651,"byte_end":29654,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ This is typically used on UDP or datagram-oriented sockets. On success","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":29659,"byte_end":29733,"line_start":341,"line_end":341,"column_start":5,"column_end":79}},{"value":"/ returns the number of bytes that were sent.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":29738,"byte_end":29785,"line_start":342,"line_end":342,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":30090,"byte_end":30108,"line_start":351,"line_end":351,"column_start":12,"column_end":30},"name":"send_to_with_flags","qualname":"<Socket>::send_to_with_flags","value":"fn (&self, buf: &[u8], addr: &SockAddr, flags: i32) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Identical to [`send_to`] but allows for specification of arbitrary flags to the underlying\n `sendto` call.","sig":null,"attributes":[{"value":"/ Identical to [`send_to`] but allows for specification of arbitrary flags to the underlying","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":29916,"byte_end":30010,"line_start":347,"line_end":347,"column_start":5,"column_end":99}},{"value":"/ `sendto` call.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":30015,"byte_end":30033,"line_start":348,"line_end":348,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":30038,"byte_end":30041,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ [`send_to`]: #method.send_to","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":30046,"byte_end":30078,"line_start":350,"line_end":350,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":30482,"byte_end":30485,"line_start":362,"line_end":362,"column_start":12,"column_end":15},"name":"ttl","qualname":"<Socket>::ttl","value":"fn (&self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":30293,"byte_end":30351,"line_start":357,"line_end":357,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":30356,"byte_end":30359,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`][link].","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":30364,"byte_end":30430,"line_start":359,"line_end":359,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":30435,"byte_end":30438,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_ttl","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":30443,"byte_end":30470,"line_start":361,"line_end":361,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":30735,"byte_end":30742,"line_start":370,"line_end":370,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<Socket>::set_ttl","value":"fn (&self, ttl: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":30550,"byte_end":30608,"line_start":366,"line_end":366,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":30613,"byte_end":30616,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":30621,"byte_end":30697,"line_start":368,"line_end":368,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":30702,"byte_end":30723,"line_start":369,"line_end":369,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":31067,"byte_end":31070,"line_start":379,"line_end":379,"column_start":12,"column_end":15},"name":"mss","qualname":"<Socket>::mss","value":"fn (&self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_MAXSEG` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_MAXSEG` option on this socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":30823,"byte_end":30884,"line_start":374,"line_end":374,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":30889,"byte_end":30892,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ The `TCP_MAXSEG` option denotes the TCP Maximum Segment","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":30897,"byte_end":30956,"line_start":376,"line_end":376,"column_start":5,"column_end":64}},{"value":"/ Size and is only available on TCP sockets.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":30961,"byte_end":31007,"line_start":377,"line_end":377,"column_start":5,"column_end":51}},{"value":"cfg(all(unix, not(target_os = \"redox\")))","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":31012,"byte_end":31055,"line_start":378,"line_end":378,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":31379,"byte_end":31386,"line_start":388,"line_end":388,"column_start":12,"column_end":19},"name":"set_mss","qualname":"<Socket>::set_mss","value":"fn (&self, mss: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_MAXSEG` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_MAXSEG` option on this socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":31135,"byte_end":31196,"line_start":383,"line_end":383,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":31201,"byte_end":31204,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ The `TCP_MAXSEG` option denotes the TCP Maximum Segment","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":31209,"byte_end":31268,"line_start":385,"line_end":385,"column_start":5,"column_end":64}},{"value":"/ Size and is only available on TCP sockets.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":31273,"byte_end":31319,"line_start":386,"line_end":386,"column_start":5,"column_end":51}},{"value":"cfg(all(unix, not(target_os = \"redox\")))","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":31324,"byte_end":31367,"line_start":387,"line_end":387,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":31784,"byte_end":31788,"line_start":400,"line_end":400,"column_start":12,"column_end":16},"name":"mark","qualname":"<Socket>::mark","value":"fn (&self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value for the `SO_MARK` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value for the `SO_MARK` option on this socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":31467,"byte_end":31526,"line_start":392,"line_end":392,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":31531,"byte_end":31534,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ This value gets the socket mark field for each packet sent through","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":31539,"byte_end":31609,"line_start":394,"line_end":394,"column_start":5,"column_end":75}},{"value":"/ this socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":31614,"byte_end":31630,"line_start":395,"line_end":395,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":31635,"byte_end":31638,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ This function is only available on Linux and requires the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":31643,"byte_end":31704,"line_start":397,"line_end":397,"column_start":5,"column_end":66}},{"value":"/ `CAP_NET_ADMIN` capability.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":31709,"byte_end":31740,"line_start":398,"line_end":398,"column_start":5,"column_end":36}},{"value":"cfg(target_os = \"linux\")","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":31745,"byte_end":31772,"line_start":399,"line_end":399,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":32275,"byte_end":32283,"line_start":413,"line_end":413,"column_start":12,"column_end":20},"name":"set_mark","qualname":"<Socket>::set_mark","value":"fn (&self, mark: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `SO_MARK` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `SO_MARK` option on this socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":31854,"byte_end":31913,"line_start":404,"line_end":404,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":31918,"byte_end":31921,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ This value sets the socket mark field for each packet sent through","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":31926,"byte_end":31996,"line_start":406,"line_end":406,"column_start":5,"column_end":75}},{"value":"/ this socket. Changing the mark can be used for mark-based routing","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":32001,"byte_end":32070,"line_start":407,"line_end":407,"column_start":5,"column_end":74}},{"value":"/ without netfilter or for packet filtering.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":32075,"byte_end":32121,"line_start":408,"line_end":408,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":32126,"byte_end":32129,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ This function is only available on Linux and requires the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":32134,"byte_end":32195,"line_start":410,"line_end":410,"column_start":5,"column_end":66}},{"value":"/ `CAP_NET_ADMIN` capability.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":32200,"byte_end":32231,"line_start":411,"line_end":411,"column_start":5,"column_end":36}},{"value":"cfg(target_os = \"linux\")","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":32236,"byte_end":32263,"line_start":412,"line_end":412,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":32611,"byte_end":32617,"line_start":423,"line_end":423,"column_start":12,"column_end":18},"name":"device","qualname":"<Socket>::device","value":"fn (&self) -> io::Result<Option<CString>>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value for the `SO_BINDTODEVICE` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value for the `SO_BINDTODEVICE` option on this socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":32367,"byte_end":32434,"line_start":417,"line_end":417,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":32439,"byte_end":32442,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ This value gets the socket binded device's interface name.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":32447,"byte_end":32509,"line_start":419,"line_end":419,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":32514,"byte_end":32517,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ This function is only available on Linux.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":32522,"byte_end":32567,"line_start":421,"line_end":421,"column_start":5,"column_end":50}},{"value":"cfg(target_os = \"linux\")","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":32572,"byte_end":32599,"line_start":422,"line_end":422,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":33183,"byte_end":33194,"line_start":437,"line_end":437,"column_start":12,"column_end":23},"name":"bind_device","qualname":"<Socket>::bind_device","value":"fn (&self, interface: Option<&CStr>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `SO_BINDTODEVICE` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `SO_BINDTODEVICE` option on this socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":32697,"byte_end":32764,"line_start":427,"line_end":427,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":32769,"byte_end":32772,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ If a socket is bound to an interface, only packets received from that","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":32777,"byte_end":32850,"line_start":429,"line_end":429,"column_start":5,"column_end":78}},{"value":"/ particular interface are processed by the socket. Note that this only","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":32855,"byte_end":32928,"line_start":430,"line_end":430,"column_start":5,"column_end":78}},{"value":"/ works for some socket types, particularly `AF_INET` sockets.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":32933,"byte_end":32997,"line_start":431,"line_end":431,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":33002,"byte_end":33005,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ If `interface` is `None` or an empty string it removes the binding.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":33010,"byte_end":33081,"line_start":433,"line_end":433,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":33086,"byte_end":33089,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ This function is only available on Linux.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":33094,"byte_end":33139,"line_start":435,"line_end":435,"column_start":5,"column_end":50}},{"value":"cfg(target_os = \"linux\")","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":33144,"byte_end":33171,"line_start":436,"line_end":436,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":33447,"byte_end":33462,"line_start":444,"line_end":444,"column_start":12,"column_end":27},"name":"unicast_hops_v6","qualname":"<Socket>::unicast_hops_v6","value":"fn (&self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_UNICAST_HOPS` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_UNICAST_HOPS` option for this socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":33301,"byte_end":33370,"line_start":441,"line_end":441,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":33375,"byte_end":33378,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ Specifies the hop limit for ipv6 unicast packets","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":33383,"byte_end":33435,"line_start":443,"line_end":443,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":33685,"byte_end":33704,"line_start":451,"line_end":451,"column_start":12,"column_end":31},"name":"set_unicast_hops_v6","qualname":"<Socket>::set_unicast_hops_v6","value":"fn (&self, ttl: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IPV6_UNICAST_HOPS` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IPV6_UNICAST_HOPS` option on this socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":33539,"byte_end":33608,"line_start":448,"line_end":448,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":33613,"byte_end":33616,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ Specifies the hop limit for ipv6 unicast packets","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":33621,"byte_end":33673,"line_start":450,"line_end":450,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":33999,"byte_end":34006,"line_start":460,"line_end":460,"column_start":12,"column_end":19},"name":"only_v6","qualname":"<Socket>::only_v6","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_V6ONLY` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_V6ONLY` option for this socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":33797,"byte_end":33860,"line_start":455,"line_end":455,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":33865,"byte_end":33868,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_only_v6`][link].","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":33873,"byte_end":33943,"line_start":457,"line_end":457,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":33948,"byte_end":33951,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_only_v6","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":33956,"byte_end":33987,"line_start":459,"line_end":459,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":34507,"byte_end":34518,"line_start":472,"line_end":472,"column_start":12,"column_end":23},"name":"set_only_v6","qualname":"<Socket>::set_only_v6","value":"fn (&self, only_v6: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IPV6_V6ONLY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IPV6_V6ONLY` option on this socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":34076,"byte_end":34139,"line_start":464,"line_end":464,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":34144,"byte_end":34147,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ If this is set to `true` then the socket is restricted to sending and","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":34152,"byte_end":34225,"line_start":466,"line_end":466,"column_start":5,"column_end":78}},{"value":"/ receiving IPv6 packets only. In this case two IPv4 and IPv6 applications","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":34230,"byte_end":34306,"line_start":467,"line_end":467,"column_start":5,"column_end":81}},{"value":"/ can bind the same port at the same time.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":34311,"byte_end":34355,"line_start":468,"line_end":468,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":34360,"byte_end":34363,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ If this is set to `false` then the socket can be used to send and","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":34368,"byte_end":34437,"line_start":470,"line_end":470,"column_start":5,"column_end":74}},{"value":"/ receive packets from an IPv4-mapped IPv6 address.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":34442,"byte_end":34495,"line_start":471,"line_end":471,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":34753,"byte_end":34765,"line_start":479,"line_end":479,"column_start":12,"column_end":24},"name":"read_timeout","qualname":"<Socket>::read_timeout","value":"fn (&self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the read timeout of this socket.","sig":null,"attributes":[{"value":"/ Returns the read timeout of this socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":34612,"byte_end":34656,"line_start":476,"line_end":476,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":34661,"byte_end":34664,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ If the timeout is `None`, then `read` calls will block indefinitely.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":34669,"byte_end":34741,"line_start":478,"line_end":478,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":35083,"byte_end":35099,"line_start":488,"line_end":488,"column_start":12,"column_end":28},"name":"set_read_timeout","qualname":"<Socket>::set_read_timeout","value":"fn (&self, dur: Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the read timeout to the timeout specified.","sig":null,"attributes":[{"value":"/ Sets the read timeout to the timeout specified.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":34852,"byte_end":34903,"line_start":483,"line_end":483,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":34908,"byte_end":34911,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ If the value specified is `None`, then `read` calls will block","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":34916,"byte_end":34982,"line_start":485,"line_end":485,"column_start":5,"column_end":71}},{"value":"/ indefinitely. It is an error to pass the zero `Duration` to this","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":34987,"byte_end":35055,"line_start":486,"line_end":486,"column_start":5,"column_end":73}},{"value":"/ method.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":35060,"byte_end":35071,"line_start":487,"line_end":487,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":35345,"byte_end":35358,"line_start":495,"line_end":495,"column_start":12,"column_end":25},"name":"write_timeout","qualname":"<Socket>::write_timeout","value":"fn (&self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the write timeout of this socket.","sig":null,"attributes":[{"value":"/ Returns the write timeout of this socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":35202,"byte_end":35247,"line_start":492,"line_end":492,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":35252,"byte_end":35255,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ If the timeout is `None`, then `write` calls will block indefinitely.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":35260,"byte_end":35333,"line_start":494,"line_end":494,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":35679,"byte_end":35696,"line_start":504,"line_end":504,"column_start":12,"column_end":29},"name":"set_write_timeout","qualname":"<Socket>::set_write_timeout","value":"fn (&self, dur: Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the write timeout to the timeout specified.","sig":null,"attributes":[{"value":"/ Sets the write timeout to the timeout specified.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":35446,"byte_end":35498,"line_start":499,"line_end":499,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":35503,"byte_end":35506,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ If the value specified is `None`, then `write` calls will block","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":35511,"byte_end":35578,"line_start":501,"line_end":501,"column_start":5,"column_end":72}},{"value":"/ indefinitely. It is an error to pass the zero `Duration` to this","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":35583,"byte_end":35651,"line_start":502,"line_end":502,"column_start":5,"column_end":73}},{"value":"/ method.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":35656,"byte_end":35667,"line_start":503,"line_end":503,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":36001,"byte_end":36008,"line_start":513,"line_end":513,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<Socket>::nodelay","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":35800,"byte_end":35862,"line_start":508,"line_end":508,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":35867,"byte_end":35870,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`][link].","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":35875,"byte_end":35945,"line_start":510,"line_end":510,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":35950,"byte_end":35953,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_nodelay","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":35958,"byte_end":35989,"line_start":512,"line_end":512,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":36493,"byte_end":36504,"line_start":524,"line_end":524,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<Socket>::set_nodelay","value":"fn (&self, nodelay: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":36078,"byte_end":36140,"line_start":517,"line_end":517,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":36145,"byte_end":36148,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":36153,"byte_end":36222,"line_start":519,"line_end":519,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":36227,"byte_end":36300,"line_start":520,"line_end":520,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":36305,"byte_end":36378,"line_start":521,"line_end":521,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":36383,"byte_end":36458,"line_start":522,"line_end":522,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":36463,"byte_end":36481,"line_start":523,"line_end":523,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":36775,"byte_end":36784,"line_start":532,"line_end":532,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<Socket>::broadcast","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":36598,"byte_end":36662,"line_start":528,"line_end":528,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":36667,"byte_end":36670,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ When enabled, this socket is allowed to send packets to a broadcast","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":36675,"byte_end":36746,"line_start":530,"line_end":530,"column_start":5,"column_end":76}},{"value":"/ address.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":36751,"byte_end":36763,"line_start":531,"line_end":531,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":37071,"byte_end":37084,"line_start":542,"line_end":542,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<Socket>::set_broadcast","value":"fn (&self, broadcast: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":36856,"byte_end":36920,"line_start":536,"line_end":536,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":36925,"byte_end":36928,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":36933,"byte_end":36980,"line_start":538,"line_end":538,"column_start":5,"column_end":52}},{"value":"/ [`set_broadcast`][link].","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":36985,"byte_end":37013,"line_start":539,"line_end":539,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":37018,"byte_end":37021,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_broadcast","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":37026,"byte_end":37059,"line_start":541,"line_end":541,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":37420,"byte_end":37437,"line_start":552,"line_end":552,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<Socket>::multicast_loop_v4","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":37184,"byte_end":37253,"line_start":546,"line_end":546,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":37258,"byte_end":37261,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":37266,"byte_end":37313,"line_start":548,"line_end":548,"column_start":5,"column_end":52}},{"value":"/ [`set_multicast_loop_v4`][link].","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":37318,"byte_end":37354,"line_start":549,"line_end":549,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":37359,"byte_end":37362,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_multicast_loop_v4","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":37367,"byte_end":37408,"line_start":551,"line_end":551,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":37749,"byte_end":37770,"line_start":560,"line_end":560,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<Socket>::set_multicast_loop_v4","value":"fn (&self, multicast_loop_v4: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":37517,"byte_end":37586,"line_start":556,"line_end":556,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":37591,"byte_end":37594,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ If enabled, multicast packets will be looped back to the local socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":37599,"byte_end":37673,"line_start":558,"line_end":558,"column_start":5,"column_end":79}},{"value":"/ Note that this may not have any affect on IPv6 sockets.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":37678,"byte_end":37737,"line_start":559,"line_end":559,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":38127,"byte_end":38143,"line_start":570,"line_end":570,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<Socket>::multicast_ttl_v4","value":"fn (&self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":37894,"byte_end":37962,"line_start":564,"line_end":564,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":37967,"byte_end":37970,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":37975,"byte_end":38022,"line_start":566,"line_end":566,"column_start":5,"column_end":52}},{"value":"/ [`set_multicast_ttl_v4`][link].","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":38027,"byte_end":38062,"line_start":567,"line_end":567,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":38067,"byte_end":38070,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_multicast_ttl_v4","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":38075,"byte_end":38115,"line_start":569,"line_end":569,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":38602,"byte_end":38622,"line_start":581,"line_end":581,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<Socket>::set_multicast_ttl_v4","value":"fn (&self, multicast_ttl_v4: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":38221,"byte_end":38289,"line_start":574,"line_end":574,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":38294,"byte_end":38297,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":38302,"byte_end":38372,"line_start":576,"line_end":576,"column_start":5,"column_end":75}},{"value":"/ this socket. The default value is 1 which means that multicast packets","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":38377,"byte_end":38451,"line_start":577,"line_end":577,"column_start":5,"column_end":79}},{"value":"/ don't leave the local network unless explicitly requested.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":38456,"byte_end":38518,"line_start":578,"line_end":578,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":38523,"byte_end":38526,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ Note that this may not have any affect on IPv6 sockets.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":38531,"byte_end":38590,"line_start":580,"line_end":580,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":38979,"byte_end":38996,"line_start":591,"line_end":591,"column_start":12,"column_end":29},"name":"multicast_hops_v6","qualname":"<Socket>::multicast_hops_v6","value":"fn (&self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_HOPS` option for this socket","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_HOPS` option for this socket","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":38742,"byte_end":38812,"line_start":585,"line_end":585,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":38817,"byte_end":38820,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":38825,"byte_end":38872,"line_start":587,"line_end":587,"column_start":5,"column_end":52}},{"value":"/ [`set_multicast_hops_v6`][link].","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":38877,"byte_end":38913,"line_start":588,"line_end":588,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":38918,"byte_end":38921,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_multicast_hops_v6","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":38926,"byte_end":38967,"line_start":590,"line_end":590,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":39388,"byte_end":39409,"line_start":600,"line_end":600,"column_start":12,"column_end":33},"name":"set_multicast_hops_v6","qualname":"<Socket>::set_multicast_hops_v6","value":"fn (&self, hops: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_HOPS` option for this socket","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_HOPS` option for this socket","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":39075,"byte_end":39145,"line_start":595,"line_end":595,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":39150,"byte_end":39153,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ Indicates the number of \"routers\" multicast packets will transit for","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":39158,"byte_end":39230,"line_start":597,"line_end":597,"column_start":5,"column_end":77}},{"value":"/ this socket. The default value is 1 which means that multicast packets","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":39235,"byte_end":39309,"line_start":598,"line_end":598,"column_start":5,"column_end":79}},{"value":"/ don't leave the local network unless explicitly requested.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":39314,"byte_end":39376,"line_start":599,"line_end":599,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":39812,"byte_end":39827,"line_start":612,"line_end":612,"column_start":12,"column_end":27},"name":"multicast_if_v4","qualname":"<Socket>::multicast_if_v4","value":"fn (&self) -> io::Result<Ipv4Addr>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_IF` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_IF` option for this socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":39506,"byte_end":39573,"line_start":604,"line_end":604,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":39578,"byte_end":39581,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":39586,"byte_end":39633,"line_start":606,"line_end":606,"column_start":5,"column_end":52}},{"value":"/ [`set_multicast_if_v4`][link].","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":39638,"byte_end":39672,"line_start":607,"line_end":607,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":39677,"byte_end":39680,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_multicast_if_v4","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":39685,"byte_end":39724,"line_start":609,"line_end":609,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":39729,"byte_end":39732,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ Returns the interface to use for routing multicast packets.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":39737,"byte_end":39800,"line_start":611,"line_end":611,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":40066,"byte_end":40085,"line_start":619,"line_end":619,"column_start":12,"column_end":31},"name":"set_multicast_if_v4","qualname":"<Socket>::set_multicast_if_v4","value":"fn (&self, interface: &Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_IF` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_IF` option for this socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":39909,"byte_end":39976,"line_start":616,"line_end":616,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":39981,"byte_end":39984,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ Specifies the interface to use for routing multicast packets.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":39989,"byte_end":40054,"line_start":618,"line_end":618,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":40504,"byte_end":40519,"line_start":631,"line_end":631,"column_start":12,"column_end":27},"name":"multicast_if_v6","qualname":"<Socket>::multicast_if_v6","value":"fn (&self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_IF` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_IF` option for this socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":40196,"byte_end":40265,"line_start":623,"line_end":623,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":40270,"byte_end":40273,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":40278,"byte_end":40325,"line_start":625,"line_end":625,"column_start":5,"column_end":52}},{"value":"/ [`set_multicast_if_v6`][link].","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":40330,"byte_end":40364,"line_start":626,"line_end":626,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":40369,"byte_end":40372,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_multicast_if_v6","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":40377,"byte_end":40416,"line_start":628,"line_end":628,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":40421,"byte_end":40424,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ Returns the interface to use for routing multicast packets.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":40429,"byte_end":40492,"line_start":630,"line_end":630,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":40872,"byte_end":40891,"line_start":640,"line_end":640,"column_start":12,"column_end":31},"name":"set_multicast_if_v6","qualname":"<Socket>::set_multicast_if_v6","value":"fn (&self, interface: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_IF` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_IF` option for this socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":40596,"byte_end":40665,"line_start":635,"line_end":635,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":40670,"byte_end":40673,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ Specifies the interface to use for routing multicast packets. Unlike ipv4, this","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":40678,"byte_end":40761,"line_start":637,"line_end":637,"column_start":5,"column_end":88}},{"value":"/ is generally required in ipv6 contexts where network routing prefixes may","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":40766,"byte_end":40843,"line_start":638,"line_end":638,"column_start":5,"column_end":82}},{"value":"/ overlap.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":40848,"byte_end":40860,"line_start":639,"line_end":639,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":41234,"byte_end":41251,"line_start":650,"line_end":650,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<Socket>::multicast_loop_v6","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":40996,"byte_end":41067,"line_start":644,"line_end":644,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":41072,"byte_end":41075,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":41080,"byte_end":41127,"line_start":646,"line_end":646,"column_start":5,"column_end":52}},{"value":"/ [`set_multicast_loop_v6`][link].","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":41132,"byte_end":41168,"line_start":647,"line_end":647,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":41173,"byte_end":41176,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_multicast_loop_v6","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":41181,"byte_end":41222,"line_start":649,"line_end":649,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":41567,"byte_end":41588,"line_start":658,"line_end":658,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<Socket>::set_multicast_loop_v6","value":"fn (&self, multicast_loop_v6: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":41331,"byte_end":41402,"line_start":654,"line_end":654,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":41407,"byte_end":41410,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":41415,"byte_end":41491,"line_start":656,"line_end":656,"column_start":5,"column_end":81}},{"value":"/ Note that this may not have any affect on IPv4 sockets.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":41496,"byte_end":41555,"line_start":657,"line_end":657,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":42142,"byte_end":42159,"line_start":669,"line_end":669,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<Socket>::join_multicast_v4","value":"fn (&self, multiaddr: &Ipv4Addr, interface: &Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_ADD_MEMBERSHIP` type.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":41712,"byte_end":41770,"line_start":662,"line_end":662,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":41775,"byte_end":41778,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":41783,"byte_end":41857,"line_start":664,"line_end":664,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":41862,"byte_end":41935,"line_start":665,"line_end":665,"column_start":5,"column_end":78}},{"value":"/ address of the local interface with which the system should join the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":41940,"byte_end":42012,"line_start":666,"line_end":666,"column_start":5,"column_end":77}},{"value":"/ multicast group. If it's equal to `INADDR_ANY` then an appropriate","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":42017,"byte_end":42087,"line_start":667,"line_end":667,"column_start":5,"column_end":75}},{"value":"/ interface is chosen by the system.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":42092,"byte_end":42130,"line_start":668,"line_end":668,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":42617,"byte_end":42634,"line_start":678,"line_end":678,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<Socket>::join_multicast_v6","value":"fn (&self, multiaddr: &Ipv6Addr, interface: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":42301,"byte_end":42361,"line_start":673,"line_end":673,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":42366,"byte_end":42369,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":42374,"byte_end":42448,"line_start":675,"line_end":675,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":42453,"byte_end":42526,"line_start":676,"line_end":676,"column_start":5,"column_end":78}},{"value":"/ index of the interface to join/leave (or 0 to indicate any interface).","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":42531,"byte_end":42605,"line_start":677,"line_end":677,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":42988,"byte_end":43006,"line_start":688,"line_end":688,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<Socket>::leave_multicast_v4","value":"fn (&self, multiaddr: &Ipv4Addr, interface: &Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_DROP_MEMBERSHIP` type.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":42770,"byte_end":42829,"line_start":682,"line_end":682,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":42834,"byte_end":42837,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":42842,"byte_end":42889,"line_start":684,"line_end":684,"column_start":5,"column_end":52}},{"value":"/ [`join_multicast_v4`][link].","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":42894,"byte_end":42926,"line_start":685,"line_end":685,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":42931,"byte_end":42934,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.join_multicast_v4","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":42939,"byte_end":42976,"line_start":687,"line_end":687,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":43369,"byte_end":43387,"line_start":698,"line_end":698,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<Socket>::leave_multicast_v6","value":"fn (&self, multiaddr: &Ipv6Addr, interface: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":43149,"byte_end":43210,"line_start":692,"line_end":692,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":43215,"byte_end":43218,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":43223,"byte_end":43270,"line_start":694,"line_end":694,"column_start":5,"column_end":52}},{"value":"/ [`join_multicast_v6`][link].","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":43275,"byte_end":43307,"line_start":695,"line_end":695,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":43312,"byte_end":43315,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.join_multicast_v6","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":43320,"byte_end":43357,"line_start":697,"line_end":697,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":43621,"byte_end":43627,"line_start":704,"line_end":704,"column_start":12,"column_end":18},"name":"linger","qualname":"<Socket>::linger","value":"fn (&self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Reads the linger duration for this socket by getting the SO_LINGER\n option\n","sig":null,"attributes":[{"value":"/ Reads the linger duration for this socket by getting the SO_LINGER","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":43524,"byte_end":43594,"line_start":702,"line_end":702,"column_start":5,"column_end":75}},{"value":"/ option","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":43599,"byte_end":43609,"line_start":703,"line_end":703,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":43795,"byte_end":43805,"line_start":709,"line_end":709,"column_start":12,"column_end":22},"name":"set_linger","qualname":"<Socket>::set_linger","value":"fn (&self, dur: Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the linger duration of this socket by setting the SO_LINGER option\n","sig":null,"attributes":[{"value":"/ Sets the linger duration of this socket by setting the SO_LINGER option","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":43708,"byte_end":43783,"line_start":708,"line_end":708,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":43965,"byte_end":43978,"line_start":714,"line_end":714,"column_start":12,"column_end":25},"name":"reuse_address","qualname":"<Socket>::reuse_address","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Check the `SO_REUSEADDR` option on this socket.\n","sig":null,"attributes":[{"value":"/ Check the `SO_REUSEADDR` option on this socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":43902,"byte_end":43953,"line_start":713,"line_end":713,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":44346,"byte_end":44363,"line_start":723,"line_end":723,"column_start":12,"column_end":29},"name":"set_reuse_address","qualname":"<Socket>::set_reuse_address","value":"fn (&self, reuse: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set value for the `SO_REUSEADDR` option on this socket.","sig":null,"attributes":[{"value":"/ Set value for the `SO_REUSEADDR` option on this socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":44054,"byte_end":44113,"line_start":718,"line_end":718,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":44118,"byte_end":44121,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ This indicates that futher calls to `bind` may allow reuse of local","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":44126,"byte_end":44197,"line_start":720,"line_end":720,"column_start":5,"column_end":76}},{"value":"/ addresses. For IPv4 sockets this means that a socket may bind even when","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":44202,"byte_end":44277,"line_start":721,"line_end":721,"column_start":5,"column_end":80}},{"value":"/ there's a socket already listening on this port.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":44282,"byte_end":44334,"line_start":722,"line_end":722,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":44684,"byte_end":44700,"line_start":733,"line_end":733,"column_start":12,"column_end":28},"name":"recv_buffer_size","qualname":"<Socket>::recv_buffer_size","value":"fn (&self) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_RCVBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_RCVBUF` option on this socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":44459,"byte_end":44519,"line_start":727,"line_end":727,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":44524,"byte_end":44527,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":44532,"byte_end":44579,"line_start":729,"line_end":729,"column_start":5,"column_end":52}},{"value":"/ [`set_recv_buffer_size`][link].","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":44584,"byte_end":44619,"line_start":730,"line_end":730,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":44624,"byte_end":44627,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_recv_buffer_size","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":44632,"byte_end":44672,"line_start":732,"line_end":732,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":44962,"byte_end":44982,"line_start":741,"line_end":741,"column_start":12,"column_end":32},"name":"set_recv_buffer_size","qualname":"<Socket>::set_recv_buffer_size","value":"fn (&self, size: usize) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_RCVBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_RCVBUF` option on this socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":44780,"byte_end":44840,"line_start":737,"line_end":737,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":44845,"byte_end":44848,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ Changes the size of the operating system's receive buffer associated","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":44853,"byte_end":44925,"line_start":739,"line_end":739,"column_start":5,"column_end":77}},{"value":"/ with the socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":44930,"byte_end":44950,"line_start":740,"line_end":740,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":45287,"byte_end":45303,"line_start":750,"line_end":750,"column_start":12,"column_end":28},"name":"send_buffer_size","qualname":"<Socket>::send_buffer_size","value":"fn (&self) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_SNDBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_SNDBUF` option on this socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":45080,"byte_end":45140,"line_start":745,"line_end":745,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":45145,"byte_end":45148,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_send_buffer`][link].","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":45153,"byte_end":45227,"line_start":747,"line_end":747,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":45232,"byte_end":45235,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_send_buffer","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":45240,"byte_end":45275,"line_start":749,"line_end":749,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":45562,"byte_end":45582,"line_start":758,"line_end":758,"column_start":12,"column_end":32},"name":"set_send_buffer_size","qualname":"<Socket>::set_send_buffer_size","value":"fn (&self, size: usize) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_SNDBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_SNDBUF` option on this socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":45383,"byte_end":45443,"line_start":754,"line_end":754,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":45448,"byte_end":45451,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ Changes the size of the operating system's send buffer associated with","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":45456,"byte_end":45530,"line_start":756,"line_end":756,"column_start":5,"column_end":79}},{"value":"/ the socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":45535,"byte_end":45550,"line_start":757,"line_end":757,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":45942,"byte_end":45951,"line_start":768,"line_end":768,"column_start":12,"column_end":21},"name":"keepalive","qualname":"<Socket>::keepalive","value":"fn (&self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Returns whether keepalive messages are enabled on this socket, and if so\n the duration of time between them.","sig":null,"attributes":[{"value":"/ Returns whether keepalive messages are enabled on this socket, and if so","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":45680,"byte_end":45756,"line_start":762,"line_end":762,"column_start":5,"column_end":81}},{"value":"/ the duration of time between them.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":45761,"byte_end":45799,"line_start":763,"line_end":763,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":45804,"byte_end":45807,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_keepalive`][link].","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":45812,"byte_end":45884,"line_start":765,"line_end":765,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":45889,"byte_end":45892,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_keepalive","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":45897,"byte_end":45930,"line_start":767,"line_end":767,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":46658,"byte_end":46671,"line_start":784,"line_end":784,"column_start":12,"column_end":25},"name":"set_keepalive","qualname":"<Socket>::set_keepalive","value":"fn (&self, keepalive: Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether keepalive messages are enabled to be sent on this socket.","sig":null,"attributes":[{"value":"/ Sets whether keepalive messages are enabled to be sent on this socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":46035,"byte_end":46109,"line_start":772,"line_end":772,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":46114,"byte_end":46117,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ On Unix, this option will set the `SO_KEEPALIVE` as well as the","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":46122,"byte_end":46189,"line_start":774,"line_end":774,"column_start":5,"column_end":72}},{"value":"/ `TCP_KEEPALIVE` or `TCP_KEEPIDLE` option (depending on your platform).","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":46194,"byte_end":46268,"line_start":775,"line_end":775,"column_start":5,"column_end":79}},{"value":"/ On Windows, this will set the `SIO_KEEPALIVE_VALS` option.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":46273,"byte_end":46335,"line_start":776,"line_end":776,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":46340,"byte_end":46343,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ If `None` is specified then keepalive messages are disabled, otherwise","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":46348,"byte_end":46422,"line_start":778,"line_end":778,"column_start":5,"column_end":79}},{"value":"/ the duration specified will be the time to remain idle before sending a","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":46427,"byte_end":46502,"line_start":779,"line_end":779,"column_start":5,"column_end":80}},{"value":"/ TCP keepalive probe.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":46507,"byte_end":46531,"line_start":780,"line_end":780,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":46536,"byte_end":46539,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ Some platforms specify this value in seconds, so sub-second","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":46544,"byte_end":46607,"line_start":782,"line_end":782,"column_start":5,"column_end":68}},{"value":"/ specifications may be omitted.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":46612,"byte_end":46646,"line_start":783,"line_end":783,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":47010,"byte_end":47028,"line_start":792,"line_end":792,"column_start":12,"column_end":30},"name":"out_of_band_inline","qualname":"<Socket>::out_of_band_inline","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_OOBINLINE` flag of the underlying socket.\n For more information about this option, see [`set_out_of_band_inline`][link].","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_OOBINLINE` flag of the underlying socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":46783,"byte_end":46857,"line_start":788,"line_end":788,"column_start":5,"column_end":79}},{"value":"/ For more information about this option, see [`set_out_of_band_inline`][link].","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":46862,"byte_end":46943,"line_start":789,"line_end":789,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":46948,"byte_end":46951,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_out_of_band_inline","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":46956,"byte_end":46998,"line_start":791,"line_end":791,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":47409,"byte_end":47431,"line_start":802,"line_end":802,"column_start":12,"column_end":34},"name":"set_out_of_band_inline","qualname":"<Socket>::set_out_of_band_inline","value":"fn (&self, oob_inline: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the `SO_OOBINLINE` flag of the underlying socket.\n as per RFC6093, TCP sockets using the Urgent mechanism\n are encouraged to set this flag.","sig":null,"attributes":[{"value":"/ Sets the `SO_OOBINLINE` flag of the underlying socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":47109,"byte_end":47167,"line_start":796,"line_end":796,"column_start":5,"column_end":63}},{"value":"/ as per RFC6093, TCP sockets using the Urgent mechanism","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":47172,"byte_end":47230,"line_start":797,"line_end":797,"column_start":5,"column_end":63}},{"value":"/ are encouraged to set this flag.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":47235,"byte_end":47271,"line_start":798,"line_end":798,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":47276,"byte_end":47279,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ If this flag is not set, the `MSG_OOB` flag is needed","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":47284,"byte_end":47341,"line_start":800,"line_end":800,"column_start":5,"column_end":62}},{"value":"/ while `recv`ing to aquire the out-of-band data.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":47346,"byte_end":47397,"line_start":801,"line_end":801,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":60575,"byte_end":60579,"line_start":78,"line_end":78,"column_start":12,"column_end":16},"name":"unix","qualname":"<Domain>::unix","value":"fn () -> Domain","parent":null,"children":[],"decl_id":null,"docs":" Domain for Unix socket communication, corresponding to `AF_UNIX`.\n","sig":null,"attributes":[{"value":"/ Domain for Unix socket communication, corresponding to `AF_UNIX`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":60494,"byte_end":60563,"line_start":77,"line_end":77,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":60833,"byte_end":60839,"line_start":88,"line_end":88,"column_start":12,"column_end":18},"name":"packet","qualname":"<Domain>::packet","value":"fn () -> Domain","parent":null,"children":[],"decl_id":null,"docs":" Domain for low-level packet interface, corresponding to `AF_PACKET`.","sig":null,"attributes":[{"value":"/ Domain for low-level packet interface, corresponding to `AF_PACKET`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":60635,"byte_end":60707,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":60712,"byte_end":60715,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":60720,"byte_end":60731,"line_start":84,"line_end":84,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":60736,"byte_end":60739,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ This function is only available on Linux.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":60744,"byte_end":60789,"line_start":86,"line_end":86,"column_start":5,"column_end":50}},{"value":"cfg(target_os = \"linux\")","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":60794,"byte_end":60821,"line_start":87,"line_end":87,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":61445,"byte_end":61457,"line_start":117,"line_end":117,"column_start":12,"column_end":24},"name":"non_blocking","qualname":"<Type>::non_blocking","value":"fn (self) -> Type","parent":null,"children":[],"decl_id":null,"docs":" Set `SOCK_NONBLOCK` on the `Type`.","sig":null,"attributes":[{"value":"/ Set `SOCK_NONBLOCK` on the `Type`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":61046,"byte_end":61084,"line_start":103,"line_end":103,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":61089,"byte_end":61092,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":61097,"byte_end":61108,"line_start":105,"line_end":105,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":61113,"byte_end":61116,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ This function is only available on Android, DragonFlyBSD, FreeBSD,","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":61121,"byte_end":61191,"line_start":107,"line_end":107,"column_start":5,"column_end":75}},{"value":"/ Linux, NetBSD and OpenBSD.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":61196,"byte_end":61226,"line_start":108,"line_end":108,"column_start":5,"column_end":35}},{"value":"cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n          \"freebsd\", target_os = \"linux\", target_os = \"netbsd\", target_os =\n          \"openbsd\"))","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":61231,"byte_end":61433,"line_start":109,"line_end":116,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":61926,"byte_end":61933,"line_start":135,"line_end":135,"column_start":12,"column_end":19},"name":"cloexec","qualname":"<Type>::cloexec","value":"fn (self) -> Type","parent":null,"children":[],"decl_id":null,"docs":" Set `SOCK_CLOEXEC` on the `Type`.","sig":null,"attributes":[{"value":"/ Set `SOCK_CLOEXEC` on the `Type`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":61528,"byte_end":61565,"line_start":121,"line_end":121,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":61570,"byte_end":61573,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":61578,"byte_end":61589,"line_start":123,"line_end":123,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":61594,"byte_end":61597,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ This function is only available on Android, DragonFlyBSD, FreeBSD,","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":61602,"byte_end":61672,"line_start":125,"line_end":125,"column_start":5,"column_end":75}},{"value":"/ Linux, NetBSD and OpenBSD.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":61677,"byte_end":61707,"line_start":126,"line_end":126,"column_start":5,"column_end":35}},{"value":"cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n          \"freebsd\", target_os = \"linux\", target_os = \"netbsd\", target_os =\n          \"openbsd\"))","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":61712,"byte_end":61914,"line_start":127,"line_end":134,"column_start":5,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":245},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":62910,"byte_end":62916,"line_start":179,"line_end":179,"column_start":12,"column_end":18},"name":"Socket","qualname":"::sys::Socket","value":"Socket {  }","parent":null,"children":[{"krate":0,"index":246}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":62962,"byte_end":62965,"line_start":184,"line_end":184,"column_start":12,"column_end":15},"name":"new","qualname":"<Socket>::new","value":"fn (family: c_int, ty: c_int, protocol: c_int) -> io::Result<Socket>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":64127,"byte_end":64131,"line_start":211,"line_end":211,"column_start":12,"column_end":16},"name":"pair","qualname":"<Socket>::pair","value":"fn (family: c_int, ty: c_int, protocol: c_int) -> io::Result<(Socket, Socket)>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":64848,"byte_end":64852,"line_start":229,"line_end":229,"column_start":12,"column_end":16},"name":"bind","qualname":"<Socket>::bind","value":"fn (&self, addr: &SockAddr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":65003,"byte_end":65009,"line_start":233,"line_end":233,"column_start":12,"column_end":18},"name":"listen","qualname":"<Socket>::listen","value":"fn (&self, backlog: i32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":65136,"byte_end":65143,"line_start":237,"line_end":237,"column_start":12,"column_end":19},"name":"connect","qualname":"<Socket>::connect","value":"fn (&self, addr: &SockAddr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":65292,"byte_end":65307,"line_start":241,"line_end":241,"column_start":12,"column_end":27},"name":"connect_timeout","qualname":"<Socket>::connect_timeout","value":"fn (&self, addr: &SockAddr, timeout: Duration) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":67885,"byte_end":67895,"line_start":316,"line_end":316,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<Socket>::local_addr","value":"fn (&self) -> io::Result<SockAddr>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":68396,"byte_end":68405,"line_start":332,"line_end":332,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<Socket>::peer_addr","value":"fn (&self) -> io::Result<SockAddr>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":68906,"byte_end":68915,"line_start":348,"line_end":348,"column_start":12,"column_end":21},"name":"try_clone","qualname":"<Socket>::try_clone","value":"fn (&self) -> io::Result<Socket>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":70184,"byte_end":70190,"line_start":380,"line_end":380,"column_start":12,"column_end":18},"name":"accept","qualname":"<Socket>::accept","value":"fn (&self) -> io::Result<(Socket, SockAddr)>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(unused_mut)","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":70152,"byte_end":70172,"line_start":379,"line_end":379,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":71531,"byte_end":71541,"line_start":417,"line_end":417,"column_start":12,"column_end":22},"name":"take_error","qualname":"<Socket>::take_error","value":"fn (&self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":71863,"byte_end":71878,"line_start":428,"line_end":428,"column_start":12,"column_end":27},"name":"set_nonblocking","qualname":"<Socket>::set_nonblocking","value":"fn (&self, nonblocking: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":72334,"byte_end":72342,"line_start":443,"line_end":443,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<Socket>::shutdown","value":"fn (&self, how: Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":72652,"byte_end":72656,"line_start":453,"line_end":453,"column_start":12,"column_end":16},"name":"recv","qualname":"<Socket>::recv","value":"fn (&self, buf: &mut [u8], flags: c_int) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":73039,"byte_end":73043,"line_start":467,"line_end":467,"column_start":12,"column_end":16},"name":"peek","qualname":"<Socket>::peek","value":"fn (&self, buf: &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":73421,"byte_end":73430,"line_start":481,"line_end":481,"column_start":12,"column_end":21},"name":"peek_from","qualname":"<Socket>::peek_from","value":"fn (&self, buf: &mut [u8]) -> io::Result<(usize, SockAddr)>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":73551,"byte_end":73560,"line_start":485,"line_end":485,"column_start":12,"column_end":21},"name":"recv_from","qualname":"<Socket>::recv_from","value":"fn (&self, buf: &mut [u8], flags: c_int) -> io::Result<(usize, SockAddr)>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":74288,"byte_end":74292,"line_start":505,"line_end":505,"column_start":12,"column_end":16},"name":"send","qualname":"<Socket>::send","value":"fn (&self, buf: &[u8], flags: c_int) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":74669,"byte_end":74676,"line_start":519,"line_end":519,"column_start":12,"column_end":19},"name":"send_to","qualname":"<Socket>::send_to","value":"fn (&self, buf: &[u8], flags: c_int, addr: &SockAddr) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":75196,"byte_end":75199,"line_start":537,"line_end":537,"column_start":12,"column_end":15},"name":"ttl","qualname":"<Socket>::ttl","value":"fn (&self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":75379,"byte_end":75386,"line_start":544,"line_end":544,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<Socket>::set_ttl","value":"fn (&self, ttl: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":75560,"byte_end":75563,"line_start":549,"line_end":549,"column_start":12,"column_end":15},"name":"mss","qualname":"<Socket>::mss","value":"fn (&self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(target_os = \"redox\"))","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":75516,"byte_end":75548,"line_start":548,"line_end":548,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":75785,"byte_end":75792,"line_start":557,"line_end":557,"column_start":12,"column_end":19},"name":"set_mss","qualname":"<Socket>::set_mss","value":"fn (&self, mss: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(target_os = \"redox\"))","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":75741,"byte_end":75773,"line_start":556,"line_end":556,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":75966,"byte_end":75970,"line_start":562,"line_end":562,"column_start":12,"column_end":16},"name":"mark","qualname":"<Socket>::mark","value":"fn (&self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(target_os = \"linux\")","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":75927,"byte_end":75954,"line_start":561,"line_end":561,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":76183,"byte_end":76191,"line_start":570,"line_end":570,"column_start":12,"column_end":20},"name":"set_mark","qualname":"<Socket>::set_mark","value":"fn (&self, mark: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(target_os = \"linux\")","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":76144,"byte_end":76171,"line_start":569,"line_end":569,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":76363,"byte_end":76369,"line_start":575,"line_end":575,"column_start":12,"column_end":18},"name":"device","qualname":"<Socket>::device","value":"fn (&self) -> io::Result<Option<CString>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(target_os = \"linux\")","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":76324,"byte_end":76351,"line_start":574,"line_end":574,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":77874,"byte_end":77885,"line_start":611,"line_end":611,"column_start":12,"column_end":23},"name":"bind_device","qualname":"<Socket>::bind_device","value":"fn (&self, interface: Option<&CStr>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(target_os = \"linux\")","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":77835,"byte_end":77862,"line_start":610,"line_end":610,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":78418,"byte_end":78433,"line_start":630,"line_end":630,"column_start":12,"column_end":27},"name":"unicast_hops_v6","qualname":"<Socket>::unicast_hops_v6","value":"fn (&self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":78626,"byte_end":78645,"line_start":637,"line_end":637,"column_start":12,"column_end":31},"name":"set_unicast_hops_v6","qualname":"<Socket>::set_unicast_hops_v6","value":"fn (&self, hops: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":78889,"byte_end":78896,"line_start":647,"line_end":647,"column_start":12,"column_end":19},"name":"only_v6","qualname":"<Socket>::only_v6","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":79082,"byte_end":79093,"line_start":654,"line_end":654,"column_start":12,"column_end":23},"name":"set_only_v6","qualname":"<Socket>::set_only_v6","value":"fn (&self, only_v6: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":79246,"byte_end":79258,"line_start":658,"line_end":658,"column_start":12,"column_end":24},"name":"read_timeout","qualname":"<Socket>::read_timeout","value":"fn (&self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":79459,"byte_end":79475,"line_start":666,"line_end":666,"column_start":12,"column_end":28},"name":"set_read_timeout","qualname":"<Socket>::set_read_timeout","value":"fn (&self, dur: Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":79635,"byte_end":79648,"line_start":670,"line_end":670,"column_start":12,"column_end":25},"name":"write_timeout","qualname":"<Socket>::write_timeout","value":"fn (&self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":79849,"byte_end":79866,"line_start":678,"line_end":678,"column_start":12,"column_end":29},"name":"set_write_timeout","qualname":"<Socket>::set_write_timeout","value":"fn (&self, dur: Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":80026,"byte_end":80033,"line_start":682,"line_end":682,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<Socket>::nodelay","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":80218,"byte_end":80229,"line_start":689,"line_end":689,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<Socket>::set_nodelay","value":"fn (&self, nodelay: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":80381,"byte_end":80390,"line_start":693,"line_end":693,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<Socket>::broadcast","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":80575,"byte_end":80588,"line_start":700,"line_end":700,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<Socket>::set_broadcast","value":"fn (&self, broadcast: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":80744,"byte_end":80761,"line_start":704,"line_end":704,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<Socket>::multicast_loop_v4","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":80951,"byte_end":80972,"line_start":711,"line_end":711,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<Socket>::set_multicast_loop_v4","value":"fn (&self, multicast_loop_v4: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":81232,"byte_end":81248,"line_start":721,"line_end":721,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<Socket>::multicast_ttl_v4","value":"fn (&self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":81438,"byte_end":81458,"line_start":728,"line_end":728,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<Socket>::set_multicast_ttl_v4","value":"fn (&self, multicast_ttl_v4: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":81714,"byte_end":81731,"line_start":738,"line_end":738,"column_start":12,"column_end":29},"name":"multicast_hops_v6","qualname":"<Socket>::multicast_hops_v6","value":"fn (&self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":81926,"byte_end":81947,"line_start":745,"line_end":745,"column_start":12,"column_end":33},"name":"set_multicast_hops_v6","qualname":"<Socket>::set_multicast_hops_v6","value":"fn (&self, hops: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":82101,"byte_end":82116,"line_start":749,"line_end":749,"column_start":12,"column_end":27},"name":"multicast_if_v4","qualname":"<Socket>::multicast_if_v4","value":"fn (&self) -> io::Result<Ipv4Addr>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":82367,"byte_end":82386,"line_start":757,"line_end":757,"column_start":12,"column_end":31},"name":"set_multicast_if_v4","qualname":"<Socket>::set_multicast_if_v4","value":"fn (&self, interface: &Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":82657,"byte_end":82672,"line_start":764,"line_end":764,"column_start":12,"column_end":27},"name":"multicast_if_v6","qualname":"<Socket>::multicast_if_v6","value":"fn (&self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":82865,"byte_end":82884,"line_start":771,"line_end":771,"column_start":12,"column_end":31},"name":"set_multicast_if_v6","qualname":"<Socket>::set_multicast_if_v6","value":"fn (&self, interface: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":83129,"byte_end":83146,"line_start":781,"line_end":781,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<Socket>::multicast_loop_v6","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":83340,"byte_end":83361,"line_start":788,"line_end":788,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<Socket>::set_multicast_loop_v6","value":"fn (&self, multicast_loop_v6: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":83625,"byte_end":83642,"line_start":798,"line_end":798,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<Socket>::join_multicast_v4","value":"fn (&self, multiaddr: &Ipv4Addr, interface: &Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":84082,"byte_end":84099,"line_start":808,"line_end":808,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<Socket>::join_multicast_v6","value":"fn (&self, multiaddr: &Ipv6Addr, interface: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":84464,"byte_end":84482,"line_start":817,"line_end":817,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<Socket>::leave_multicast_v4","value":"fn (&self, multiaddr: &Ipv4Addr, interface: &Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":84923,"byte_end":84941,"line_start":827,"line_end":827,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<Socket>::leave_multicast_v6","value":"fn (&self, multiaddr: &Ipv6Addr, interface: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":85307,"byte_end":85313,"line_start":836,"line_end":836,"column_start":12,"column_end":18},"name":"linger","qualname":"<Socket>::linger","value":"fn (&self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":85511,"byte_end":85521,"line_start":844,"line_end":844,"column_start":12,"column_end":22},"name":"set_linger","qualname":"<Socket>::set_linger","value":"fn (&self, dur: Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":85677,"byte_end":85694,"line_start":848,"line_end":848,"column_start":12,"column_end":29},"name":"set_reuse_address","qualname":"<Socket>::set_reuse_address","value":"fn (&self, reuse: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":85842,"byte_end":85855,"line_start":852,"line_end":852,"column_start":12,"column_end":25},"name":"reuse_address","qualname":"<Socket>::reuse_address","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":86040,"byte_end":86056,"line_start":859,"line_end":859,"column_start":12,"column_end":28},"name":"recv_buffer_size","qualname":"<Socket>::recv_buffer_size","value":"fn (&self) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":86243,"byte_end":86263,"line_start":866,"line_end":866,"column_start":12,"column_end":32},"name":"set_recv_buffer_size","qualname":"<Socket>::set_recv_buffer_size","value":"fn (&self, size: usize) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":86498,"byte_end":86514,"line_start":873,"line_end":873,"column_start":12,"column_end":28},"name":"send_buffer_size","qualname":"<Socket>::send_buffer_size","value":"fn (&self) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":86701,"byte_end":86721,"line_start":880,"line_end":880,"column_start":12,"column_end":32},"name":"set_send_buffer_size","qualname":"<Socket>::set_send_buffer_size","value":"fn (&self, size: usize) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":86956,"byte_end":86965,"line_start":887,"line_end":887,"column_start":12,"column_end":21},"name":"keepalive","qualname":"<Socket>::keepalive","value":"fn (&self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":87347,"byte_end":87360,"line_start":898,"line_end":898,"column_start":12,"column_end":25},"name":"set_keepalive","qualname":"<Socket>::set_keepalive","value":"fn (&self, keepalive: Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":88456,"byte_end":88474,"line_start":934,"line_end":934,"column_start":12,"column_end":30},"name":"out_of_band_inline","qualname":"<Socket>::out_of_band_inline","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":88659,"byte_end":88681,"line_start":941,"line_end":941,"column_start":12,"column_end":34},"name":"set_out_of_band_inline","qualname":"<Socket>::set_out_of_band_inline","value":"fn (&self, oob_inline: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":496},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":3272,"byte_end":3278,"line_start":103,"line_end":103,"column_start":12,"column_end":18},"name":"Domain","qualname":"::Domain","value":"","parent":null,"children":[],"decl_id":null,"docs":" Specification of the communication domain for a socket.","sig":null,"attributes":[{"value":"/ Specification of the communication domain for a socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":2784,"byte_end":2843,"line_start":93,"line_end":93,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":2844,"byte_end":2847,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ This is a newtype wrapper around an integer which provides a nicer API in","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":2848,"byte_end":2925,"line_start":95,"line_end":95,"column_start":1,"column_end":78}},{"value":"/ addition to an injection point for documentation. Convenience constructors","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":2926,"byte_end":3004,"line_start":96,"line_end":96,"column_start":1,"column_end":79}},{"value":"/ such as `Domain::ipv4`, `Domain::ipv6`, etc, are provided to avoid reaching","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":3005,"byte_end":3084,"line_start":97,"line_end":97,"column_start":1,"column_end":80}},{"value":"/ into libc for various constants.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":3085,"byte_end":3121,"line_start":98,"line_end":98,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":3122,"byte_end":3125,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ This type is freely interconvertible with C's `int` type, however, if a raw","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":3126,"byte_end":3205,"line_start":100,"line_end":100,"column_start":1,"column_end":80}},{"value":"/ value needs to be provided.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":3206,"byte_end":3237,"line_start":101,"line_end":101,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":3380,"byte_end":3384,"line_start":107,"line_end":107,"column_start":12,"column_end":16},"name":"ipv4","qualname":"<Domain>::ipv4","value":"fn () -> Domain","parent":null,"children":[],"decl_id":null,"docs":" Domain for IPv4 communication, corresponding to `AF_INET`.\n","sig":null,"attributes":[{"value":"/ Domain for IPv4 communication, corresponding to `AF_INET`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":3306,"byte_end":3368,"line_start":106,"line_end":106,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":3514,"byte_end":3518,"line_start":112,"line_end":112,"column_start":12,"column_end":16},"name":"ipv6","qualname":"<Domain>::ipv6","value":"fn () -> Domain","parent":null,"children":[],"decl_id":null,"docs":" Domain for IPv6 communication, corresponding to `AF_INET6`.\n","sig":null,"attributes":[{"value":"/ Domain for IPv6 communication, corresponding to `AF_INET6`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":3439,"byte_end":3502,"line_start":111,"line_end":111,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":502},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":4233,"byte_end":4237,"line_start":139,"line_end":139,"column_start":12,"column_end":16},"name":"Type","qualname":"::Type","value":"","parent":null,"children":[],"decl_id":null,"docs":" Specification of communication semantics on a socket.","sig":null,"attributes":[{"value":"/ Specification of communication semantics on a socket.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":3748,"byte_end":3805,"line_start":129,"line_end":129,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":3806,"byte_end":3809,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ This is a newtype wrapper around an integer which provides a nicer API in","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":3810,"byte_end":3887,"line_start":131,"line_end":131,"column_start":1,"column_end":78}},{"value":"/ addition to an injection point for documentation. Convenience constructors","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":3888,"byte_end":3966,"line_start":132,"line_end":132,"column_start":1,"column_end":79}},{"value":"/ such as `Type::stream`, `Type::dgram`, etc, are provided to avoid reaching","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":3967,"byte_end":4045,"line_start":133,"line_end":133,"column_start":1,"column_end":79}},{"value":"/ into libc for various constants.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":4046,"byte_end":4082,"line_start":134,"line_end":134,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":4083,"byte_end":4086,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ This type is freely interconvertible with C's `int` type, however, if a raw","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":4087,"byte_end":4166,"line_start":136,"line_end":136,"column_start":1,"column_end":80}},{"value":"/ value needs to be provided.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":4167,"byte_end":4198,"line_start":137,"line_end":137,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":4363,"byte_end":4369,"line_start":145,"line_end":145,"column_start":12,"column_end":18},"name":"stream","qualname":"<Type>::stream","value":"fn () -> Type","parent":null,"children":[],"decl_id":null,"docs":" Type corresponding to `SOCK_STREAM`.","sig":null,"attributes":[{"value":"/ Type corresponding to `SOCK_STREAM`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":4263,"byte_end":4303,"line_start":142,"line_end":142,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":4308,"byte_end":4311,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ Used for protocols such as TCP.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":4316,"byte_end":4351,"line_start":144,"line_end":144,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":4523,"byte_end":4528,"line_start":152,"line_end":152,"column_start":12,"column_end":17},"name":"dgram","qualname":"<Type>::dgram","value":"fn () -> Type","parent":null,"children":[],"decl_id":null,"docs":" Type corresponding to `SOCK_DGRAM`.","sig":null,"attributes":[{"value":"/ Type corresponding to `SOCK_DGRAM`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":4424,"byte_end":4463,"line_start":149,"line_end":149,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":4468,"byte_end":4471,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ Used for protocols such as UDP.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":4476,"byte_end":4511,"line_start":151,"line_end":151,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":4637,"byte_end":4646,"line_start":157,"line_end":157,"column_start":12,"column_end":21},"name":"seqpacket","qualname":"<Type>::seqpacket","value":"fn () -> Type","parent":null,"children":[],"decl_id":null,"docs":" Type corresponding to `SOCK_SEQPACKET`.\n","sig":null,"attributes":[{"value":"/ Type corresponding to `SOCK_SEQPACKET`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":4582,"byte_end":4625,"line_start":156,"line_end":156,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":4790,"byte_end":4793,"line_start":163,"line_end":163,"column_start":12,"column_end":15},"name":"raw","qualname":"<Type>::raw","value":"fn () -> Type","parent":null,"children":[],"decl_id":null,"docs":" Type corresponding to `SOCK_RAW`.\n","sig":null,"attributes":[{"value":"/ Type corresponding to `SOCK_RAW`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":4704,"byte_end":4741,"line_start":161,"line_end":161,"column_start":5,"column_end":42}},{"value":"cfg(not(target_os = \"redox\"))","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":4746,"byte_end":4778,"line_start":162,"line_end":162,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":508},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":5367,"byte_end":5375,"line_start":188,"line_end":188,"column_start":12,"column_end":20},"name":"Protocol","qualname":"::Protocol","value":"","parent":null,"children":[],"decl_id":null,"docs":" Protocol specification used for creating sockets via `Socket::new`.","sig":null,"attributes":[{"value":"/ Protocol specification used for creating sockets via `Socket::new`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":5009,"byte_end":5080,"line_start":180,"line_end":180,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":5081,"byte_end":5084,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ This is a newtype wrapper around an integer which provides a nicer API in","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":5085,"byte_end":5162,"line_start":182,"line_end":182,"column_start":1,"column_end":78}},{"value":"/ addition to an injection point for documentation.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":5163,"byte_end":5216,"line_start":183,"line_end":183,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":5217,"byte_end":5220,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ This type is freely interconvertible with C's `int` type, however, if a raw","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":5221,"byte_end":5300,"line_start":185,"line_end":185,"column_start":1,"column_end":80}},{"value":"/ value needs to be provided.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":5301,"byte_end":5332,"line_start":186,"line_end":186,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":5456,"byte_end":5462,"line_start":192,"line_end":192,"column_start":12,"column_end":18},"name":"icmpv4","qualname":"<Protocol>::icmpv4","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Protocol corresponding to `ICMPv4`.\n","sig":null,"attributes":[{"value":"/ Protocol corresponding to `ICMPv4`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":5405,"byte_end":5444,"line_start":191,"line_end":191,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":5573,"byte_end":5579,"line_start":197,"line_end":197,"column_start":12,"column_end":18},"name":"icmpv6","qualname":"<Protocol>::icmpv6","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Protocol corresponding to `ICMPv6`.\n","sig":null,"attributes":[{"value":"/ Protocol corresponding to `ICMPv6`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":5522,"byte_end":5561,"line_start":196,"line_end":196,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":5689,"byte_end":5692,"line_start":202,"line_end":202,"column_start":12,"column_end":15},"name":"tcp","qualname":"<Protocol>::tcp","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Protocol corresponding to `TCP`.\n","sig":null,"attributes":[{"value":"/ Protocol corresponding to `TCP`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":5641,"byte_end":5677,"line_start":201,"line_end":201,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":5799,"byte_end":5802,"line_start":207,"line_end":207,"column_start":12,"column_end":15},"name":"udp","qualname":"<Protocol>::udp","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Protocol corresponding to `UDP`.\n","sig":null,"attributes":[{"value":"/ Protocol corresponding to `UDP`.","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":5751,"byte_end":5787,"line_start":206,"line_end":206,"column_start":5,"column_end":41}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sockaddr.rs","byte_start":7242,"byte_end":7250,"line_start":34,"line_end":34,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sockaddr.rs","byte_start":7651,"byte_end":7659,"line_start":47,"line_end":47,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sockaddr.rs","byte_start":13086,"byte_end":13094,"line_start":202,"line_end":202,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sockaddr.rs","byte_start":14451,"byte_end":14459,"line_start":241,"line_end":241,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sockaddr.rs","byte_start":16173,"byte_end":16181,"line_start":292,"line_end":292,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":19012,"byte_end":19018,"line_start":58,"line_end":58,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":48585,"byte_end":48591,"line_start":837,"line_end":837,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":48843,"byte_end":48849,"line_start":849,"line_end":849,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":49262,"byte_end":49268,"line_start":869,"line_end":869,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":49395,"byte_end":49401,"line_start":875,"line_end":875,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":49554,"byte_end":49560,"line_start":883,"line_end":883,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":49713,"byte_end":49719,"line_start":891,"line_end":891,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":50430,"byte_end":50439,"line_start":926,"line_end":926,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":50554,"byte_end":50565,"line_start":932,"line_end":932,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":50682,"byte_end":50691,"line_start":938,"line_end":938,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":60481,"byte_end":60487,"line_start":76,"line_end":76,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":240},{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":61035,"byte_end":61039,"line_start":102,"line_end":102,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":243},{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":62942,"byte_end":62948,"line_start":183,"line_end":183,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":252},{"krate":0,"index":254},{"krate":0,"index":256},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":263},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":89649,"byte_end":89655,"line_start":975,"line_end":975,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":90165,"byte_end":90171,"line_start":996,"line_end":996,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":336},{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":90586,"byte_end":90592,"line_start":1016,"line_end":1016,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":90972,"byte_end":90978,"line_start":1030,"line_end":1030,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":345}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":91060,"byte_end":91066,"line_start":1036,"line_end":1036,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":91205,"byte_end":91211,"line_start":1044,"line_end":1044,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":91322,"byte_end":91328,"line_start":1050,"line_end":1050,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":351}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":91432,"byte_end":91438,"line_start":1056,"line_end":1056,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":91545,"byte_end":91551,"line_start":1062,"line_end":1062,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":91711,"byte_end":91717,"line_start":1070,"line_end":1070,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":91850,"byte_end":91859,"line_start":1078,"line_end":1078,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":92015,"byte_end":92026,"line_start":1084,"line_end":1084,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":361}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":92186,"byte_end":92195,"line_start":1090,"line_end":1090,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":92933,"byte_end":92939,"line_start":1117,"line_end":1117,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":93092,"byte_end":93098,"line_start":1123,"line_end":1123,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":93251,"byte_end":93257,"line_start":1129,"line_end":1129,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":3293,"byte_end":3299,"line_start":105,"line_end":105,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":389},{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":3593,"byte_end":3599,"line_start":117,"line_end":117,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":3685,"byte_end":3690,"line_start":123,"line_end":123,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":4252,"byte_end":4256,"line_start":141,"line_end":141,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":4864,"byte_end":4868,"line_start":168,"line_end":168,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":4948,"byte_end":4953,"line_start":174,"line_end":174,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":5390,"byte_end":5398,"line_start":190,"line_end":190,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":5880,"byte_end":5888,"line_start":212,"line_end":212,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":5980,"byte_end":5985,"line_start":218,"line_end":218,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sockaddr.rs","byte_start":7242,"byte_end":7250,"line_start":34,"line_end":34,"column_start":21,"column_end":29},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":28},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sockaddr.rs","byte_start":7651,"byte_end":7659,"line_start":47,"line_end":47,"column_start":6,"column_end":14},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":28},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sockaddr.rs","byte_start":13086,"byte_end":13094,"line_start":202,"line_end":202,"column_start":29,"column_end":37},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":28},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sockaddr.rs","byte_start":14451,"byte_end":14459,"line_start":241,"line_end":241,"column_start":29,"column_end":37},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":28},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sockaddr.rs","byte_start":16173,"byte_end":16181,"line_start":292,"line_end":292,"column_start":27,"column_end":35},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":28},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":19012,"byte_end":19018,"line_start":58,"line_end":58,"column_start":6,"column_end":12},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":69},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":48585,"byte_end":48591,"line_start":837,"line_end":837,"column_start":15,"column_end":21},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":69},"to":{"krate":1,"index":2932}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":48843,"byte_end":48849,"line_start":849,"line_end":849,"column_start":16,"column_end":22},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":69},"to":{"krate":1,"index":2991}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":49262,"byte_end":49268,"line_start":869,"line_end":869,"column_start":21,"column_end":27},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":69},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":49395,"byte_end":49401,"line_start":875,"line_end":875,"column_start":31,"column_end":37},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":69},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":49554,"byte_end":49560,"line_start":883,"line_end":883,"column_start":33,"column_end":39},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":69},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":49713,"byte_end":49719,"line_start":891,"line_end":891,"column_start":31,"column_end":37},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":69},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":50430,"byte_end":50439,"line_start":926,"line_end":926,"column_start":28,"column_end":37},"kind":{"Impl":{"id":12}},"from":{"krate":1,"index":3529},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":50554,"byte_end":50565,"line_start":932,"line_end":932,"column_start":28,"column_end":39},"kind":{"Impl":{"id":13}},"from":{"krate":1,"index":3532},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/socket.rs","byte_start":50682,"byte_end":50691,"line_start":938,"line_end":938,"column_start":28,"column_end":37},"kind":{"Impl":{"id":14}},"from":{"krate":1,"index":3626},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":60481,"byte_end":60487,"line_start":76,"line_end":76,"column_start":6,"column_end":12},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":496},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":61035,"byte_end":61039,"line_start":102,"line_end":102,"column_start":6,"column_end":10},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":502},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":62942,"byte_end":62948,"line_start":183,"line_end":183,"column_start":6,"column_end":12},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":89649,"byte_end":89655,"line_start":975,"line_end":975,"column_start":15,"column_end":21},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":245},"to":{"krate":1,"index":2932}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":90165,"byte_end":90171,"line_start":996,"line_end":996,"column_start":16,"column_end":22},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":245},"to":{"krate":1,"index":2991}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":90586,"byte_end":90592,"line_start":1016,"line_end":1016,"column_start":21,"column_end":27},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":245},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":90972,"byte_end":90978,"line_start":1030,"line_end":1030,"column_start":18,"column_end":24},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":245},"to":{"krate":1,"index":8287}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":91060,"byte_end":91066,"line_start":1036,"line_end":1036,"column_start":20,"column_end":26},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":245},"to":{"krate":1,"index":8291}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":91205,"byte_end":91211,"line_start":1044,"line_end":1044,"column_start":20,"column_end":26},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":245},"to":{"krate":1,"index":8289}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":91322,"byte_end":91328,"line_start":1050,"line_end":1050,"column_start":25,"column_end":31},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":69},"to":{"krate":1,"index":8287}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":91432,"byte_end":91438,"line_start":1056,"line_end":1056,"column_start":27,"column_end":33},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":69},"to":{"krate":1,"index":8291}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":91545,"byte_end":91551,"line_start":1062,"line_end":1062,"column_start":27,"column_end":33},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":69},"to":{"krate":1,"index":8289}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":91711,"byte_end":91717,"line_start":1070,"line_end":1070,"column_start":15,"column_end":21},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":245},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":91850,"byte_end":91859,"line_start":1078,"line_end":1078,"column_start":28,"column_end":37},"kind":{"Impl":{"id":31}},"from":{"krate":1,"index":3529},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":92015,"byte_end":92026,"line_start":1084,"line_end":1084,"column_start":28,"column_end":39},"kind":{"Impl":{"id":32}},"from":{"krate":1,"index":3532},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":92186,"byte_end":92195,"line_start":1090,"line_end":1090,"column_start":28,"column_end":37},"kind":{"Impl":{"id":33}},"from":{"krate":1,"index":3626},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":92933,"byte_end":92939,"line_start":1117,"line_end":1117,"column_start":31,"column_end":37},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":245},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":93092,"byte_end":93098,"line_start":1123,"line_end":1123,"column_start":33,"column_end":39},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":245},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/sys/unix.rs","byte_start":93251,"byte_end":93257,"line_start":1129,"line_end":1129,"column_start":31,"column_end":37},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":245},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":3293,"byte_end":3299,"line_start":105,"line_end":105,"column_start":6,"column_end":12},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":496},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":3593,"byte_end":3599,"line_start":117,"line_end":117,"column_start":22,"column_end":28},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":496},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":3685,"byte_end":3690,"line_start":123,"line_end":123,"column_start":23,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":15,"index":39},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":4252,"byte_end":4256,"line_start":141,"line_end":141,"column_start":6,"column_end":10},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":502},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":4864,"byte_end":4868,"line_start":168,"line_end":168,"column_start":22,"column_end":26},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":502},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":4948,"byte_end":4953,"line_start":174,"line_end":174,"column_start":21,"column_end":26},"kind":{"Impl":{"id":42}},"from":{"krate":15,"index":39},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":5390,"byte_end":5398,"line_start":190,"line_end":190,"column_start":6,"column_end":14},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":508},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":5880,"byte_end":5888,"line_start":212,"line_end":212,"column_start":22,"column_end":30},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":508},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/flux/.cargo/registry/src/github.com-1ecc6299db9ec823/socket2-0.3.19/src/lib.rs","byte_start":5980,"byte_end":5985,"line_start":218,"line_end":218,"column_start":25,"column_end":30},"kind":{"Impl":{"id":45}},"from":{"krate":15,"index":39},"to":{"krate":2,"index":1823}}]}